%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Game_Background_02.eps
%%Creator: Adobe Illustrator(R) 21.1
%%For: ABCDetective
%%CreationDate: 5/15/2018
%%BoundingBox: 0 0 1536 4000
%%HiResBoundingBox: 0 0 1536 3999.9998
%%CropBox: 0 0 1536 3999.9998
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.1.0 x326 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 52 128 8%%BeginData: 15542 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C456F6F936F6F936F7CFFA8A8A9AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF
%A8AFA9AFA8AFA9AFA8AFA9AFA9AFA8FF7D6F936F6F936F6FA1446F6F9368
%93687DA8CA84A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8
%A984AFA8A984A8A8A14493FD046F68A16968936F6F6F937DCFA8A8A9AFA8
%AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9A9A7FFA1
%FD046F936F6FA1446F68936893687DA8A87EAFA8A984A9A8A984A9A8A984
%A9A8A984A9A8A984A9A8A984A9A8A984A984A8A8A1449368936F6F68A16F
%6F93936F93937DFFA8A9A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF
%A9AFA8AFA9AFA8AFA9AFA7FFA16F6F936F936F6FA1686F6F936F9368A1A8
%A87EAFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984
%AFA8A8A8A1689368936F6F68A16F6F936F6F936F76FFA8A8A9AFA9AFA8AF
%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA8FF7D6F936F
%6F936F6FA1446F6F934493687DA8A884A984A9A8A984A9A8A984A9A8A984
%A9A8A984A9A8A984A9A8A984A9A8A984A8A8A14493686F6F6F68A16F6F93
%6F6F936F7CFFA8A8A9AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF
%A9AFA8AFA9AFA9AFA8FFA16F936F6F936F6FA1446F6F936893687DA8CA84
%A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984
%A8A8A14493FD046F68A16968936F6F6F937DCFA8A8A9AFA8AFA9AFA8AFA9
%AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9A9A7FFA1FD046F936F6F
%A1446F68936893687DA8A87EAFA8A984A9A8A984A9A8A984A9A8A984A9A8
%A984A9A8A984A9A8A984A984A8A8A1449368936F6F68A16F6F93936F9393
%7DFFA8A9A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF
%A8AFA9AFA7FFA16F6F936F936F6FA1686F6F936F9368A1A8A87EAFA8A984
%AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A8A8A168
%9368936F6F68A16F6F936F6F936F76FFA8A8A9AFA9AFA8AFA9AFA8AFA9AF
%A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA8CF7D6F936F6F936F6FA144
%6F6F934493687DA8A884A984A9A8A984A9A8A984A9A8A984A9A8A984A9A8
%A984A9A8A984A9A8A984A8A8A14493686F6F6F68A16F6F936F6F936F7CFF
%A8A8A9AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF
%A9AFA8FF7D6F936F6F936F6FA1446F6F936893687DA8CA84A984AFA8A984
%AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984A8A8A14493FD
%046F68A16968936F6F6F937DFFA8A8A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8
%AFA9AFA8AFA9AFA8AFA9AFA8AFA9A9A7FFA1FD046F936F6FA1446F689368
%93687DA8A87EAFA8A984A9A8A984A9A8A984A9A8A984A9A8A984A9A8A984
%A9A8A984A984A8A8A1449368936F6F68A16F6F93936F93937DFFA8A9A9AF
%A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA7FF
%A16F93936F936F6FA1686F6F936F9368A1A8A87EAFA8A984AFA8A984AFA8
%A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A8A8A168936F936F6F68
%A26F6F936F6F936F76FFA8A8A9AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF
%A9AFA8AFA9AFA8AFA9AFA8AFA8CF7D76527651767575A1446F6893449368
%7DA8CA84A984A9A8A984A9A8A984A9A8A984A9A8A984A9A8A984A9A8A984
%A9A8A984A8A8A15252517551764BA89A6F9A759A9A9A7DCAA7A8A9AFA9AF
%A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA9AFA8CFA17D
%5276517C5276A7A8CFA8CAA8CFA8CAA8CAA1A984AFA8A984AFA8A984AFA8
%A984AFA8A984AFA8A984AFA8A984AFA8A984A8A8A15176517551764BA8CA
%A8CFA8CFA8CFA8CAA8A8A8AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF
%A9AFA8AFA9AFA8AFA9A9A7CFA17C757651765176A84B4B4B764B764B7652
%7D7DA9A8A984A9A8A984A9A8A984A9A8A984A9A8A984A9A8A984A9A8A984
%A984A8A8A175764B7651754BA86844FD056F76A8A8A9A9AFA8AFA9AFA8AF
%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA7FFA17C75767576
%5176A8686F6F936F9368A1A8A87EAFA8A984AFA8A984AFA8A984AFA8A984
%AFA8A984AFA8A984AFA8A984AFA8A8A8A175764B7651754BA86F6F936F6F
%936F76FFA8A8A9AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF
%A8AFA9AFA8AFA8A87D7C757651765175A7446F6F934493687DA8A884A984
%A9A8A984A9A8A984A9A8A984A9A8A984A9A8A984A9A8A984A9A8A984A8A8
%A14B7651764B764BA86F6F936F6F936F7CFFA8A8A9AFA9AFA8AFA9AFA8AF
%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA9AFA8CF7D6F936F6F9A6F6F
%A1446F6F936893687DA8CA84A984AFA8A984AFA8A984AFA8A984AFA8A984
%AFA8A984AFA8A984AFA8A984A8A8A14493FD046F68A16968936F6F6F937D
%FFA8A8A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8
%AFA9A9A7FFA1FD046F936F6FA1446F69936893687DA8A87EAFA8A984A9A8
%A984A9A8A984A9A8A984A9A8A984A9A8A984A9A8A984A984A8A8A1449368
%936F6F68A16F6F93936F93937DFFA8A9A9AFA8AFA9AFA8AFA9AFA8AFA9AF
%A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA7FFA16F6F936F936F6FA1686F6F
%936F9368A1A8A87EAFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8
%A984AFA8A984AFA8A8A8A1689368936F6F68A16F6F936F6F936F76FFA8A8
%A9AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF
%A8FF7D6F936F6F936F6FA1446F6F934493687DA8A884A984A9A8A984A9A8
%A984A9A8A984A9A8A984A9A8A984A9A8A984A9A8A984A8A8A14493686F6F
%6F68A16F6F936F6F936F7CFFA8A8A9AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF
%A8AFA9AFA8AFA9AFA8AFA9AFA9AFA8FFA16F936F6F936F6FA1446F6F9368
%93687DA8CA84A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8
%A984AFA8A984A8A8A14493FD046F68A16968936F6F6F937DCFA8A8A9AFA8
%AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9A9A7FFA1
%FD046F936F6FA1446F69936893687DA8A87EAFA8A984A9A8A984A9A8A984
%A9A8A984A9A8A984A9A8A984A9A8A984A984A8A8A1449368936F6F68A16F
%6F93936F93937DFFA8A9A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF
%A9AFA8AFA9AFA8AFA9AFA7FFA16F6F936F936F6FA1686F6F936F9368A1A8
%A87EAFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984
%AFA8A8A8A1689368936F6F68A16F6F936F6F936F76FFA8A8A9AFA9AFA8AF
%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA8FF7D6F936F
%68936868A1446F6F934493687DA8A884A984A9A8A984A9A8A984A9A8A984
%A9A8A984A9A8A984A9A8A984A9A8A97DA8A8A176A0769A769A75A86F6F93
%6F6F936F7CFFA8A8A9AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF
%A9AFA8AFA9AFA8A8CACFA8FFCFFFCAFFCFCFA8446F6F936893687DA8CA84
%A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A97D
%A8A7A8A1A8A1A8A1A87DA86968936F6F6F937DFFA8A8A9AFA8AFA9AFA8AF
%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9A97D7D524B4A4B4B4B
%204BA1446F68936893687DA8A87EAFA8A984A9A8A984A9A8A984A9A8A984
%A9A8A984A9A8A984A9A8A984A984A8A8A14493446F6F6F44A16F6F93936F
%93937DFFA8A9A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF
%A9AFA8AFA9AFA7FFA16F93936F936F93A1686F6F936F9368A1A8A87EAFA8
%A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A8A8
%A1689368936F6F68A16F6F936F6F936F76FFA8A8A9AFA9AFA8AFA9AFA8AF
%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA8FF7D6F939A7D9A6F6F
%A1446F6F934493687DA8A884A984A9A8A984A9A8A984A9A8A984A9A8A984
%A9A8A984A9A8A984A9A8A984A8A8A1449A7DA07D6F68A16F6F936F6F936F
%7CFFA8A8A9AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF
%A9AFA9AFA8FF7D6FA17668C3A06FA1446F6F936893687DA8CA84A984AFA8
%A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984A8A8A16F
%A1686F6FA768A16968936F6F6F937DFFA8A8A9AFA8AFA9AFA8AFA9AFA8AF
%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9A9A7FFA176A06F6F99A193A144
%6F69936893687DA8A87EAFA8A984A9A8A984A9A8A984A9A8A984A9A8A984
%A9A8A984A9A8A984A984A8A8A175A0686F6FA16FA16F6F93936F93937DFF
%A8A9A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF
%A9AFA7FFA19AA06F6F9AA199A1686F6F936F9368A1A8A87EAFA8A984AFA8
%A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A8A8A16FA168
%936FA168A16F6F936F6F936F76FFA8A8A9AFA9AFA8AFA9AFA8AFA9AFA8AF
%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA8FF7C76A76F68A1A16FA1446F6F
%934493687DA8CA84A984A9A8A984A9A8A984A9A8A984A9A8A984A9A8A984
%A9A8A984A9A8A984A8A8A14BA17C9AA17568A16F6F936F6F936F7CFFA8A8
%A9AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA9AF
%A8FF7D76999AA09A6F6FA1446F6F936893687DA8CA84A984AFA8A984AFA8
%A984AFA8A984AFA8A984AFA8A984AFA8A984AFA8A984A8A8A16F9A686F68
%6F68A16968936F6F6F937DFFA8A8A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF
%A9AFA8AFA9AFA8AFA9AFA8AFA9A9A7FFA1FD046F936F6FA1446F69936893
%687DA8A87EAFA8A984A9A8A984A9A8A984A9A8A984A9A8A984A9A8A984A9
%A8A984A984A8A8A1449368936F6F68A16F6F93936F93937DFFA8A9A9AFA8
%AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA7FFA1
%6F6F936F936F6FA1686F6F936F9368A1A8A87EAFA8A984AFA8A984AFA8A9
%84AFA8A984AFA8A984AFA8A984AFA8A984AFA8A8A8A1689368936F6F68A1
%6F6F936F6F936F76FFA8A8A9AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9
%AFA8AFA9AFA8AFA9AFA8AFA8FF7D6F936F6F936F6FA1446F6F934493687D
%A8CA84A984A9A8A984A9A8A984A9A8A984A9A8A984A9A8A984A984A984A9
%A8A984A8A8A14493686F6F6F68A16F6F936F6F936F7CFFA8A8A9AFA9AFA8
%AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9FFA9FFCBFFA9AFA8FFA16F93
%6F6F936F6FA1446F6F936893687DA8CA84A984AFA8A984AFA8A984AFA8A9
%84AFA8A9A8AFA8CBA8FFCACBA8FFA8CBA8A8A8A14493FD046F68A1686893
%936F93937CFFA8A8A9AFA8AFA9AFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF
%A8FFA9FFA8FFA9CBA7FFA1FD046F936F6FA14B754B764B754BA1A8A87EFF
%A8A9A8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8A9A8A984A9A8A984A984A8
%A8A1449368936F6F68A1766F767576527D7DCFA8A9A9AFA9FFA9FFA9FFA9
%FFA9FFA9AFA9AFA9AFA9FFA9AFA9AFA9AFA9AFA9AFA7FFA16F6F936F936F
%6FA16F766F75515252A1A8A884AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8AFA8AFA8A8A8A1689368936F6F68A1767576517652
%767DFFA8A8A9AFA9AFA8AFA9AFA8AFA9FFA8FFCBFFA8FFA9AFA8AFA9AFA8
%AFA9AFA9AFA8CF7D6F936F6F936F6FA14B7C51754B7651A1A8CA84AFA8AF
%A8A9A8AFA8A984AFA8CBA8CBA8CBA8CBA8A9A8AFA8A9A8AFA8A984A8A8A1
%4493686F6F6F68A176767C5176767C7DFFA8A9A9FFA9AFA9FFA9AFA9FFA9
%FFCBFFCBFFCBFFCBFFA9FFA9AFA9FFA9AFA9AFA8FF7D6F936F6F936F6FA1
%4B7C51754B7C75A1A8CAA8AFA8AFA8AFA8AFA8CBA8FFA8CBA8FFA8CBA8FF
%A8CBA8FFA8A9A8AFA8AFA8A8A8A14493FD046F68A176757C5176757C7DCF
%A8A9A9AFA8FFA9FFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFCAFFA9AFA8AF
%A9AFA7FFA1FD046F936F6FA151765176517651A1A8A87EAFA8CBA8CBA8CB
%A8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8AFA8A9A8AFA8A8A8A144936893
%6F6F68A176767C7576757C7DFFA8CBA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9
%FFA9FFA9FFA9FFA9FFA9FFA9FFA9AFA7FFA16F6F936F936F6FA1686F6F93
%6F936EA1A8A884AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8A8A8A1689368936F6F68A16969936F6F936F76FFA8A8A9
%FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA9AFA8
%CF7D6F936F6F936F6FA1446F686F4493687CA8A884AFA8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8AFA8A8A8A14493686F6F6F
%68A1A1A1A7A1A7A1A1A1CAA8A8A8FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9
%FFA9AFA9FFA9AFA9FFA9AFA9AFA8FF7D6F936F6F936F6FA1A8FFA8FFA8FF
%A8CFA8FFA7A9A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8A8A8A14493FD046F68A1A17DA17DA17DA17DA87DA8A9AFA8FF
%A9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA7FFA1FD
%046F936F6FA12044444B204B445258A184AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A8A8A1449368936F6F68A16968
%93936F93937DFFA8A9A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9
%FFA9FFA9FFA9FFA9AFA7FFA16F6F936F936F6FA1686F6F936F9368A1A8A8
%84AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8A8A8A1689368936F6F68A16F6F936F6F936F76FFA8A8A9FFA9AFA8FFA9
%AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8AFA8FF7D6F936F6F
%936F6FA1446F6F934493687DA8A8A8AFA8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8AFA8A9A8AFA8AFA8A8A8A14493686F6F6F68A16F6F936F
%6F936F7CFFA8A8A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9
%FFA9FFA9FFA9FFA8FFA16F936F6F936F6FA1446F6F936893687DA8CAA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8A8
%A8A14493FD046F68A16968936F6F6F937DCAA8A9A9AFA8FFA9AFA8FFA9AF
%A8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA7FFA1FD046F936F6FA1
%446F69936893687DA8A884AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8A9A8AFA8A9A8AFA8A8A8A1449368936F6F68A16F6F93936F93937D
%CFA8A9AFFFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9
%FFA9AFA7FFA16F6F936F936F6FA1686F6F936F9368A1A8A8A8FFA8A87DAF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8A8A8A16893
%68936F6F68A16F6F936F6F936F76FFA8A8A9FFA8CAA8FFA9FFA8FFA9FFA8
%FFA9FFA8FFA9FFA8FFA9FFA9FFA9FFA8FFA8FF7D6F936F6F936F6FA1446F
%6F934493687DA8A8A8AFA8AEA8AFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8AF
%7EA17DA9A8AFA8AFA8A8A8A14493686F6F6F68A16F6F936F6F936F7CFFA8
%A8A9FFA8CAA8FFA9FFA9FFA9FFA9FFA9FFA9FFAFFF7DA19AA17DA9AFFFA9
%FFA8FFA16F936F6F936F6FA1446F6F936893687DA8CAA8AFA8A8A1A9A8FF
%A8AFA8FFA8AFA8FFA8AFA8AF84A176A19A9A7DAFA9AFA8A8A8A14493FD04
%6F68A16968936F6F6F937DCFA8A9AFAFA8A8A8FFA8FFA9FFA8FFA9FFA8FF
%A8A87DA19AA17DA19AA17DA8A8AFA7FFA1FD046F936F6FA1446F69936893
%687DA8A8A7FFA8A8A1A8A8AFA8AFA8A9A8AFA8A97DA1767676A1769A9AA1
%9A9A76A17DA8A8A1449368936F6F68A16F6F93936F93937DFFA8CECECFA7
%CAA7CFA7CFADCFA8FFAEFFA8A19AA176A19AA1A1CAA1A19AA19AA1A1FFA1
%6F6F936F936F6FA1686F6F936E9368A1A8A8A7CFA8A8A8CFA8CFA8CFA8CF
%A8CFA8CF9AA19A7D76A1A17D7DA89AA19AA176A7A8A1689368936F6F68A2
%6F6F936F6F936F7CFFA8A8A7CFA8CFA7CFA8CAA7CFA8CFA7CFA7A17DA177
%A19AA1A8A8FD04A1777DA1FF7D6F936F6F9A6F6FA17676769A76A176A8A8
%A8A0A6A6C9A6A7A6C9A6A6A6C9A6A6A6C99AA19AA076A176A77CA19AA19A
%7D76A7A8A8769A7C7C769A76A1A87CFD05A1A8CAA8A7A6CEA6C9A6CEA6A7
%A6CEA6A7A6CEA6C9A6CEA6A7A6A7A6A7A6CEA6A7A6C9A7A8A8A1A1A8A1A8
%76A8A17DA8A1A17DA8A1A8A8A87CA7A6A7A6A7A6A7A6A7A6A7A6A7A6A7A6
%A77CA7A0A77CA7A6A7A6A7A6A782A8A8A8A1A17DA1A1A87DA1A1A7A8A1A8
%A7A8A8A8A7A682A7A6A7A6A7A6A7A6A7A6A7A6ADA6A1A0C9A6C9A0A7A6A7
%A6A7A6A782A6A1A8A7A87DA7A1A8A7A8A17C827CA0767D7CA87DA77B8182
%A782A7A6A782A7A6A782A77C7CA0C9A6C9A0A7A6A782A7A6A782827BA6A6
%CEA7A8A6A77C7C7CA727262D2C2D2CFD0451A681A682ADA7A7A6ADA7A7A6
%AD7CA1A1C9C9C9A6C9A0A7A6ADA7ADA6A68181A6CEA6A7A7CEA6A65026A7
%265026562C562C7B50575681817B7BA7A6A7A6A7A6A67C7CA0C9A6C8A6C9
%A0A182A7A6A77C817B817BA6A6A7A6A6A6A7A07B26A75756575057568157
%8181817B82577599A09FC8A6C89FA59FC8A5A5A5C8A5C8A6C89FA0757B57
%7B7B7B517B7B7C757C7BA07B56832C562C562C575681568156815751759F
%9FC79FA682A59FA59FA59FA59FA5A5A69FA59F9F75577B81565756575657
%2C562C572CA75756575057568157FD04818251A09FC8A5A5A5CEA6C89FC8
%A5C8A5C89FC8A6C8A5C89FA05182818281815781575750575656A72C5750
%562C575681568157817B7B75A09FC7A5C79FA6A6A69FA59FA59FA59FA6A6
%A6A59F757557827B815781568150562C572CA75750575057508181815781
%8182577599A09FC8A5A59FC8A6A6A5C8A5A59FC89FC8ADC89FA0997B7B82
%7B817B81575750575056A72C562C562C56568156815681818151A0759F9F
%C79FA59FA59FA69FC79FA59FA59FAD9FA59FA06F5781815781568156562C
%562CA757505756575081818157818182817C99A09FC8A5C89FC8C7C7A5CE
%9FC89FC89FCDA6C89FA59FA0578281827B817B8150575056A750562C5750
%565681578156818181577C99A59FC89FC79FA59FA5A6A69FA59FC79FA79F
%C79FA575A057817B815781565750562CA75750575057568157817B815782
%818275A09FC8A5C89FA59FC89FCEA6C7A5C79FCEA6A5A5C89FA075828182
%7B81818150575056A72C562C562C565681568156815782575175A0999F9F
%A59FA59FA6A7A69FA59FC8A6C89FA59FA0997557827B81568156562C562C
%A7
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=100 RasterRes=1200 GradRes=300 Text=0 Stroke=0 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreateDate>2018-05-15T11:45:14+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:ModifyDate>2018-05-15T11:45:15+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-05-15T11:45:15+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>100</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAABkAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A5v5d/uP+ecf/ABJ8055P&#xA;pEfqPuH6WWfl1/ylHl//AFm/6hJcuw/W6vtT/Ffk+iUNb6Q+MEP/ABKTNtpurxGp6K+ZTiuxV2Ku&#xA;xV2KuxVQv/8AeC5/4xP/AMROQy/SfczxfUPe8r/Pb/e3RP8AjLP/AMmVzTajkHruxPrl8Puk8pf/&#xA;AHnuP+Mh/WMxur0J+k+9nP8A5QT/AMGf/mRl/wDkvi63/kf/AMk/0vO/Lv8Acf8APOP/AIk+Y55O&#xA;1j9R9w/Syz8uv+Uo8v8A+s3/AFCS5dh+t1fan+K/J9ERf72N/wAw8H/EpM22m6vEanoiMynFdirs&#xA;VdirsVdiqhf/AO8Fz/xif/iJyGX6T7meL6h73ln57f72aH/xkn/5NLmlz8g9d2J9cvh90nlD/wC8&#xA;9x/xkP6xmP1ehP0n3s5/8oJ/4M//ADIy/wDyXxdb/wAj/wDkn+l535d/uP8AnnH/AMSfMc8nax+o&#xA;+4fpZZ+XX/KUeX/9Zv8AqEly7D9bq+1P8V+T6IjFL1x/y7w/8Skzbabq8RqeiIzKcV2KuxV2KuxV&#xA;2KqF/wD7wXP/ABif/iJyGX6T7meL6h73ln57/wC9mh/8ZJ/+TS5pc/IPXdifXL4fdJ5Q/wDvPcf8&#xA;ZD+sZj9XoT9J97Of/KCf+DP/AMyMv/yXxdb/AMj/APkn+l535d/uP+ecf/EnzHPJ2sfqPuH6WWfl&#xA;1/ylHl//AFm/6hJcuw/W6vtT/Ffk+iVFL+Qf8UQ/8SkzbaXq8RquivmU4rsVdirsVdirsVUL/wD3&#xA;guf+MT/8ROQy/SfczxfUPe8q/PRuV5om1KS3A+6Jc02o5B67sP65fD7pPKn/AN57j/jIf1jMbq9C&#xA;fpPvZz/5QT/wZ/8AmRl/+S+Lrf8Akf8A8k/0vO/Lv9x/zzj/AOJPmOeTtY/UfcP0ss/Ln/lKfL3+&#xA;s3/UJLl2H63V9qf4r8n0Wf8Ajozf8YYv+JSZttLyLxGq5hVzKcV2KuxV2KuxV2KqF/8A7wXP/GJ/&#xA;+InIZfpPuZ4vqHveU/nmKXmi/wDGa4/5NLmm1HIPXdh/XL4fdJ5W/wDvPcf8ZD+sZjdXoT9J97Of&#xA;/KCf+DP/AMyMv/yXxdb/AMj/APkn+l535d/uP+ecf/EnzHPJ2sfqPuH6WWflyaeafLx/ym/6hJcu&#xA;w/W6vtT/ABX5Pos/8dGb/jDF/wASkzbaXkXiNVzCrmU4rsVdirsVdirsVUL/AP3guf8AjE//ABE5&#xA;DL9J9zPF9Q97zb85rD61cabJz4LbNPI21aj00XxHjmqniM6Aeg0OtGnuRF7j9LzA6RGY5E9c/vG5&#xA;V4Dbv/NmHTtv5X2Pp5+f7Gc/ocf8qP8AQ9b4f8Q+tz47/wBx0py/jl1fuvi4v8of4T4nD/BVX5+5&#xA;Nba+/IBFAgawUUAPGVum9P2vnlvBFxfzOpvnJGaZqv5Jw3ds+ny2iXKE/VmjlbkPgI+H4v5CcIhG&#xA;9ubVlz5jCpk8LM7C8sLy6Wexd5IjEwkkJdlNHHChYkfz9PfMvTXfk6vUkGITLM1w3Yq7FXYq7FXY&#xA;qoX/APvBc/8AGJ/+InIZfpPuZ4vqHvYD+aQ5XFnuRT6y23ikYI/EZqcuQwoh20ICQIPeP0vNASK0&#xA;NKih+WYokRybyAWd1P8Aypevf9N/8yMuv938WFev/N/S8V8vQwmDeNT+7TsP5nzHJNPaiEeI7dB+&#xA;llf5d21u/mjy+rRIQzNUFQf+PWXLcR9brO04D8ry7n0aqIl/KiKFVYYQqgUAHKToM22l5F4rVcwr&#xA;5lOK7FXYq7FXYq7FVC//AN4Ln/jE/wDxE5DL9J9zPF9Q97AfzOP+kWgJ3P1sAfOMAZptTyDucAJB&#xA;rvH6Xm3pyfyn7jmO38B7mc/+UY4/tfpulO9fq9aZf/k/i18J8Tl/D+l4x5d/uP8Anmn/ABJ8xjye&#xA;2H1H3D9LLPy5NPNPl4/5Tf8AUJLl2H63V9qf4r8n0Wf+OjN/xhi/4lJm20vIvEarmFXMpxXYq7FX&#xA;Yq7FXYqoX/8AvBc/8Yn/AOInIZfpPuZ4vqHveU/nmKXmi/8AGa4/5NLmm1HIPW9h/XL4fdJ5W/8A&#xA;vPcf8ZD+sZjdXoj9J97Of/KCf+DP/wAyMv8A8l8XW/8AI/8A5J/ped+Xf7j/AJ5p/wASfMc8naj6&#xA;j7h+lln5df8AKUeX/wDWb/qEly7D9bq+1P8AFfk+iuuoS/8AGGH/AIlJm20vV4jVdFbMpxXYq7FX&#xA;Yq7FXYqoX/8AvBc/8Yn/AOInIZfpPuZ4vqHveV/nsKXuie8s/wDyaXNNqOQeu7E+uXw+6Tyl/wDe&#xA;e4/4yH9YzG6vQn6T72c/+UE/8Gf/AJkZf/kvi63/AJH/APJP9Lzvy7/cf880/wCJPmOeTtR9R9w/&#xA;Syz8uv8AlKPL/wDrN/1CS5dh+t1fan+K/J9Eoa3rn/iiH/iUmbbTdXiNT0V8ynFdirsVdirsVdiq&#xA;hf8A+8Fz/wAYn/4ichl+k+5ni+oe95Z+e/8AvZof/GSf/k0uaXPyD13Yn1y+H3SeUP8A7z3H/GQ/&#xA;rGY/V6E/Sfezr/ygn/gz/wDMjLv8l8XW/wDI/wD5J/pedeXf7j/nmn/Enyg8naj6j7h+lln5df8A&#xA;KUeX/wDWb/qEly7D9bq+1P8AFfk+iIq/XHr1+rw/8Skzbabq8RqeiIzKcV2KuxV2KuxV2KofUGUW&#xA;UykgM8bqgPVmKk0HicrykCJ9zZiFyHvea/nRp2oahd6O2n2st4sUkxlMCNKFBjUDlwBpU5p84sCn&#xA;qux8kYTPEQOXP3F5m3ljzL6E4/RN7UyEgfV5dxUf5OY/Ce53h1WKj6o8+8Mz/Qusf8qQ+pfULj67&#xA;/iXn9W9J/V4/V68uFOVKb1pl1Hwvi4Hjw/O8XEOHg53tzeXeXf7j/nmn/EnzHPJ3Q+o+4fpZZ+XX&#xA;/KUeX/8AWb/qEly7D9bq+1P8V+T6KH+98v8Axgh/4lJm20vV4jVdFbMpxXYq7FXYq7FXYqhr/mkQ&#xA;uY6F7XnMqt0YiNl4kjp9rrlOeNx9zdglUvewPzl+Z/mfyzcW0Nx5eWX6y7pG63kYB9NQ1R+7Y717&#xA;0zXTkIu30mlnmJA6McP/ADkJrgR3/wAMiiNxP+mpv/yRyHjRc3+SMtX+r9bIv+VrX/8AyrL/ABX+&#xA;hv8ASf099V+o/WV/5ZeHP1fTp9HHJ+IOG/Nq/k+fi+H/ABcN/b73hPl3+4/55p/xJ8wDyewH1H3D&#xA;9LLPy6/5Sjy//rN/1CS5dh+t1fan+K/J9Fn/AI6M3/GGL/iUmbbS8i8RquYVcynFdirsVdirsVdi&#xA;qhf/AO8Fz/xif/iJyGX6T7meL6h73lv55xu9/oSIpZ3mnCqoqSTEoAAGabPyD1vYpqUifL7pMH1X&#xA;yXqdjpd3MZIp57dg9/aQuHkt1ehUuB7fap0+WUmFAF2ePtCEyY0QCfSekk6/8oL/AODP/wAyMs/y&#xA;XxYf8j/+Sf6XnXl3+4/55p/xJ8xzydqPqPuH6WW/lx/ylXl7/Wb/AKhJctw/W6vtT/Ffk+ij/wAd&#xA;Gb/jDF/xKTNvpeReI1XMKuZTiuxV2KuxV2KuxVQv/wDeC5/4xP8A8ROQy/SfczxfUPewr8wIo283&#xA;+W5ZAGS2N5cUbf4orbkp+hgDmny9HoNKSMc668I+dvMfJF7LJ5oJn/eLqEk8N2p3DiZTUMD1HKhz&#xA;GHN6HW4gNPID+Hl8E9+oP/ypj9H1Hqf4u9Dl2r6fCuXV+6+LjeKPzfH/ALVbzDy7/cf880/4k+Y5&#xA;5O6H1H3D9LLPy6/5Sjy//rN/1CS5dh+t1fan+K/J9Fb/AKRlr19GL/iUmbbS9XiNVzCtmU4rsVdi&#xA;rsVdirsVUL//AHguf+MT/wDETkMv0n3M8X1D3sK8/wA8cXnHy16ziOB2vUmc0ACNaGpJPQDrmny9&#xA;HoNNEnHMDn6f0vPPLehXeja9e3epxPDZ6O000szAhWopEXA/tFiQQO+YwG7u9Tqo5MFR+rIeX3o3&#xA;61N/yo/61y/f/wCK/V5f5fo8q/fl3+S+KPDH53h6eHTzXy7/AHH/ADzT/iT5jnk7gfUfcP0ss/Lr&#xA;/lKPL/8ArN/1CS5dh+t1fan+K/J9Fn/jozf8YYv+JSZttLyLxGq5hVzKcV2KuxV2KuxV2KqF/wD7&#xA;wXP/ABif/iJyGX6T7meL6h73mf51XCwalorsCQfrsdB4yWvAfi2abPyD1XZEOKRHnH7LLyy71fVr&#xA;nTpba4vZ5raN6RwySuyKFICgKSQKdsxreg8GAuQAu+dMv/8AKC/+DP8A8yMv/wAl8XC/5H/8k/0v&#xA;OvLv9x/zzT/iT5jnk7UfUfcP0ss/Lk080+Xj/lN/1CS5dh+t1fan+K/J9Fn/AI6M3/GGL/iUmbbS&#xA;8i8RquYVcynFdirsVdirsVdiqhqH+8Nz/wAYn/4ichl+k+5nj+oe95b+fH+9mhf8ZJ/+TQzS5+Qe&#xA;u7E+uXw+6Tyd/wDee4/4yH9YzH6vQn6T72df+UF/8Gf/AJkZf/kvi63/AJH/APJP9LA9C02/hhpL&#xA;A6H00FGFNwX/AK5QRs5o1eLiPqHIfpZT+XtndJ5n0IvEyiNm9So+z/o0i7/SaZbh+t1vaOohLTcI&#xA;IJ2fQyq76hLQV/cw/wDEpM2umPN5DURJIpECCb+U5lcQcfwZdy8WkncgYOMNg00nfU3/AJhjxp/L&#xA;HvcLR+5+gf20x41/LHq3whTZ1Yn/AD8DjZKOGEeYK9Z4FFFFPoyJiW2OaA5IbVZoH06568hDJx+f&#xA;E5HICIn3J8SEiHkf57/72aH/AMZJ/wDk0uajPyD0fYn1y+H3SeUP/vPcf8ZD+sZj9XoT9J97Ov8A&#xA;ygv/AIM//MjL/wDJfF1v/I//AJJ/pSP6m6xxzeo3EsV3YmrKamo8KOo+jKbHJ1ctUCCOGO/l7q3+&#xA;fzZL5GDLr1oafC8j0avdIzUU/wBkMy8WUcIj1t1c4HiJ8ntcSA38pP8AvmH/AIlJmdpurg6noiwo&#xA;HQUzKcZvfFV6IWFSdsiS5GPEZCydlxhFNjv74OJnLTDopEEGh65O3FlEg0WiAeuKELqUa/o+6NKf&#xA;un/4ichl+k+5nj+oe95N+e3+9uif8ZZ/+TK5p9RyD1vYn1y+H3SeUv8A7z3H/GQ/rGY3V6E/Sfez&#xA;r/ygv/gz/wDMjL/8l8XW/wDI/wD5J/pS1/8AeGH/AIyy/wDEY8x+rz6feSf+Oxp3/GWf/k0mW4fr&#xA;YZORe1Qj/chMP+KYf+JSZttN1dbqeYRgiY+2ZHE1xwSKosSjrvkTJyI4APNeAB0wNwFOxVayKeow&#xA;gsJYonmpOnE+3bJguHkx8JQmpf8AHOuv+MMn/ETkMn0n3Ix/UPe8i/PM1vNF/wCM1x/yaXNRqOQe&#xA;s7D+uXw+6Tyt/wDee4/4yH9YzG6vQn6T72df+UF/8Gf/AJkZf/kvi63/AJH/APJP9LCtH13ULq3A&#xA;mZWAVXA4gfE5IY7f6gygtw7Nw8R26Dr72T/l/ql5L5k0SN2HCZnLgADc2zsfxQZbh+twNfo8cNPx&#xA;Ab7PoaEkahPQ0/dRf8Skzaafq8rqJEVSL5N45k04/iS73cm8caXxJd7uTeONL4ku9rk3icV45d7u&#xA;TeJxpfEl3u5N44rxy70NqZP6Ouv+MMn/ABE5DJ9J9yYEmQ97yH89BS80X/jLcf8AJpc1Oo5B6vsP&#xA;65fD7pPKn/3nuP8AjIf1jMbq9CfpPvZ1/wCUF/8ABn/5kZf/AJL4ut/5H/8AJP8ASyO2/OD8ppVB&#xA;i09aUBNLGmxrT9jLbi6L8vn8/mi9O/NX8s7m6gitNP8A30x/ccbIg/ZLbHh/KDhHDezVlx5YxuX0&#xA;s60a6t724W6trVraP0WqXQRlg7jgeOzfsN1GZWnju6/PKwnWZbiOxV2KuxV2KuxVDal/xzrr/jDJ&#xA;/wAROQyfSfczx/UPe8i/PYf6bonvLP8A8mlzUajkHq+xPrl8Puk8pf8A3nuP+Mh/WMx+r0J+k+9n&#xA;X/lBf/Bn/wCZGX/5L4ut/wCR/wDyT/S868u/3H/PNP8AiT5jnk7UfUfcP0ss/Lr/AJSjy/8A6zf9&#xA;QkuXYfrdX2p/ivyfR9nvdyHxgg/XJm0wdXis/RG0zIcd1MVdTFXUxV1MVdTFUNqQ/wBx11/xhk/4&#xA;ichk+k+5nj+oe95F+e4/0zQveSf/AJNLmpz8g9V2J9cvh90nlD/7z3H/ABkP6xmP1ehP0n3s6/8A&#xA;KCf+DP8A8yMv/wAl8XW/8j/+Sf6XnXl3+4/55p/xJ8xzydqPqPuH6WWfl1/ylHl//Wb/AKhJcuw/&#xA;W6vtT/Ffk+jrCv1l6/8ALPB+uTNpg6vFZ+iPy9odirsVdirsVdiqG1P/AI5t3/xhk/4ichk+k+5l&#xA;j+oe95D+e/8AvZoX/GSf/k0M1WfkHquxPrl8Puk8of8A3nuP+Mh/WMx+r0J+k+9nX/lBP/Bn/wCZ&#xA;GX/5L4ut/wCR/wDyT/S868u/3H/PNP8AiT5jnk7UfUfcP0ss/Lr/AJSjy/8A6zf9QkuXYfrdX2p/&#xA;ivyfR9iKXUg8IIP1yZs8HV4vN0V7cXxkleVojb8uMSoGDgCo+IkkHp7ZOMjxU1mIq1fLGDsVdiqy&#xA;aaGCJppnWOJBV3cgKB7k42oClZ39nexl7aQOFNHFCrKetGVgGXbxGAEFMokc2tT/AOObd/8AGGT/&#xA;AIicGT6T7k4/qHveQfntX67of/GSf/k0uarPyD1PYn1y+H3SeUv/ALz3H/GQ/rGY/V6E/Sfezr/y&#xA;gn/gz/8AMjL/APJfF1v/ACP/AOSf6XnXl3+4/wCeaf8AEnzHPJ2o+o+4fpZZ+XX/AClHl/8A1m/6&#xA;hJcuw/W6vtT/ABX5PpGz/wB7Jf8AjDD/AMSkzZYTVvGZ+inZySfpGVSx4NyPDtyDkA/cuGMhxc2M&#xA;h6Uyy62l2FUs1TzFpenVWaTnMP8AdMdCwNK/ESQq17ciMhKYHNtx4ZT5B59rvmt9YkDRgwxQsqhV&#xA;LHZmPxVPEctqfZB7VIzEy5eLk7nSaLgFy57KenapLp96txFyYRqtEFSSDT4dmj2JPTp3oaZXDJwn&#xA;bk35tMcsPVXGzGPzhpWo6dcRE+hcvC4CNUqSVIoGopFSaDkFJ7ZlnKJRPudJLTThIWOrz389x/pm&#xA;he8k/wDyaXNfn5B6HsT65fD7pPKH/wB57j/jIf1jMfq9CfpPvZ1/5QT/AMGf/mRl/wDkvi63/kf/&#xA;AMk/0sP0Xyr5ht4H9axkT07GC+krx2t5C/Fzv+HUb1GxyowNOZHWYjL6uZ4fjuyvyD5Z1638y6PJ&#xA;PZvGlpEtzcFqDhFNbukbHfuzUoN+vgctxQIm63tHU45aagfL4jm92gvI4ryQMCawQ1p7NJleqljE&#xA;hx28zwGQ2XJPaJMZVVuRJPUdSWP/ABucoOfARXqXw5K41OLup/DIjNgH85Hglv8AScP8p/DLvzsP&#xA;500eAXn/AJrdZdZvHCndY/TG/gvKlNuuXwyxkLs/F3GliYwiBVb389kl0wQ2zySNCfT4AN6kfOhJ&#xA;deSq4IYqCCPfLBKN7IySn4Z33vp3JtqXp8jCFid4JqSTQoqqQ3AhQY1WqqPxrhmQx0k5m7O9bWly&#xA;LxuIvSjJR3oWIPw8ShFPmSeuNAglOXLIERPWJtv869M1C9Ol3drA01vaSuLh1p8JmVUj26nk+2wy&#xA;OeJpt7GyxGQgnn+gSt5zN5U1i2sdVN1Zyie2uI7f0lo1JZmUqSVJqCCAKdSRmPwG3bnWwlQiRUrP&#xA;wH4+xmH+Hda/5U9+hPqjfpT/ABTw+rVWtfq3LrXjTj8Va0pvl/AfDrrbifmcf5vxL9Hh8/iydrTS&#xA;10qW6nactNoVvazpEUJ9KMFv3YP+7P3zddumSOSO4P8ANv4bujx5z4oiK+u9+XP7k00x9OW8aWN5&#xA;Ob2Noh5lePpoSUG37fxnl9GWCceI+4fpaJ5SYAbUJH7aRFxqKRXpNeQaKFag1/nP8c1HakwJj3OP&#xA;LJwgIwOxGYVM+Mu5tjS8ZaaUIpZ2CqoqzHYADxxAXiKEtdQmvpP9DUC3AJ+tSbK1P5F2qPckfTlk&#xA;8YgPVz7nIhhkdytRVS7+p1JCl55Wb9pmNCp2CkDnkj9PF8GzMeGIARwNBQbAdAMpcPjKEv74RKYj&#xA;1kRt/DY4wmI5I33sTlogK2sWcV9p8kUnMRSSRyKyFQWMMgkWnLahKD6M3w1WOZMRu34shxy4vf8A&#xA;aCErurGJ4Lz9JmaH6zcWlxyrEFLROsiLEaseKsArct/DtlY1OPezvYv50zOYwAIrkR89kZVPqvqc&#xA;vg/xPXl2/wCOXx6/PMri/wB1+hlx+j/M/wB++fofLWnRNAwMjNAzuCxFWZ+7bb07Zyp1Ujfm6jiK&#xA;f+W/K2mvDE0jSObNn9OrD4jKPtPtuV/ZynLq52fNjKRZd5esYtKtYbC2ZjDHyIZyC5LEsSSAN65R&#xA;LNKc7LHiJKY6d5qvf0ndWSQNdRRsqRsz8WEm/qLup2Aod/8Aaz4nhhci7fR6U5IcRNBldrI80Tco&#xA;yJxuI0PMU8a0U/cMojqxI0GWXTcHXZKNQja8nT6zIY7JD/vOy8Q7iv26mtFp0IAw4+0jD+H1e9yc&#xA;eliN7tMbLUYoY1iRBxboeQHqUA+JeO+UZNcZGyG447aePlMNRQ0ILQtDwIG6qRRttvh7A5eNf+7o&#xA;jr3tGTHxng7t0m1vzVdWFr6osiBUF5WairGPtuAVqSB2IH8DbjyDIPSd2rLoZCJMTdJbeavepOtw&#xA;1lcXKoymMBoeDDqdmlQj7sxxV3KX3urxyiDxSO6Yf4+YQO0mkSrwUmhdP2QD0DH9eXDLAcpfe5Hj&#xA;wPVKdZ876Rq+lPZzwKiSoVeNw79tlqFIHzx4hd2y8WFc0r/QVt/yoP8ARnOT6t+nq/aFaelypXj9&#xA;mvtmw8c+BxbX4n+9ca9mL5p2lkPlj/eeb/XH6spy82EmQWn9+v0/qyEOaAlcH1jTNcvjFGUR5Bcx&#xA;SsQwczLSQUBrsynr9GbQAZMYB9z0nZeQSx8PczWzkLwpdpGizyqGqNqg7gFqE5pp+mVXycmURyKJ&#xA;lngKqZmMT0NSFHp0UbLsECfM5MyE+exaIwlDluFCRGHIE/WImFeNFIYNSnFvhUqPpyuUTE77NsZi&#xA;Q2VbAujLZzUFnM4H7skFCelKKeIHjlmOQJrvas0duIcwlnmu0Wa3lt4JVnij3mUEEsjDr8PhmRpq&#xA;x5KPwb9Pk4hZ6se8tys1jJpkzM81jSP1X3LxtvG3Qfs7H3GZGqhvfQvPa3T+HkI6dFd0oWRhXsRm&#xA;vcJg9zCYLiSE7+mxWviAcygbDYzX/wAox/2/P+xfNj/yF/5Kf71s/hYNmvYJ/wCWG+C4XfYqfbvl&#xA;OVhJkFu1JlO/XtlceaAp656UbQSsQrO3pV7tsSor4dfpObDTE2Q7TsvJWWu9P9Kv7S4tI4gwEiIE&#xA;eI9dhTYdxmv1GGUZE9HeTiQVcRuyn0AkSMBuVbkRSm4/dladt8pvvYJneWxGk2UzpIJY/hWPmfsn&#xA;ccqNxP0nL8g9AcTFL97IBD6VbtJeoYAsfDdpZFYt8O9KHiae/LIYhchbbqJVAqN0Y5Ocrq6qhY8S&#xA;5BIHieZ2NP2myMpcUturPFDhiAwu0ntU1sJG0cctwrUDrV2hjavFWB2oXGbfLE8Avo4na8RwxPVM&#xA;r1AJAwB+Lqe2a6YdAWGa/EE1FyARzUNv49Nvuy3GdmUWUf8AlGP+35/2L5sv+Qv/ACU/3rb/AAv/&#xA;2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <pdf:Producer>Corel PDF Engine Version 19.0.0.328</pdf:Producer>
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:title>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1536.000000</stDim:w>
            <stDim:h>3999.999700</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DocumentID>xmp.did:1fd5a3a5-3f3f-0a4b-93ad-77310311f587</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:1fd5a3a5-3f3f-0a4b-93ad-77310311f587</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:aaada724-c4cf-4b9d-87e3-0bee0a04aa14</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:096ccd69-9fb5-5340-afcb-c98813970eb6</stRef:instanceID>
            <stRef:documentID>xmp.did:096ccd69-9fb5-5340-afcb-c98813970eb6</stRef:documentID>
            <stRef:originalDocumentID>uuid:aaada724-c4cf-4b9d-87e3-0bee0a04aa14</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:961e6a09-ce17-9442-ba83-6edf3ab15f38</stEvt:instanceID>
                  <stEvt:when>2018-05-09T13:31:09+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fd5a3a5-3f3f-0a4b-93ad-77310311f587</stEvt:instanceID>
                  <stEvt:when>2018-05-15T11:45:15+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -4000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 4000 li
1536 4000 li
1536 0 li
cp
clp
0 0 mo
1536 0 li
1536 4000 li
0 4000 li
0 0 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.19794 .065156 .0165713 0 cmyk
ef
1236 3467.53 mo
1165.64 3456.51 1054.2 3455.63 932.477 3455.57 cv
935.469 3454.45 937.053 3453.29 937.053 3452.06 cv
937.053 3402.41 802.766 3395.71 714.53 3395.71 cv
698.228 3395.71 683.503 3395.94 671.482 3396.16 cv
659.46 3396.39 650.147 3396.62 644.681 3396.62 cv
642.405 3396.62 640.796 3396.58 639.936 3396.49 cv
623.009 3381.93 532.641 3370.79 413.934 3370.79 cv
373.543 3370.79 334.778 3372.28 301 3374.89 cv
301 2641.58 li
329.924 2641.98 361.757 2642.19 395.195 2642.19 cv
440.065 2642.19 482.057 2641.8 517.983 2641.12 cv
522.256 2641.89 526.896 2642.3 531.903 2642.3 cv
538.282 2642.3 544.062 2641.63 549.254 2640.42 cv
552.662 2640.33 li
586.221 2643.73 615.449 2644.91 641.366 2644.91 cv
669.894 2644.91 694.408 2643.49 716.229 2642.07 cv
738.049 2640.65 757.184 2639.23 774.976 2639.23 cv
775.013 2639.23 775.051 2639.23 775.088 2639.23 cv
871.561 2639.23 1059.77 2643.77 1146.46 2643.77 cv
1174.71 2643.77 1192.19 2643.29 1192.19 2642.01 cv
1192.19 2636.8 1154.12 2634.6 1095.66 2632.47 cv
1094.38 2630.91 1075.17 2628.52 1045.21 2625.81 cv
1061.47 2611 1054.02 2582.35 1025.69 2578.2 cv
1022.08 2557.3 1002.81 2538.12 969.149 2538.12 cv
960.923 2538.12 953.557 2539.27 947.068 2541.31 cv
936.876 2527.33 919.604 2516.67 895.589 2514.22 cv
900.955 2508.64 901.727 2500.58 898.195 2494.06 cv
910.908 2483.72 904.447 2461.5 881.304 2461.5 cv
877.031 2461.5 873.326 2462.26 870.205 2463.56 cv
849.632 2439.38 816.71 2422.6 772.069 2422.6 cv
696.051 2422.6 654.018 2471.26 649.087 2522.27 cv
642.272 2520.66 634.804 2519.76 626.662 2519.76 cv
588.619 2519.76 564.962 2538.94 556.805 2561.84 cv
549.796 2558.94 541.482 2557.25 531.903 2557.25 cv
505.374 2557.25 488.567 2570.22 482.227 2586.02 cv
477.886 2584.26 472.762 2583.23 466.867 2583.23 cv
450.878 2583.23 440.535 2590.76 436.25 2600.16 cv
431.617 2598.67 426.01 2597.79 419.448 2597.79 cv
398.697 2597.79 387.457 2606.58 386.629 2615.59 cv
384.888 2614.3 382.726 2613.53 380.153 2613.53 cv
373.63 2613.53 369.742 2618.5 368.707 2624.18 cv
366.665 2625.02 366.36 2625.93 368.43 2626.9 cv
368.427 2627.03 li
344.743 2627.12 322.093 2627.31 301 2627.59 cv
301 2425.95 li
363.659 2404.71 433.991 2387.63 509.766 2375.67 cv
511.275 2375.67 512.775 2375.67 514.27 2375.67 cv
544.72 2375.67 572.336 2375.16 594.936 2374.23 cv
620.498 2379.62 642.25 2381.39 661.596 2381.39 cv
680.347 2381.39 696.837 2379.72 712.343 2378.05 cv
727.849 2376.39 742.368 2374.72 757.184 2374.72 cv
758.033 2374.72 758.884 2374.72 759.735 2374.73 cv
767.215 2374.83 774.579 2374.87 781.806 2374.87 cv
854.583 2374.87 913.094 2370.19 927.775 2363.36 cv
1041.95 2374.04 1146.73 2395.92 1236 2426.29 cv
1236 3467.53 li
452.991 3274 mo
452.994 3274.07 452.997 3274.14 453 3274.22 cv
453 3274 li
453.842 3274 li
453.842 3274 li
454 3274 li
454 3190 li
397.012 3190 li
397.008 3189.93 397.004 3189.86 397 3189.78 cv
397 3190 li
397 3274 li
452.991 3274 li
gsave
[.00573864 -1644 1644 .00573864 767.997 4000 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~()@Z$()Ic'(Ddl((Ddl((Dmu+(`4),(`=2/)&X;0)&X;0)&aD3)B'M4)B'M4)B0V7)]K_8)]K_8)]K_8
)]Kb:*#oq<*#ot>*??.@*??.@*??1B*Zc@D*Zc@D*ZcCF+!2RH+!2RH+!2UJ+<VdL+<VdL+<VdL+<VgN
+X&!P+X&!P+X&!Q+sJ3T+sJ3U,9nEX,9nEX,9nEY,U=W\,U=W\,U=W],pai`,paia-71&d-71&d-71&e
-RU8h-RU8h-n$Jl-n$Jl-n$Jl-n$Jl.4H\p.4H\p.4H\p.Olnt.Olnt.Olnt.k<,#.k<,#.k<,#/1`>'
~>
<~%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1N^S$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OP$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M
$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I
~>
<~#mgnE#mgnE#mgnE#mgnE#mgnE#m^eB#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#R:S>#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tG;"pP89"pP89"pP89"pP89"pP57"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&4"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i0!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!<E3%!<E3%!<E3%!<E3%!<E3%
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
np
932.477 3455.57 mo
926.414 3455.57 920.345 3455.57 914.235 3455.57 cv
733.562 3455.57 656.29 3444.14 532.3 3444.14 cv
514.061 3444.14 494.795 3444.39 474.058 3444.96 cv
425.694 3446.28 363.886 3448.12 301 3455.22 cv
301 3374.89 li
334.778 3372.28 373.543 3370.79 413.934 3370.79 cv
532.641 3370.79 623.009 3381.93 639.936 3396.49 cv
640.796 3396.58 642.405 3396.62 644.681 3396.62 cv
650.147 3396.62 659.46 3396.39 671.482 3396.16 cv
683.503 3395.94 698.228 3395.71 714.53 3395.71 cv
802.766 3395.71 937.053 3402.41 937.053 3452.06 cv
937.053 3453.29 935.469 3454.45 932.477 3455.57 cv
gsave
[.00573864 -1644 1644 .00573864 767.997 4000 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M8Y./hSb//hSb//h\k20/"t30/"t30/,(60JG170JG170JP::0ekC;0ekC;0etL>1,:U?1,:U?1,C^B
1G^gC1G^gC1G^jE1c.$G1c.$G1c.'I2)R6K2)R6K2)R6K2)R6K2)R6K2)R9M2E!HO2E!HO2E!KQ2`EZS
2`EZT3&ilW3&ilW3&ilX3B9)[3B9)[3B9)\3]];_3]];_3]];`4$,Mc4$,Mc4$,Md4?P_g4?P_g4?P_h
4Ztqk4Ztqk4Ztqk5!D.o5!D.o5!D.o5<h@s5<h@s5<h@s5X7S"5X7S"5X7S"5s[e&5s[e&5s[e&6:+"*
~>
<~"U,&5"U,&5"U,&5"U5/8"pP89"pP89"pP89"pG/6"U,&5"U,&5"U,&5"U,&5"U,&5"U"r2"9\i1"9er4
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,#3"9\i1"9\i1"9\i1"9\i1"9\i1"9\l3"U,&5"U,&5"U,#3
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i0!s8W."9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
~>
<~Df9Q4Df9Q4Df9Q4Df0H1DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0
DJj?0DJj?0DJj?0DJj?0DJj?0D/F-,D/F-,D/F-,D/F-,Ci!m&CMR^$CMR^$CMR^$CMR["C2.KuC2.Ku
C2.KuC2.KuC2.KtBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9r
C2.KuC2.KuC2.KuC2.KuC2.KuBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBP;'mBP;'m
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
np
454 3274 mo
454 3190 li
397 3190 li
397 3274 li
454 3274 li
.0777905 .0707103 .0809644 0 cmyk
ef
453 3274.22 mo
453 3190 li
424.579 3190 li
445.052 3194.04 451.135 3229.52 453 3274.22 cv
.00204471 .0416266 .0417792 0 cmyk
ef
397.012 3190 mo
397 3190 li
397 3189.78 li
397.004 3189.86 397.008 3189.93 397.012 3190 cv
gsave
[.00573864 -1644 1644 .00573864 767.997 4000 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~3]fDb4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$5Vf4?P_g4?P_g4?P_g4?P_g4?P_g4?Yhj4Ztqk4Ztqk4[)%n
5!D.o5!D.o5!D1q5X7S"5X7S"5X7S"5X7S"5X7S"5X7V$5s[e&5s[e&5s[h(6:+"*6:+"*6:+"*6:+"*
6:+"+6UO4.6UO4.6UO4/6psF26psF26psF377BX677BX677BX77Rfj:7Rfj:7Rfj;7n6'>7n6'>7n6'?
84Z9B84Z9B84Z9B84Z9B84Z9B84Z9B8P)KF8P)KF8P)KF8kM]J8kM]J8kM]J91qoN91qoN91qoN9MA,R
~>
<~+X&!P+X&!P+X&!P+X/*S+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sA*Q+X&!P+X/*T
,9nEX,9nEX,9nEX,9nBV+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ0R+X&!P+X&!P+X&$R,9nEX,9nEX,9nEX
,9nEX,9nEW+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3S+X&!Q+sS<W,9nEW+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
+sJ3T+X&!P+X&!P+X&!P+X&!P+X&!P+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P
~>
<~-n$Jl-n$Jl-n$Jk-RL/e-7'ra,pai`,pai`,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\
,U=TZ,9nEX,9nEX,9nEX,9nEX+sJ0R+X&!P+X&!P+X&!P+X%sN+<VdL+<VdL+<VdL+<VaJ+!2RH+!2RH
+!2RH+!2RH+!2RG*Zc@D*Zc@D*Zc@D*Zc@E+!2RH+!2RH+!2RG*Zc@D*ZZ7@*#oq=*??.@*??.@*??.@
*??.@*??.@*??.@*??.@*??.@*??.@*??.@*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<)]K_8)]K_8
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
np
453.842 3274 mo
453 3274 li
453 3273.9 li
453.279 3273.94 453.56 3273.97 453.842 3274 cv
452.991 3274 mo
397 3274 li
397 3190 li
397.012 3190 li
399.756 3240.07 417.325 3269.55 452.987 3273.9 cv
452.989 3273.94 452.99 3273.96 452.991 3274 cv
.21912 .150729 .19678 0 cmyk
f
453 3274 mo
452.991 3274 li
452.991 3274 li
452.99 3273.96 452.989 3273.94 452.987 3273.9 cv
452.992 3273.9 452.996 3273.9 453 3273.9 cv
453 3274 li
.14023 .121065 .155825 0 cmyk
f
425.057 3173.42 mo
457.536 3190 li
392.575 3190 li
425.057 3173.42 li
cp
.255314 .294224 .351995 0 cmyk
ef
425.057 3173.42 mo
414.187 3182.52 424.458 3188.14 457.536 3190 cv
392.575 3190 li
425.057 3173.42 li
cp
.431861 .496864 .547509 .126925 cmyk
ef
387.62 3464 mo
400.988 3274 li
407.692 3274 li
394.325 3464 li
387.62 3464 li
cp
431 3464 mo
431 3274 li
420 3274 li
420 3464 li
431 3464 li
cp
462.922 3464 mo
449.554 3274 li
442.85 3274 li
456.217 3464 li
462.922 3464 li
cp
.255314 .294224 .351995 0 cmyk
ef
1079.55 3697.83 mo
1053.22 3696.28 1023.58 3694.73 988.908 3693.5 cv
988.908 3693.5 li
978.699 3692.97 968.671 3692.46 958.801 3691.97 cv
957.611 3666.75 946.253 3632.59 943.12 3604.57 cv
939.15 3569.06 955.56 3547.71 969.355 3534.94 cv
977.759 3527.15 943.779 3520.2 956.847 3512.72 cv
971.436 3504.38 1048.19 3500.34 1062.77 3492 cv
1056.85 3492 1049.78 3492 1042.11 3492 cv
1042.23 3491.91 1042.35 3491.83 1042.47 3491.74 cv
1040.73 3491.74 1038.89 3491.74 1036.99 3491.75 cv
1036.99 3491.75 1036.99 3491.74 1036.99 3491.74 cv
1033.66 3491.74 1029.82 3491.76 1025.76 3491.79 cv
1010.69 3491.87 993.593 3492 981.212 3492 cv
975.391 3492 970.022 3492 965.357 3492 cv
954.831 3498.02 910.876 3500.45 900.348 3506.48 cv
883.416 3516.16 906.761 3528.6 895.551 3538.64 cv
884.625 3548.42 825.982 3559.7 788.364 3584.57 cv
742.169 3615.11 696.762 3655.12 661.585 3684.95 cv
639.908 3685.2 618.691 3685.66 597.681 3686.31 cv
597.56 3686.02 597.43 3685.72 597.288 3685.43 cv
586.148 3685.9 573.583 3686.4 558.456 3686.89 cv
558.554 3687.18 558.636 3687.47 558.704 3687.76 cv
554.074 3687.96 549.444 3688.17 544.816 3688.39 cv
537.832 3688.31 531.216 3688.27 524.982 3688.27 cv
483.812 3688.27 458.281 3689.99 438.625 3692.24 cv
439.237 3691.88 439.895 3691.5 440.6 3691.1 cv
428.992 3674.57 422.055 3662.99 411.514 3656.15 cv
409.504 3653.25 407.202 3650.72 405.854 3649.51 cv
387.817 3640.55 371.286 3638.13 351.849 3632.97 cv
354.353 3630.96 357.013 3628.73 359.649 3626.48 cv
369.259 3618.28 383.351 3605.61 382.062 3603.7 cv
381.95 3603.53 381.723 3603.45 381.396 3603.45 cv
378.323 3603.45 366.411 3610.48 357.672 3617.36 cv
359.785 3614.1 379.752 3583.48 377.116 3581.31 cv
377.018 3581.23 376.89 3581.19 376.734 3581.19 cv
373.791 3581.19 360.983 3595.17 352.66 3607.19 cv
357.775 3590.48 364.544 3566.25 361.895 3565.18 cv
361.834 3565.16 361.768 3565.14 361.699 3565.14 cv
358.869 3565.14 348.962 3585.13 343.582 3601.1 cv
344.061 3582.78 344.084 3557.71 341.217 3557.51 cv
341.206 3557.51 341.194 3557.51 341.183 3557.51 cv
338.206 3557.51 333.268 3584.1 332.639 3602.45 cv
329.409 3590.01 325.485 3576.8 323.576 3576.8 cv
323.542 3576.8 323.509 3576.8 323.477 3576.81 cv
321.151 3577.4 323.013 3599.38 326.451 3613.54 cv
321.158 3604.41 314.835 3594.27 313.062 3594.27 cv
312.988 3594.27 312.922 3594.29 312.864 3594.32 cv
311.156 3595.39 317.403 3612.27 323.192 3622.55 cv
324.073 3624.12 325.009 3625.65 325.973 3627.12 cv
317.745 3625.55 309.415 3624.23 301 3623.12 cv
301 3455.22 li
363.886 3448.12 425.694 3446.28 474.058 3444.96 cv
494.795 3444.39 514.061 3444.14 532.3 3444.14 cv
656.29 3444.14 733.562 3455.57 914.235 3455.57 cv
920.345 3455.57 926.414 3455.57 932.477 3455.57 cv
1054.2 3455.63 1165.64 3456.51 1236 3467.53 cv
1236 3594.16 li
1233.49 3596.61 1228.31 3605.33 1223.86 3613.29 cv
1227.25 3599 1229.08 3576.94 1226.79 3576.44 cv
1226.76 3576.43 1226.74 3576.43 1226.71 3576.43 cv
1224.83 3576.43 1220.96 3589.84 1217.76 3602.43 cv
1217.15 3584.15 1212.3 3557.83 1209.37 3557.83 cv
1209.35 3557.83 1209.33 3557.83 1209.31 3557.83 cv
1206.49 3558.14 1206.51 3583.22 1206.98 3601.51 cv
1201.7 3585.8 1191.98 3566.27 1189.16 3566.27 cv
1189.08 3566.27 1189.01 3566.28 1188.94 3566.31 cv
1186.33 3567.48 1193 3591.45 1198.04 3607.96 cv
1189.88 3596.31 1177.33 3582.9 1174.36 3582.9 cv
1174.19 3582.9 1174.05 3582.95 1173.95 3583.04 cv
1171.35 3585.31 1191.02 3615.15 1193.1 3618.32 cv
1184.57 3611.85 1172.97 3605.34 1169.81 3605.34 cv
1169.45 3605.34 1169.19 3605.43 1169.07 3605.62 cv
1167.8 3607.58 1181.69 3619.7 1191.16 3627.52 cv
1192.43 3628.58 1193.7 3629.62 1194.97 3630.64 cv
1173.28 3637.14 1151.4 3645.66 1128.96 3654.18 cv
1128.59 3654.32 1094.83 3663.6 1111.33 3669.37 cv
1101.34 3672.39 1095.01 3676.84 1099.75 3679.88 cv
1098.22 3681.45 1098.21 3683.02 1100.93 3684.44 cv
1099.33 3685.63 1097.66 3686.84 1095.86 3688.08 cv
1093.4 3689.21 1091.56 3690.4 1090.62 3691.55 cv
1087.4 3693.58 1083.78 3695.67 1079.55 3697.83 cv
1079.55 3697.83 li
1227.29 3621.77 mo
1230.62 3615.54 1234.08 3607.15 1236 3601.13 cv
1236 3619.66 li
1233.1 3620.34 1230.2 3621.05 1227.29 3621.77 cv
gsave
[5.80318e-15 -94.7731 94.7731 5.80318e-15 734.362 3543.18 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~4?P_g4?P_g4?GVd4$,Mc4$#D`3]];_3]T2\3B/uX3&`cT2`EZS2`<QP2E!HO2Dm?L2)I-H1c.$G1c$pD
1G^dA1,:U?1,:R=0ek@90JG.50/"t30/"q1/hS_-/M/P+/M/M)/1`>'/1`;%.k<)!.Olnt.Olkr.4H\p
.4H\o-n$Jl-n$Jk-RU8h-RU8g-71&c,pai`,pai_,U=W\,U=W[,9nEW+sJ3T+sJ3S+X&!O+<VdL+<VdK
+!2RH+!2RH*Zc@D*??.@*#oq<*#oq<)]K_8)]K_8)B'M4)B'M4)&X;0)&X;0(`4),(Ddl(()@Z$()@Z$
~>
<~&.fBa&.oKd&J5Te&J5Te&J5Te&J5Te&J>]h&eYfi&eYfi&eYfi&eYfi&ebol',)#m',)#m',)#m',2,p
'GM5q'GM5q'GM8s'bqGu'bqK"()@Z$()@Z$()@Z$()@]&(Ddl((Ddl((Ddo*(`4),(`4),(`4,.)&X;0
)&X;0)&X;0)&X;1)B'M4)B'M4)B'M4)B'M5)]K_8)]K_8)]K_8)]K_8)]K_9*#oq<*#oq<*#oq=*??.@
*??.@*Zc@D*Zc@D*Zc@D+!2RH+!2RH+!2RH+!2RH+<VdL+<VdL+<VdL+<VdL+X&!P+X&!P+X&!P+sJ3T
~>
<~TV.sNTV.sNTV%jKT:_aJT:_aJT:_aJT:VXGSt;OFSt;OFSt;OFSt2FCSXl=BSXl=BSXl=BSXl=BSXc4?
S=H+>S=H+>S=H+>S=H+>S=H(<S"#n:S"#n:S"#n:S"#n:S"#k8R[T\6R[T\6R[T\6R[T\6R[TY4R@0J2
R@0J2R@0J2R@0J2R@0J2R@0J1R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8-Q^=&*Q^=&*Q^=&*Q^=&*
Q^=&*QBmi&QBmi&QBmi&QBmi&QBmi&Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Pa%DsPa%DsPa%DsPa%Ds
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
np
612.788 3722.62 mo
644.723 3704.35 715.56 3632.7 788.364 3584.57 cv
825.982 3559.7 884.625 3548.42 895.551 3538.64 cv
906.761 3528.6 883.416 3516.16 900.348 3506.48 cv
910.876 3500.45 954.831 3498.02 965.357 3492 cv
990.806 3492 1037.32 3492 1062.77 3492 cv
1048.19 3500.34 971.436 3504.38 956.847 3512.72 cv
943.779 3520.2 977.759 3527.15 969.355 3534.94 cv
955.56 3547.71 939.15 3569.06 943.12 3604.57 cv
948.08 3648.93 973.655 3708.68 946.863 3724 cv
921.415 3724 638.238 3722.62 612.788 3722.62 cv
.431861 .496864 .547509 .126925 cmyk
ef
685.216 3722.62 mo
699.751 3711.47 705.456 3680.41 736.523 3646.97 cv
744.904 3637.94 759.649 3632.01 772.844 3622.98 cv
782.99 3616.04 773.551 3605.21 782.438 3597.72 cv
789.326 3591.92 814.933 3589.29 820.328 3584.57 cv
837.462 3569.57 863.463 3555.91 883.989 3549.95 cv
897.51 3546.03 909.494 3548.99 912.058 3544.52 cv
915.059 3539.28 904.708 3533.92 902.573 3527.71 cv
900.835 3522.64 895.892 3516.45 899.3 3512.05 cv
901.275 3509.51 910.367 3508.12 913.312 3506.48 cv
921.938 3501.65 973.364 3498.02 981.212 3492 cv
998.55 3492 1025.13 3491.74 1042.47 3491.74 cv
1031.6 3500.08 958.618 3504.64 947.749 3512.98 cv
938.01 3520.45 967.497 3524.44 960.901 3532.22 cv
960.283 3532.94 961.5 3532.61 962.849 3532.27 cv
964.36 3531.9 966.037 3531.52 965.487 3532.64 cv
958.613 3546.6 956.654 3537.73 950.462 3547.92 cv
943.917 3558.7 936.03 3580.53 933.431 3592.81 cv
932.488 3597.26 923.697 3599.66 923.522 3604.57 cv
923.357 3609.14 931.424 3606.62 934.977 3612.97 cv
937.105 3616.77 931.535 3622.27 932.754 3627.64 cv
934.737 3636.39 942.836 3645.37 943.027 3650.23 cv
944.427 3685.71 927.338 3712.75 912.671 3724 cv
895.333 3724 702.555 3722.62 685.216 3722.62 cv
.145632 .327855 .459815 0 cmyk
ef
744.006 3722.62 mo
762.114 3704.35 796.473 3630.65 838.998 3582.52 cv
860.97 3557.65 910.158 3554.3 917.028 3544.52 cv
920.136 3540.09 925.216 3533.72 924.53 3527.52 cv
924.019 3522.9 916.561 3520.6 915.641 3516.5 cv
914.996 3513.63 920.058 3508.7 922.268 3506.48 cv
928.233 3500.46 989.831 3498.02 995.801 3492 cv
1007.45 3492 1025.34 3491.74 1036.99 3491.74 cv
1028.72 3500.08 952.925 3504.64 944.657 3512.98 cv
937.248 3520.45 955.568 3524.86 950.238 3532.64 cv
948.438 3535.26 946.432 3539.47 940.345 3542.87 cv
933.029 3546.94 921.261 3550.43 916.228 3556.3 cv
909.979 3563.59 915.723 3573.41 909.959 3582.35 cv
905.45 3589.34 895.463 3594 894.273 3602.52 cv
891.796 3620.25 903.824 3638.2 906.528 3657.42 cv
910.589 3686.29 905.818 3714.8 896.695 3724 cv
885.043 3724 755.657 3722.62 744.006 3722.62 cv
.0684215 .118105 .582818 0 cmyk
ef
914.324 3689.91 mo
912.794 3689.84 911.263 3689.77 909.741 3689.71 cv
908.905 3689.31 908.442 3688.71 908.579 3688.03 cv
908.822 3686.83 910.845 3685.85 913.1 3685.85 cv
915.354 3685.85 916.988 3686.83 916.745 3688.03 cv
916.583 3688.83 915.62 3689.53 914.324 3689.91 cv
754.043 3674.78 mo
751.789 3674.78 750.156 3673.81 750.399 3672.61 cv
750.641 3671.41 752.665 3670.44 754.92 3670.44 cv
757.174 3670.44 758.807 3671.41 758.565 3672.61 cv
758.323 3673.81 756.299 3674.78 754.043 3674.78 cv
907.366 3664.67 mo
907.237 3663.25 907.086 3661.82 906.915 3660.39 cv
911.155 3660.46 914.33 3661.41 914.099 3662.56 cv
913.892 3663.59 911.026 3664.45 907.366 3664.67 cv
918.404 3643.17 mo
916.149 3643.17 914.517 3642.19 914.76 3641 cv
915.002 3639.79 917.025 3638.82 919.281 3638.82 cv
921.536 3638.82 923.167 3639.79 922.925 3641 cv
922.682 3642.19 920.659 3643.17 918.404 3643.17 cv
792.164 3642.99 mo
789.91 3642.99 788.277 3642.02 788.519 3640.82 cv
788.762 3639.62 790.787 3638.65 793.041 3638.65 cv
795.11 3638.65 796.655 3639.47 796.709 3640.53 cv
796.393 3641.02 796.078 3641.52 795.765 3642.02 cv
794.915 3642.6 793.585 3642.99 792.164 3642.99 cv
909.338 3607.73 mo
907.084 3607.73 905.451 3606.75 905.693 3605.55 cv
905.936 3604.36 907.959 3603.38 910.215 3603.38 cv
912.47 3603.38 914.102 3604.36 913.859 3605.55 cv
913.617 3606.75 911.593 3607.73 909.338 3607.73 cv
792.247 3607.38 mo
789.991 3607.38 788.359 3606.41 788.602 3605.21 cv
788.843 3604.01 790.868 3603.04 793.122 3603.04 cv
795.377 3603.04 797.01 3604.01 796.768 3605.21 cv
796.525 3606.41 794.501 3607.38 792.247 3607.38 cv
823.328 3601.69 mo
821.074 3601.69 819.441 3600.72 819.684 3599.52 cv
819.926 3598.32 821.95 3597.35 824.204 3597.35 cv
825.057 3597.35 825.821 3597.49 826.429 3597.73 cv
825.408 3599.04 824.395 3600.36 823.386 3601.69 cv
823.366 3601.69 823.347 3601.69 823.328 3601.69 cv
927.691 3583.71 mo
925.436 3583.71 923.806 3582.73 924.048 3581.53 cv
924.29 3580.33 924.748 3579.36 928.569 3579.36 cv
932.39 3579.36 933.08 3583.71 927.691 3583.71 cv
912.936 3569.59 mo
912.924 3569.59 912.911 3569.59 912.899 3569.59 cv
912.922 3568.12 912.931 3566.67 913.027 3565.25 cv
913.287 3565.25 913.55 3565.24 913.814 3565.24 cv
918.325 3565.24 921.784 3566.22 921.542 3567.42 cv
921.3 3568.61 917.446 3569.59 912.936 3569.59 cv
891.482 3555.4 mo
891.265 3555.11 891.176 3554.78 891.247 3554.43 cv
891.489 3553.23 893.514 3552.26 895.769 3552.26 cv
897.099 3552.26 898.212 3552.6 898.852 3553.12 cv
896.522 3553.86 894.051 3554.61 891.482 3555.4 cv
932.48 3551.15 mo
930.225 3551.15 928.593 3550.18 928.836 3548.98 cv
928.912 3548.6 929.165 3548.24 929.546 3547.94 cv
930.246 3547.62 930.948 3547.31 931.646 3547 cv
932.181 3546.87 932.761 3546.81 933.357 3546.81 cv
935.612 3546.81 937.243 3547.78 937.001 3548.98 cv
936.759 3550.18 934.735 3551.15 932.48 3551.15 cv
915.529 3528.14 mo
913.274 3528.14 911.641 3527.17 911.884 3525.97 cv
912.126 3524.77 914.151 3523.8 916.405 3523.8 cv
918.659 3523.8 920.292 3524.77 920.05 3525.97 cv
919.808 3527.17 917.783 3528.14 915.529 3528.14 cv
.316747 .494728 .634821 .0817273 cmyk
f
946.55 3517.95 mo
945.709 3516.9 945.463 3515.81 946.177 3514.62 cv
947.339 3515 948.032 3515.7 947.869 3516.51 cv
947.757 3517.07 947.267 3517.57 946.55 3517.95 cv
.49012 .587243 .642298 .312749 cmyk
f
943.406 3518.69 mo
942.725 3517.33 942.602 3515.91 943.542 3514.37 cv
943.766 3514.35 943.994 3514.34 944.224 3514.34 cv
944.955 3514.34 945.62 3514.44 946.177 3514.62 cv
945.463 3515.81 945.709 3516.9 946.55 3517.95 cv
945.725 3518.4 944.6 3518.68 943.406 3518.69 cv
990.974 3502.63 mo
990.541 3502.63 990.132 3502.59 989.753 3502.53 cv
991.269 3502.29 992.789 3502.06 994.302 3501.83 cv
993.454 3502.32 992.251 3502.63 990.974 3502.63 cv
956.759 3499.52 mo
957.608 3498.93 958.946 3498.54 960.376 3498.54 cv
961.111 3498.54 961.781 3498.64 962.34 3498.82 cv
960.485 3499.06 958.618 3499.29 956.759 3499.52 cv
.316747 .494728 .634821 .0817273 cmyk
f
834.195 3686.41 mo
831.94 3686.41 830.309 3685.44 830.551 3684.24 cv
830.794 3683.04 832.819 3682.07 835.074 3682.07 cv
837.328 3682.07 838.959 3683.04 838.717 3684.24 cv
838.474 3685.44 836.451 3686.41 834.195 3686.41 cv
888.322 3677.32 mo
886.068 3677.32 884.435 3676.35 884.677 3675.15 cv
884.919 3673.95 886.943 3672.98 889.199 3672.98 cv
891.454 3672.98 893.085 3673.95 892.843 3675.15 cv
892.601 3676.35 890.578 3677.32 888.322 3677.32 cv
905.494 3664.73 mo
900.984 3664.73 897.524 3663.76 897.766 3662.56 cv
898.008 3661.36 901.86 3660.39 906.37 3660.39 cv
906.554 3660.39 906.735 3660.39 906.915 3660.39 cv
907.086 3661.82 907.237 3663.25 907.366 3664.67 cv
906.761 3664.71 906.134 3664.73 905.494 3664.73 cv
810.59 3662.5 mo
806.081 3662.5 802.621 3661.53 802.863 3660.33 cv
803.105 3659.14 806.958 3658.16 811.468 3658.16 cv
815.977 3658.16 819.437 3659.14 819.195 3660.33 cv
818.953 3661.53 815.101 3662.5 810.59 3662.5 cv
859.159 3649.21 mo
854.649 3649.21 851.189 3648.24 851.431 3647.04 cv
851.673 3645.84 855.526 3644.87 860.036 3644.87 cv
864.545 3644.87 868.006 3645.84 867.764 3647.04 cv
867.522 3648.24 863.669 3649.21 859.159 3649.21 cv
795.765 3642.02 mo
796.078 3641.52 796.393 3641.02 796.709 3640.53 cv
796.713 3640.62 796.706 3640.72 796.687 3640.82 cv
796.597 3641.26 796.263 3641.67 795.765 3642.02 cv
882.837 3635.13 mo
880.582 3635.13 878.951 3634.16 879.193 3632.96 cv
879.436 3631.76 881.458 3630.79 883.715 3630.79 cv
885.969 3630.79 887.601 3631.76 887.357 3632.96 cv
887.117 3634.16 885.091 3635.13 882.837 3635.13 cv
833.56 3620.5 mo
829.05 3620.5 825.59 3619.53 825.832 3618.33 cv
826.074 3617.13 829.926 3616.16 834.437 3616.16 cv
838.947 3616.16 842.407 3617.13 842.164 3618.33 cv
841.922 3619.53 838.07 3620.5 833.56 3620.5 cv
864.752 3614.69 mo
862.497 3614.69 860.865 3613.72 861.107 3612.52 cv
861.348 3611.32 863.373 3610.35 865.628 3610.35 cv
867.883 3610.35 869.514 3611.32 869.272 3612.52 cv
869.031 3613.72 867.007 3614.69 864.752 3614.69 cv
823.386 3601.69 mo
824.395 3600.36 825.408 3599.04 826.429 3597.73 cv
827.426 3598.12 828 3598.78 827.85 3599.52 cv
827.61 3600.71 825.617 3601.68 823.386 3601.69 cv
882.924 3588.44 mo
880.67 3588.44 879.038 3587.46 879.281 3586.26 cv
879.523 3585.07 881.547 3584.09 883.802 3584.09 cv
886.058 3584.09 887.688 3585.07 887.447 3586.26 cv
887.204 3587.46 885.18 3588.44 882.924 3588.44 cv
849.464 3585.58 mo
847.209 3585.58 845.578 3584.61 845.82 3583.41 cv
846.062 3582.21 848.085 3581.24 850.34 3581.24 cv
852.595 3581.24 854.229 3582.21 853.986 3583.41 cv
853.743 3584.61 851.72 3585.58 849.464 3585.58 cv
874.597 3573.21 mo
870.088 3573.21 866.627 3572.23 866.869 3571.04 cv
867.111 3569.84 870.965 3568.86 875.473 3568.86 cv
879.984 3568.86 883.443 3569.84 883.201 3571.04 cv
882.96 3572.23 879.107 3573.21 874.597 3573.21 cv
912.899 3569.59 mo
908.409 3569.58 904.968 3568.61 905.21 3567.42 cv
905.438 3566.29 908.865 3565.36 913.027 3565.25 cv
912.931 3566.67 912.922 3568.12 912.899 3569.59 cv
894.893 3556.6 mo
893.295 3556.6 892.009 3556.11 891.482 3555.4 cv
894.051 3554.61 896.522 3553.86 898.852 3553.12 cv
899.297 3553.49 899.513 3553.94 899.414 3554.43 cv
899.172 3555.63 897.148 3556.6 894.893 3556.6 cv
929.546 3547.94 mo
930.055 3547.52 930.794 3547.19 931.646 3547 cv
930.948 3547.31 930.246 3547.62 929.546 3547.94 cv
943.346 3518.69 mo
941.092 3518.69 939.46 3517.71 939.703 3516.51 cv
939.919 3515.44 941.574 3514.54 943.542 3514.37 cv
942.602 3515.91 942.725 3517.33 943.406 3518.69 cv
943.386 3518.69 943.366 3518.69 943.346 3518.69 cv
922.836 3512.18 mo
920.581 3512.18 918.949 3511.21 919.192 3510.01 cv
919.434 3508.81 921.457 3507.84 923.712 3507.84 cv
925.967 3507.84 927.599 3508.81 927.358 3510.01 cv
927.115 3511.21 925.091 3512.18 922.836 3512.18 cv
959.5 3502.88 mo
957.245 3502.88 955.613 3501.91 955.854 3500.71 cv
955.943 3500.27 956.27 3499.86 956.759 3499.52 cv
958.618 3499.29 960.485 3499.06 962.34 3498.82 cv
963.497 3499.2 964.185 3499.9 964.021 3500.71 cv
963.779 3501.91 961.754 3502.88 959.5 3502.88 cv
989.753 3502.53 mo
988.162 3502.25 987.133 3501.43 987.329 3500.46 cv
987.571 3499.26 989.595 3498.28 991.85 3498.28 cv
994.105 3498.28 995.737 3499.26 995.495 3500.46 cv
995.39 3500.98 994.95 3501.45 994.302 3501.83 cv
992.789 3502.06 991.269 3502.29 989.753 3502.53 cv
.282811 .34403 .753414 .0236515 cmyk
f
303 3444 mo
786 3444 li
786 3438 li
303 3438 li
303 3444 li
cp
gsave
[-3.0502e-05 -5.82545 5.82545 -3.0502e-05 544.5 3443.83 ]ct
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~='&I)=&r@&<`N."<E)ps<)Z^o;c6Lk;Gg:g;,C(c:esk_:JOY[:/+GW9h\5S9M8#N8kDTG8P)KF8OuBB
7n6$<7Rfg877BU46psF26psC06:*t(5s[b$5X7Ou5<h=q5!D+m4Ztni4?P\e4$,Mc4$,Ja3B9&Y3&iiU
2`EZR2E!HN2)I-G1G^gB1,:U>0eb:70/"t2/hSb//hSb./M/P*/1`>&.k3"t.4H\p.4H\o-n$Jk-RU8g
-71&d,pai`,U=W\,9nEX+sJ0R+<VdL+<VdL+!2RH*Zc@D*??.@*#oq<)]K_8)B'M4)&X;0(`4),(Ddl(
~>
<~/hSb//hSb//hJY,/M/P+/M&G(/1`>'/1W5$.k<,#.k3"u.Olnt.Oceq.4H\p.4?Sm-n$Jl-n$Jl-mpAi
-RU8h-RU5f-71#b,pai`,paf^,U=W\,U=W\,U=TZ,9nEX,9nBV+sJ3T+sJ0R+X&!P+X%sN+<VdL+<VdL
+<VdK+!2RH+!2RG*Zc@D*Zc@C*??.@*??.?*#oq<*#oq;)]K_8)]K_8)]K_7)B'M4)B'M4)B'M3)&X;0
)&X;0)&X;0(`4),(`4),(Ddl((Ddl(()@Z$()@Z$()@Z$'bqGu'bqGu'bqGu'GM5q'GM5q'GM5q',)#m
~>
<~6psF26pj=/6UO4.6UF++6:!n'5sR\#5X7S"5X.It5<_7p5!;%l4Zkhh4?P_g4?GVd4$,Mc4$#D`3]T2\
3B9&Y3&iiU2`EZS2`EWQ2E!HO2E!EM2)R6K2)R3I1c.!E1G^dA1,:U?1,:R=0ekC;0ek@90JG.50/"q1
/hSb//hSb./M/P*/1`>&.k<,".Olns.4H\p.4H\o-n$Jl-n$Jk-RU8g-71&d-71&c,pai_,U=W\,U=W[
,9nEX,9nEX+sJ3T+X&!P+<VdL+<VdL+!2RH+!2RH*Zc@D*Zc@D*??.@*#oq<)]K_8)]K_8)]K_8)B'M4
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
312 3443 mo
778 3443 li
778 3439 li
312 3439 li
312 3443 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
786 3455 mo
786 3422.92 li
782.5 3418.39 li
779 3422.92 li
779 3455 li
786 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 782.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
785 3454 mo
785 3422.58 li
781.999 3418.14 li
779 3422.58 li
779 3454 li
785 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
771 3455 mo
771 3422.92 li
767.5 3418.39 li
764 3422.92 li
764 3455 li
771 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 767.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
770 3454 mo
770 3422.58 li
767.001 3418.14 li
764 3422.58 li
764 3454 li
770 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
756 3455 mo
756 3422.92 li
752.5 3418.39 li
749 3422.92 li
749 3455 li
756 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 752.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
756 3454 mo
756 3422.58 li
752.999 3418.14 li
750 3422.58 li
750 3454 li
756 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
741 3455 mo
741 3422.92 li
737.501 3418.39 li
734 3422.92 li
734 3455 li
741 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 737.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
741 3454 mo
741 3422.58 li
738.001 3418.14 li
735 3422.58 li
735 3454 li
741 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
726 3455 mo
726 3422.92 li
722.5 3418.39 li
719 3422.92 li
719 3455 li
726 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 722.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
726 3454 mo
726 3422.58 li
723 3418.14 li
720 3422.58 li
720 3454 li
726 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
711 3455 mo
711 3422.92 li
707.5 3418.39 li
704 3422.92 li
704 3455 li
711 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 707.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
711 3454 mo
711 3422.58 li
708 3418.14 li
705 3422.58 li
705 3454 li
711 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
697 3455 mo
697 3422.92 li
693.5 3418.39 li
690 3422.92 li
690 3455 li
697 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 693.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
696 3454 mo
696 3422.58 li
693 3418.14 li
690 3422.58 li
690 3454 li
696 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
682 3455 mo
682 3422.92 li
678.5 3418.39 li
675 3422.92 li
675 3455 li
682 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 678.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
681 3454 mo
681 3422.58 li
678 3418.14 li
675 3422.58 li
675 3454 li
681 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
667 3455 mo
667 3422.92 li
663.5 3418.39 li
660 3422.92 li
660 3455 li
667 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 663.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
666 3454 mo
666 3422.58 li
663 3418.14 li
660 3422.58 li
660 3454 li
666 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
652 3455 mo
652 3422.92 li
648.5 3418.39 li
645 3422.92 li
645 3455 li
652 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 648.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
651 3454 mo
651 3422.58 li
648 3418.14 li
645 3422.58 li
645 3454 li
651 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
637 3455 mo
637 3422.92 li
633.5 3418.39 li
630 3422.92 li
630 3455 li
637 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 633.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
637 3454 mo
637 3422.58 li
634 3418.14 li
631 3422.58 li
631 3454 li
637 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
622 3455 mo
622 3422.92 li
618.5 3418.39 li
615 3422.92 li
615 3455 li
622 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 618.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
622 3454 mo
622 3422.58 li
619 3418.14 li
616 3422.58 li
616 3454 li
622 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
607 3455 mo
607 3422.92 li
603.5 3418.39 li
600 3422.92 li
600 3455 li
607 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 603.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
607 3454 mo
607 3422.58 li
604 3418.14 li
601 3422.58 li
601 3454 li
607 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
592 3455 mo
592 3422.92 li
588.5 3418.39 li
585 3422.92 li
585 3455 li
592 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 588.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
592 3454 mo
592 3422.58 li
589 3418.14 li
586 3422.58 li
586 3454 li
592 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
578 3455 mo
578 3422.92 li
574.5 3418.39 li
571 3422.92 li
571 3455 li
578 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 574.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
577 3454 mo
577 3422.58 li
574 3418.14 li
571 3422.58 li
571 3454 li
577 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
563 3455 mo
563 3422.92 li
559.501 3418.39 li
556 3422.92 li
556 3455 li
563 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 559.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
562 3454 mo
562 3422.58 li
559.001 3418.14 li
556 3422.58 li
556 3454 li
562 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
548 3455 mo
548 3422.92 li
544.5 3418.39 li
541 3422.92 li
541 3455 li
548 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 544.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
547 3454 mo
547 3422.58 li
544 3418.14 li
541 3422.58 li
541 3454 li
547 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
533 3455 mo
533 3422.92 li
529.5 3418.39 li
526 3422.92 li
526 3455 li
533 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 529.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
532 3454 mo
532 3422.58 li
529.001 3418.14 li
526 3422.58 li
526 3454 li
532 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
518 3455 mo
518 3422.92 li
514.5 3418.39 li
511 3422.92 li
511 3455 li
518 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 514.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
518 3454 mo
518 3422.58 li
514.999 3418.14 li
512 3422.58 li
512 3454 li
518 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
503 3455 mo
503 3422.92 li
499.501 3418.39 li
496 3422.92 li
496 3455 li
503 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 499.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
503 3454 mo
503 3422.58 li
500.001 3418.14 li
497 3422.58 li
497 3454 li
503 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
488 3455 mo
488 3422.92 li
484.5 3418.39 li
481 3422.92 li
481 3455 li
488 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 484.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
488 3454 mo
488 3422.58 li
485 3418.14 li
482 3422.58 li
482 3454 li
488 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
474 3455 mo
474 3422.92 li
470.5 3418.39 li
467 3422.92 li
467 3455 li
474 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 470.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
473 3454 mo
473 3422.58 li
470 3418.14 li
467 3422.58 li
467 3454 li
473 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
459 3455 mo
459 3422.92 li
455.5 3418.39 li
452 3422.92 li
452 3455 li
459 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 455.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
458 3454 mo
458 3422.58 li
455 3418.14 li
452 3422.58 li
452 3454 li
458 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
444 3455 mo
444 3422.92 li
440.5 3418.39 li
437 3422.92 li
437 3455 li
444 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 440.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
443 3454 mo
443 3422.58 li
440 3418.14 li
437 3422.58 li
437 3454 li
443 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
429 3455 mo
429 3422.92 li
425.5 3418.39 li
422 3422.92 li
422 3455 li
429 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 425.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
428 3454 mo
428 3422.58 li
425 3418.14 li
422 3422.58 li
422 3454 li
428 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
414 3455 mo
414 3422.92 li
410.5 3418.39 li
407 3422.92 li
407 3455 li
414 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 410.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
414 3454 mo
414 3422.58 li
411 3418.14 li
408 3422.58 li
408 3454 li
414 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
399 3455 mo
399 3422.92 li
395.5 3418.39 li
392 3422.92 li
392 3455 li
399 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 395.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
399 3454 mo
399 3422.58 li
396 3418.14 li
393 3422.58 li
393 3454 li
399 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
384 3455 mo
384 3422.92 li
380.5 3418.39 li
377 3422.92 li
377 3455 li
384 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 380.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
384 3454 mo
384 3422.58 li
381 3418.14 li
378 3422.58 li
378 3454 li
384 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
369 3455 mo
369 3422.92 li
365.5 3418.39 li
362 3422.92 li
362 3455 li
369 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 365.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
369 3454 mo
369 3422.58 li
366 3418.14 li
363 3422.58 li
363 3454 li
369 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
355 3455 mo
355 3422.92 li
351.5 3418.39 li
348 3422.92 li
348 3455 li
355 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 351.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
354 3454 mo
354 3422.58 li
351 3418.14 li
348 3422.58 li
348 3454 li
354 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
340 3455 mo
340 3422.92 li
336.5 3418.39 li
333 3422.92 li
333 3455 li
340 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 336.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
339 3454 mo
339 3422.58 li
336 3418.14 li
333 3422.58 li
333 3454 li
339 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
325 3455 mo
325 3422.92 li
321.501 3418.39 li
318 3422.92 li
318 3455 li
325 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 321.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
324 3454 mo
324 3422.58 li
321.001 3418.14 li
318 3422.58 li
318 3454 li
324 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
310 3455 mo
310 3422.92 li
306.5 3418.39 li
303 3422.92 li
303 3455 li
310 3455 li
cp
gsave
[-.000766776 -36.6109 36.6109 -.000766776 306.5 3455 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
309 3454 mo
309 3422.58 li
306 3418.14 li
303 3422.58 li
303 3454 li
309 3454 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
786 3381.77 mo
938 3311.74 li
938 3492 li
786 3492 li
786 3381.77 li
cp
.250797 .647517 .490425 .039765 cmyk
ef
786 3389.37 mo
876 3347.34 li
876 3492 li
786 3492 li
786 3389.37 li
cp
.113436 .571954 .382025 .000274662 cmyk
ef
827 3492 mo
827 3358 li
828 3358 li
828 3492 li
827 3492 li
cp
846 3492 mo
846 3349 li
847 3349 li
847 3492 li
846.38 3492 li
846 3492 li
cp
865 3492 mo
865 3345 li
866 3345 li
866 3492 li
865.082 3492 li
865 3492 li
cp
885 3492 mo
885 3329 li
884 3329 li
884 3492 li
884.977 3492 li
885 3492 li
cp
904 3492 mo
904 3321 li
903 3321 li
903 3492 li
903.68 3492 li
904 3492 li
cp
922 3492 mo
922 3313 li
923 3313 li
923 3492 li
922.384 3492 li
922 3492 li
cp
809 3492 mo
809 3366 li
810 3366 li
810 3492 li
808.972 3492 li
809 3492 li
cp
.473121 .56115 .499153 .162081 cmyk
ef
781.662 3377.08 mo
938 3304.73 li
938 3311.99 li
785.761 3382.02 li
781.662 3377.08 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
800.042 3369.21 mo
938 3304.73 li
938 3311.99 li
869.022 3343.72 li
800.042 3369.21 li
cp
.284611 .160677 .222507 0 cmyk
ef
775.187 3373.97 mo
938 3297.47 li
938 3304.73 li
779.286 3378.91 li
775.187 3373.97 li
cp
.473121 .56115 .499153 .162081 cmyk
ef
818 3426 mo
818 3449 li
837 3449 li
837 3426 li
818 3426 li
cp
813 3420 mo
843 3420 li
843 3455 li
813 3455 li
813 3420 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
818 3426 mo
837 3426 li
837 3449 li
818 3449 li
818 3426 li
cp
.532341 .435889 .433082 .0813306 cmyk
ef
894 3426 mo
894 3449 li
913 3449 li
913 3426 li
894 3426 li
cp
888 3420 mo
918 3420 li
918 3455 li
888 3455 li
888 3420 li
cp
.175265 .132326 .138247 0 cmyk
ef
894 3426 mo
913 3426 li
913 3449 li
894 3449 li
894 3426 li
cp
.532341 .435889 .433082 .0813306 cmyk
ef
1243 3381.77 mo
1091 3311.74 li
1091 3492 li
1243 3492 li
1243 3381.77 li
cp
.250797 .647517 .490425 .039765 cmyk
ef
1243 3389.37 mo
1091 3347.34 li
1091 3492 li
1243 3492 li
1243 3389.37 li
cp
.113436 .571954 .382025 .000274662 cmyk
ef
1201 3492 mo
1201 3358 li
1200 3358 li
1200 3492 li
1201 3492 li
cp
1181 3492 mo
1181 3349 li
1182 3349 li
1182 3492 li
1182.26 3492 li
1181 3492 li
cp
1164 3492 mo
1164 3345 li
1163 3345 li
1163 3492 li
1163.56 3492 li
1164 3492 li
cp
1143 3492 mo
1143 3329 li
1144 3329 li
1144 3492 li
1143.67 3492 li
1143 3492 li
cp
1125 3492 mo
1125 3321 li
1126 3321 li
1126 3492 li
1124.96 3492 li
1125 3492 li
cp
1106 3492 mo
1106 3313 li
1107 3313 li
1107 3492 li
1106.26 3492 li
1106 3492 li
cp
1220 3492 mo
1220 3366 li
1219 3366 li
1219 3492 li
1219.67 3492 li
1220 3492 li
cp
.473121 .56115 .499153 .162081 cmyk
ef
1246.34 3377.08 mo
1090 3304.73 li
1090 3311.99 li
1242.24 3382.02 li
1246.34 3377.08 li
cp
.175265 .132326 .138247 0 cmyk
ef
1227.96 3369.21 mo
1090 3304.73 li
1090 3311.99 li
1158.98 3343.72 li
1227.96 3369.21 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
1252.81 3373.97 mo
1090 3297.47 li
1090 3304.73 li
1248.71 3378.91 li
1252.81 3373.97 li
cp
.473121 .56115 .499153 .162081 cmyk
ef
1135 3426 mo
1135 3449 li
1116 3449 li
1116 3426 li
1135 3426 li
cp
1141 3420 mo
1111 3420 li
1111 3455 li
1141 3455 li
1141 3420 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
1135 3426 mo
1116 3426 li
1116 3449 li
1135 3449 li
1135 3426 li
cp
.532341 .435889 .433082 .0813306 cmyk
ef
1212 3433 mo
1212 3480 li
1188 3480 li
1188 3433 li
1212 3433 li
cp
1218 3420 mo
1182 3420 li
1182 3492 li
1218 3492 li
1218 3420 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
1212 3425 mo
1187 3425 li
1187 3492 li
1212 3492 li
1212 3425 li
cp
.532341 .435889 .433082 .0813306 cmyk
ef
1014 3232.85 mo
1090 3282.31 li
1090 3492 li
938 3492 li
938 3282.31 li
1014 3232.85 li
cp
.113436 .571954 .382025 .000274662 cmyk
ef
1053 3492 mo
1053 3260 li
1052 3260 li
1052 3492 li
1053 3492 li
cp
1034 3421 mo
1034 3244 li
1033 3244 li
1033 3421 li
1033.98 3421 li
1034 3421 li
cp
976 3492 mo
976 3260 li
977 3260 li
977 3492 li
976.678 3492 li
976 3492 li
cp
995 3421 mo
995 3244 li
996 3244 li
996 3421 li
995.382 3421 li
995 3421 li
cp
1014 3421 mo
1014 3237 li
1015 3237 li
1015 3421 li
1014.08 3421 li
1014 3421 li
cp
958 3492 mo
958 3273 li
959 3273 li
959 3492 li
957.974 3492 li
958 3492 li
cp
1071 3492 mo
1071 3273 li
1072 3273 li
1072 3492 li
1071.39 3492 li
1071 3492 li
cp
.473121 .56115 .499153 .162081 cmyk
ef
965 3399 mo
1063 3399 li
1063 3492 li
965 3492 li
965 3399 li
cp
.431861 .496864 .547509 .126925 cmyk
ef
1017 3399 mo
1017 3478.93 li
1053.43 3399 li
1017 3399 li
cp
974.57 3399 mo
1011 3478.93 li
1011 3399 li
974.57 3399 li
cp
1011 3492 mo
1011 3491.74 li
971 3403.9 li
971 3492 li
965 3492 li
965 3392 li
1063 3392 li
1063 3492 li
1057 3492 li
1057 3403.9 li
1017 3491.74 li
1017 3492 li
1017.06 3492 li
1011.12 3492 li
1011 3492 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
1014.08 3296.54 mo
1024.19 3296.54 1032.37 3304.19 1032.37 3313.63 cv
1032.37 3323.08 1024.19 3330.73 1014.08 3330.73 cv
1003.98 3330.73 995.795 3323.08 995.795 3313.63 cv
995.795 3304.19 1003.98 3296.54 1014.08 3296.54 cv
cp
ef
1014.08 3301.03 mo
1021.53 3301.03 1027.57 3306.67 1027.57 3313.63 cv
1027.57 3320.6 1021.53 3326.24 1014.08 3326.24 cv
1006.64 3326.24 1000.6 3320.6 1000.6 3313.63 cv
1000.6 3306.67 1006.64 3301.03 1014.08 3301.03 cv
cp
.532341 .435889 .433082 .0813306 cmyk
ef
933.032 3281.96 mo
1014.32 3229.48 li
1095.61 3281.96 li
1091.51 3286.9 li
1014.32 3236.74 li
937.132 3286.9 li
933.032 3281.96 li
cp
.0777905 .0707103 .0809644 0 cmyk
ef
933.032 3277.43 mo
1014.32 3229.48 li
1095.61 3277.43 li
1091.51 3281.94 li
1014.32 3233.11 li
937.132 3281.94 li
933.032 3277.43 li
cp
.175265 .132326 .138247 0 cmyk
ef
926.887 3278.34 mo
1014.32 3222.22 li
1101.75 3278.34 li
1097.66 3283.28 li
1014.32 3229.48 li
930.985 3283.28 li
926.887 3278.34 li
cp
.473121 .56115 .499153 .162081 cmyk
ef
641.366 2644.91 mo
615.449 2644.91 586.221 2643.73 552.662 2640.33 cv
549.254 2640.42 li
544.062 2641.63 538.282 2642.3 531.903 2642.3 cv
526.896 2642.3 522.256 2641.89 517.983 2641.12 cv
482.057 2641.8 440.065 2642.19 395.195 2642.19 cv
361.757 2642.19 329.924 2641.98 301 2641.58 cv
301 2627.59 li
322.093 2627.31 344.743 2627.12 368.427 2627.03 cv
368.43 2626.9 li
366.36 2625.93 366.665 2625.02 368.707 2624.18 cv
369.742 2618.5 373.63 2613.53 380.153 2613.53 cv
382.726 2613.53 384.888 2614.3 386.629 2615.59 cv
387.457 2606.58 398.697 2597.79 419.448 2597.79 cv
426.01 2597.79 431.617 2598.67 436.25 2600.16 cv
440.535 2590.76 450.878 2583.23 466.867 2583.23 cv
472.762 2583.23 477.886 2584.26 482.227 2586.02 cv
488.567 2570.22 505.374 2557.25 531.903 2557.25 cv
541.482 2557.25 549.796 2558.94 556.805 2561.84 cv
564.962 2538.94 588.619 2519.76 626.662 2519.76 cv
634.804 2519.76 642.272 2520.66 649.087 2522.27 cv
654.018 2471.26 696.051 2422.6 772.069 2422.6 cv
816.71 2422.6 849.632 2439.38 870.205 2463.56 cv
873.326 2462.26 877.031 2461.5 881.304 2461.5 cv
904.447 2461.5 910.908 2483.72 898.195 2494.06 cv
901.727 2500.58 900.955 2508.64 895.589 2514.22 cv
919.604 2516.67 936.876 2527.33 947.068 2541.31 cv
953.557 2539.27 960.923 2538.12 969.149 2538.12 cv
1002.81 2538.12 1022.08 2557.3 1025.69 2578.2 cv
1054.02 2582.35 1061.47 2611 1045.21 2625.81 cv
1075.17 2628.52 1094.38 2630.91 1095.66 2632.47 cv
1154.12 2634.6 1192.19 2636.8 1192.19 2642.01 cv
1192.19 2643.29 1174.71 2643.77 1146.46 2643.77 cv
1059.77 2643.77 871.561 2639.23 775.088 2639.23 cv
775.051 2639.23 775.013 2639.23 774.976 2639.23 cv
757.184 2639.23 738.049 2640.65 716.229 2642.07 cv
694.408 2643.49 669.894 2644.91 641.366 2644.91 cv
gsave
[.00573864 -1644 1644 .00573864 767.997 4000 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~+X/*T,9nEX,9nEX,:"N[,U=W\,U=W\,UF`_,pai`,pai`,pjrd-RU8h-RU8h-RU8i-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Mn.4H\p.4H\p.4H_r.Olnt.Olnt.Olr!.k<,#.k<,#.k</%/1`>'/1`>'/1`A)/M/P+
/M/P,/hSb//hSb//hSb00/"t30/"t30/"t40JG170JG170JG180ekC;0ekC;0ekC;0ekC;0ekC;0ekC<
1,:U?1,:U?1,:U?1G^gC1G^gC1G^gC1c.$G1c.$G1c.$G2)R6K2)R6K2)R6K2E!HO2E!HO2E!HO2`EZS
~>
<~1,:U?1,1L<0ekC;0etL?1G^gC1G^gC1G^gC1GU^@1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:R=0ekC;0ekC;0ekF=1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG170JG17
0JG170JG170JG170JG170/"t30/"t30JG490ekC;0ekC;0ekC;0JG170JG170JG170JG170JG170JG17
~>
<~!s8W-!s8W-!s8W-!s/N*!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!W`<&!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E0#zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
np
509.766 2375.67 mo
499.541 2375.65 489.016 2375.58 478.265 2375.44 cv
385.012 2374.26 308.52 2368.85 301 2363.11 cv
301 2361.28 li
307.523 2356.47 365.975 2353.23 442.235 2353.23 cv
447.621 2353.23 453.087 2353.25 458.639 2353.28 cv
458.639 2353.28 li
458.639 2353.28 li
448.18 2344.4 505.965 2339.93 518.795 2339.03 cv
532.169 2330.64 594.837 2326.86 662.876 2326.86 cv
754.087 2326.86 854.965 2333.65 859.813 2345.26 cv
903.126 2348.89 931.336 2354.27 931.336 2359.95 cv
931.336 2361.13 930.109 2362.27 927.775 2363.36 cv
876.242 2358.54 822.78 2356 768.001 2356 cv
767.999 2356 li
677.39 2356 590.476 2362.93 509.766 2375.67 cv
.243351 .206699 0 0 cmyk
f
661.596 2381.39 mo
642.25 2381.39 620.498 2379.62 594.936 2374.23 cv
572.336 2375.16 544.72 2375.67 514.27 2375.67 cv
512.775 2375.67 511.275 2375.67 509.766 2375.67 cv
590.476 2362.93 677.39 2356 767.999 2356 cv
768.001 2356 li
822.78 2356 876.242 2358.54 927.775 2363.36 cv
913.094 2370.19 854.583 2374.87 781.806 2374.87 cv
774.579 2374.87 767.215 2374.83 759.735 2374.73 cv
758.884 2374.72 758.033 2374.72 757.184 2374.72 cv
742.368 2374.72 727.849 2376.39 712.343 2378.05 cv
696.837 2379.72 680.347 2381.39 661.596 2381.39 cv
gsave
[.00573864 -1644 1644 .00573864 767.997 4000 ]ct
clp
/5 /Gradient get_res exec grestore
np
1191.78 2334.11 mo
1068.27 2334.11 923.766 2328.54 937.3 2325.48 cv
932.328 2325.51 927.429 2325.52 922.61 2325.52 cv
852.6 2325.52 800.012 2322.89 800.012 2319.07 cv
800.012 2315.9 836.147 2312.78 888.383 2310.95 cv
891.655 2305.98 903.831 2300.24 918.328 2299.18 cv
929.698 2291 950.902 2285.29 968.736 2285.29 cv
973.35 2285.29 977.74 2285.67 981.673 2286.49 cv
993.277 2281.68 1008.14 2278.02 1024.23 2277.18 cv
1022.9 2275.26 1025.38 2272.48 1030.02 2270.24 cv
1024.56 2265.65 1041.62 2259.06 1053.33 2259.06 cv
1055.44 2259.06 1057.38 2259.27 1058.98 2259.75 cv
1075.7 2253.41 1112.46 2247.01 1142.12 2247.01 cv
1175.24 2247.01 1199.53 2254.99 1177.21 2279.94 cv
1180.68 2279.55 1185.96 2279.19 1191.68 2279.19 cv
1207.15 2279.19 1225.88 2281.82 1220.98 2293.55 cv
1224.17 2292.98 1229.9 2292.32 1236 2292.15 cv
1236 2333.84 li
1221.79 2334.02 1206.95 2334.11 1191.78 2334.11 cv
.243351 .206699 0 0 cmyk
f
1536 4000 mo
1265 4000 li
1265 0 li
1536 0 li
1536 4000 li
.194797 .926177 .849973 .0906691 cmyk
ef
1536 3617.7 mo
1529.73 3616.5 1523.5 3615.37 1517.31 3614.31 cv
1519.26 3612.01 1521.18 3609.51 1522.92 3606.93 cv
1530.06 3596.37 1537.11 3578.99 1535 3578 cv
1534.94 3577.97 1534.87 3577.96 1534.79 3577.96 cv
1532.69 3577.96 1525.46 3588.65 1518.9 3598.08 cv
1523.14 3583.76 1525.44 3561.68 1522.57 3561.2 cv
1522.54 3561.2 1522.51 3561.2 1522.47 3561.2 cv
1520.13 3561.2 1515.27 3574.65 1511.27 3587.29 cv
1510.5 3569.02 1504.44 3542.77 1500.77 3542.77 cv
1500.75 3542.77 1500.72 3542.77 1500.7 3542.78 cv
1497.16 3543.11 1497.19 3568.19 1497.78 3586.47 cv
1494.61 3578.96 1490.16 3570.59 1486 3563.9 cv
1486 1591 li
1536 1591 li
1536 3617.7 li
1470.21 3607.49 mo
1469.48 3607.4 1468.74 3607.32 1468 3607.23 cv
1468 3605.98 li
1468.74 3606.48 1469.48 3606.99 1470.21 3607.49 cv
1480.41 3603.42 mo
1476.55 3601.11 1472.18 3598.8 1468 3596.8 cv
1468 3587.89 li
1473.56 3595.17 1479.23 3602 1480.41 3603.42 cv
1486.59 3593.02 mo
1486.39 3592.8 1486.2 3592.58 1486 3592.35 cv
1486 3591.47 li
1486.2 3591.99 1486.39 3592.51 1486.59 3593.02 cv
1482 3588.07 mo
1477.45 3583.38 1472.41 3578.75 1468 3575.15 cv
1468 1591 li
1482 1591 li
1482 3557.89 li
1479.15 3553.93 1476.76 3551.41 1475.48 3551.41 cv
1475.38 3551.41 1475.29 3551.42 1475.2 3551.45 cv
1472.7 3552.37 1477.01 3566.6 1482 3580.62 cv
1482 3588.07 li
1536 1561 mo
1486 1561 li
1486 992 li
1536 992 li
1536 1561 li
1482 1561 mo
1468 1561 li
1468 992 li
1482 992 li
1482 1561 li
1536 690 mo
1486 690 li
1486 0 li
1482 0 li
1482 690 li
1468 690 li
1468 0 li
1536 0 li
1536 690 li
gsave
[-38.0546 .00550965 -.00550965 -38.0546 1532.23 2000 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~7n6'>7n,s;7Rfj:7Rfj:7R]a777BX677BX677BX677BX677BX6779O36psF26psF26psF26pj=/6UO4.
6UO4.6UO1,6:+"*6:*t(5s[e&5s[e&5s[b$5X7S"5X7S"5X7S"5X7S"5X7Ou5<h@s5<h@s5<h@s5<h=q
5!D.o5!D.o5!D.n4Ztqk4Ztqj4?P_g4?P_g4?P_f4$,Mc4$,Mc4$,Mb3]];_3]];^3B9)[3B9)Z3&ilW
3&ilW2`EZS2`EZS2`EZS2E!HO2E!HO2E!HO2)R6K2)R6K1c.$G1c.$G1G^gC1G^gC1,:U?1,:U?0ekC;
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2oqrVc]nrVc]mr;?Kjr;?Kiqtp9fqtp9eqYL'bqYL'aq>'j^
q>'j^q"XXZp\4FVp@e4Rp%A"Np%A"No^qeJoCMSFo()ABnaZ/>nF5r:nF5r:n*f`6mdBN2mHs<.m-O**
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr)fnr;?Kiqtp9eqYL'aq=saZp\4FUp@e4Qp%7nJoCMSEo'u8>
nF5r:n*f]4mHs9,lg*m&lK[Wukih6okND!ijlPRaj5]1[io8qUi8EMMhVR,Gh;-oCgt^Z=g=k97g"G'3
~>
<~>?b<8>$5!2=]ed.=BAR*=&r@%<E)ps<)Z^o;c6Lk;Gg:f:esk_:JOY[:/+GW9h\5S9M8#N8kDTG8OuBC
84Z6@7n6$<77BU46psC06UO1,6:*t(5s[b$5X7Ou5<h=q5!D+m4?P\e4$,Ja3]]8]3B9&Y3&iiU2E!EM
2)R6J1c.$F1G^gB1,:U>0ekC:0JG160/"t2/hSb./M/P*/1`>&.k3"t.4H\o-n$Jk-RU8g-71&c,pai_
,U=W\,9nEX+sJ3T+X&!P+X&!P+<VdL+!2RH*Zc@D*??.@*#oq<)]K_8)B'M4)&X;0)&X;0(`4),(Ddl(
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
np
1409 4000 mo
1405 4000 li
1405 0 li
1409 0 li
1409 4000 li
1333 4000 mo
1329 4000 li
1329 0 li
1333 0 li
1333 4000 li
1486 4000 mo
1482 4000 li
1482 0 li
1486 0 li
1486 4000 li
.536217 .773892 .692836 .787533 cmyk
ef
1313 4000 mo
1236 4000 li
1236 0 li
1313 0 li
1313 4000 li
.40766 .499672 .637873 .150271 cmyk
ef
1307 4000 mo
1243 4000 li
1243 0 li
1307 0 li
1307 4000 li
.0735485 .128481 .144503 0 cmyk
ef
1306 4000 mo
1284.06 4000 li
1274.09 3839.48 li
1280.12 3600.1 li
1291.69 3368.11 li
1284.24 3184.24 li
1292.73 3019.14 li
1282.05 2738.62 li
1273.7 2544 li
1280.85 2522.53 li
1292.59 2188.31 li
1285.12 2078.25 li
1290.68 1838 li
1283 1636.66 li
1288.9 1271.58 li
1267.85 919.93 li
1280.98 897.088 li
1271.09 887.707 li
1282.61 678.313 li
1271.76 438.066 li
1287 460.866 li
1284.28 0 li
1306 0 li
1306 4000 li
.20267 .180789 .19855 0 cmyk
ef
1236 1561.06 mo
1235.92 1561 li
1236 1561 li
1236 1561.06 li
.639399 .414069 .429572 .0894484 cmyk
f
1468 1591 mo
1409 1591 li
1409 1561 li
1468 1561 li
1468 1591 li
1405 1591 mo
1333 1591 li
1333 1561 li
1405 1561 li
1405 1591 li
1329 1591 mo
1313 1591 li
1313 1561 li
1329 1561 li
1329 1591 li
.367956 .877256 .804196 .549889 cmyk
f
1536 1591 mo
1486 1591 li
1486 1561 li
1536 1561 li
1536 1591 li
1482 1591 mo
1468 1591 li
1468 1561 li
1482 1561 li
1482 1591 li
gsave
[-38.0546 .00550965 -.00550965 -38.0546 1532.23 2000 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~H$O[\H$O[\H$FRYG^+IXG^"@UGBS.QG'8%OF`__IFEDVHFE;MEF)l;AEcQ2?EH#l9E,]c8E,TZ5Df9Q4
Df9N2DJj?0DJj?0DJj<.D/F-,D/F**Ci!p(Ci!m&CMR^$CMR["C2.KuC2.KuC2.HsBk_9qBk_6oBP;'m
BP;'mBP;'lB4kjhAnGXeAnGXdAS#F`A7T4]A7T4]A7T4\@q0"Y@q&nU@:<SQ@:<SP?smAM?smAM?smAL
?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?=$rE?=$rE?=$rE?=$rE?=$rE?=$rE?=$rE?!U`A?!U`A
~>
<~e^`4#e^i='f@SX+f@SX+f@\a.f\+s2g"G'3g"P06g=tB:gY:K;gY:K;gYCT?h;-oCh;7#FhVR,GhV[5J
hr!>Khr!>Khr!>Khr!>Khr!AMi8EPOi8EPOi8EPOi8EPOi8ESQiSibSiSibSiSibSiSieUio8tWio8qU
iSibTio8tWio8tXj5]1[j5]1[j5]1[j5]1[j5]1\jQ,C_jQ,C_jQ,C_jQ,C`jlY^fk2tgfjlPUdk2tgg
k2tdejlPUcjlPUcjlPUcjQ,C_jQ,C_jQ,C_jQ,C_jQ,C_j5].Yio8tWio8tWiSibSiSibSiSibSiSibS
~>
<~]Y(ni]Y2"m^:q=q^:q=q^;%Ft^V@Ou^VIY$_8=(+_SX1,_Sa:0`5KU3_o'C1`Pog8`Pog9a2c6@a2c6@
a2c9BaN2HDaN2HDaN2HDaN2HDaN2HDaN2KFaiVZHaiV]Jb0%lLb0%iJaiVZHaiVZHaiVZHb0%oNbKJ)P
b0%lLb0%lMbKJ)PbKJ)PbKJ)Qbfn;Tbfn;Tbfn;Uc-=MXc-=MXc-=MXc-=MYcHjh_cd0q_cHa_]cd0q`
cd0q`cd0q`cHa_\cHa_\cHa_\cHa_\cHa_\c-=MXc-=MXbfn;Tc-=PZcHa\YbKJ)Pbfn>Vc-=JVbKJ)P
~>
<~\$riU\$riU\$i`R[^NWQ[^NWP[C!<J['[3I['R*FZa7!DZE^[>Z*CR=Z*CR=Z*:I:Yct@8YHG%2Y-+q0
Xf\\+XK8M)XK8M)XK8J'X/i;%WiE%tWMukrW2QVlVl-GjVl-GjVl-DhVP^5fV59u`Unjf^Unjc\USFQX
U8"BVU8"BUTqS0RTqJ'NT:_aJT:_aISt;OFSt;OFSt2FBS=H+>S=?":R[T\6R[T\5R@0J2R@0J2R@'A.
Q^=&*Q^=#(Q'IW"Q'IW"Pa%DsPa%DsPa%AqP*1ukP*1riOH>QcOH>QcO,o?_NfK-[NfK-[NK&pWNK&mU
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
np
1486 1591 mo
1482 1591 li
1482 1561 li
1486 1561 li
1486 1591 li
1409 1591 mo
1405 1591 li
1405 1561 li
1409 1561 li
1409 1591 li
1333 1591 mo
1329 1591 li
1329 1561 li
1333 1561 li
1333 1591 li
.64831 .709132 .658137 .841001 cmyk
f
1313 1591 mo
1307 1591 li
1307 1561 li
1313 1561 li
1313 1591 li
1243 1566.86 mo
1236 1561.06 li
1236 1561 li
1243 1561 li
1243 1566.86 li
.596063 .571191 .736599 .50695 cmyk
f
1307 1591 mo
1306 1591 li
1306 1561 li
1307 1561 li
1307 1591 li
1283.74 1591 mo
1272.17 1591 li
1243 1566.86 li
1243 1561 li
1284.22 1561 li
1283.74 1591 li
.550866 .418524 .532128 .122835 cmyk
f
1306 1591 mo
1283.74 1591 li
1284.22 1561 li
1306 1561 li
1306 1591 li
.605646 .44773 .545525 .175143 cmyk
f
1536 1485 mo
1209 1485 li
1209 1561 li
1536 1561 li
1536 1485 li
cp
.40766 .499672 .637873 .150271 cmyk
ef
1536 1491 mo
1216 1491 li
1216 1555 li
1536 1555 li
1536 1491 li
cp
.0735485 .128481 .144503 0 cmyk
ef
1536 1537.27 mo
1517.12 1531.05 li
1517.81 1535.63 li
1501.35 1543.65 li
1455.92 1535.82 li
1408.73 1544.38 li
1387.82 1537.9 li
1384.9 1541.88 li
1381.25 1538 li
1328.4 1538.8 li
1282.6 1547.12 li
1249.11 1543.05 li
1215.89 1555 li
1536 1555 li
1536 1537.27 li
cp
.20267 .180789 .19855 0 cmyk
ef
1536 3685 mo
1209 3685 li
1209 3761 li
1536 3761 li
1536 3685 li
.40766 .499672 .637873 .150271 cmyk
ef
1536 3691 mo
1216 3691 li
1216 3755 li
1536 3755 li
1536 3691 li
.0735485 .128481 .144503 0 cmyk
ef
1536 3737.27 mo
1517.12 3731.05 li
1517.81 3735.62 li
1501.35 3743.65 li
1455.92 3735.82 li
1408.73 3744.38 li
1387.82 3737.9 li
1384.9 3741.88 li
1381.25 3738 li
1328.4 3738.8 li
1282.6 3747.12 li
1249.11 3743.05 li
1215.89 3755 li
1536 3755 li
1536 3737.27 li
.20267 .180789 .19855 0 cmyk
ef
0 0 mo
271 0 li
271 4000 li
0 4000 li
0 0 li
.194797 .926177 .849973 .0906691 cmyk
ef
0 4000 mo
0 4000 li
0 0 li
68.0002 0 li
68.0002 850 li
54.9996 850 li
54.9996 0 li
51.0002 0 li
51.0002 850 li
0 850 li
0 880 li
51.0002 880 li
51.0002 2358 li
0 2358 li
0 2660 li
51.0002 2660 li
51.0002 2835 li
0 2835 li
0 2865 li
51.0002 2865 li
51.0002 3591.84 li
50.0745 3593.79 49.2031 3595.73 48.4107 3597.61 cv
49.0105 3579.3 49.0395 3554.22 45.4516 3554.02 cv
45.4378 3554.02 45.4238 3554.02 45.4099 3554.02 cv
41.6833 3554.02 35.5022 3580.61 34.7171 3598.96 cv
30.6736 3586.52 25.7632 3573.31 23.3728 3573.31 cv
23.3308 3573.31 23.29 3573.31 23.2495 3573.32 cv
20.3386 3573.92 22.6697 3595.9 26.9736 3610.05 cv
20.3494 3600.92 12.436 3590.78 10.2173 3590.78 cv
10.1244 3590.78 10.0419 3590.8 9.96952 3590.84 cv
7.84364 3591.9 15.5581 3608.59 22.7669 3618.88 cv
15.1726 3618.58 7.58128 3618.2 0 3617.7 cv
0 3686.37 li
0 3686.37 li
0 4000 li
66.0446 3613.87 mo
66.3769 3613.46 67.0626 3612.62 68.0002 3611.45 cv
68.0002 3612.66 li
67.3366 3613.06 66.6841 3613.47 66.0446 3613.87 cv
59.7731 3603.7 mo
62.4964 3596.59 65.5947 3588.12 68.0002 3580.65 cv
68.0002 3594.92 li
65.0993 3597.81 62.2747 3600.82 59.7731 3603.7 cv
54.9996 3583.93 mo
54.9996 2865 li
68.0002 2865 li
68.0002 3563.87 li
64.5986 3567.56 59.5752 3575.38 54.9996 3583.93 cv
68.0002 2835 mo
54.9996 2835 li
54.9996 2660 li
68.0002 2660 li
68.0002 2835 li
68.0002 2358 mo
54.9996 2358 li
54.9996 880 li
68.0002 880 li
68.0002 2358 li
gsave
[38.0547 -.0055127 .0055127 38.0547 3.77018 2000 ]ct
clp
/6 /Gradient get_res exec grestore
np
127 0 mo
131 0 li
131 4000 li
127 4000 li
127 0 li
204 0 mo
208 0 li
208 4000 li
204 4000 li
204 0 li
51.0002 0 mo
54.9996 0 li
54.9996 4000 li
51.0002 4000 li
51.0002 0 li
.536217 .773892 .692836 .787533 cmyk
ef
224 0 mo
301 0 li
301 4000 li
224 4000 li
224 0 li
.40766 .499672 .637873 .150271 cmyk
ef
230 0 mo
294 0 li
294 4000 li
230 4000 li
230 0 li
.0735485 .128481 .144503 0 cmyk
ef
230 0 mo
251.938 0 li
261.909 160.519 li
255.875 399.896 li
244.314 631.885 li
251.755 815.761 li
243.267 980.859 li
253.944 1261.38 li
262.3 1456 li
255.151 1477.47 li
243.414 1811.69 li
250.877 1921.75 li
245.324 2162 li
253 2363.34 li
247.1 2728.42 li
268.151 3080.07 li
255.024 3102.91 li
264.906 3112.29 li
253.389 3321.69 li
264.235 3561.93 li
249 3539.13 li
251.721 4000 li
230 4000 li
230 0 li
.20267 .180789 .19855 0 cmyk
ef
224 880 mo
208 880 li
208 850 li
224 850 li
224 880 li
204 880 mo
131 880 li
131 850 li
204 850 li
204 880 li
127 880 mo
68.0002 880 li
68.0002 850 li
127 850 li
127 880 li
.367956 .877256 .804196 .549889 cmyk
f
68.0002 880 mo
54.9996 880 li
54.9996 850 li
68.0002 850 li
68.0002 880 li
51.0002 880 mo
0 880 li
0 850 li
51.0002 850 li
51.0002 880 li
gsave
[38.0547 -.0055127 .0055127 38.0547 3.77018 2000 ]ct
clp
/7 /Gradient get_res exec grestore
np
208 880 mo
204 880 li
204 850 li
208 850 li
208 880 li
131 880 mo
127 880 li
127 850 li
131 850 li
131 880 li
54.9996 880 mo
51.0002 880 li
51.0002 850 li
54.9996 850 li
54.9996 880 li
.64831 .709132 .658137 .841001 cmyk
f
230 880 mo
224 880 li
224 850 li
230 850 li
230 880 li
294 855.028 mo
294 850 li
300.074 850 li
294 855.028 li
.596063 .571191 .736599 .50695 cmyk
f
263.834 880 mo
248.453 880 li
249.995 850 li
294 850 li
294 855.028 li
263.834 880 li
.550866 .418524 .532128 .122835 cmyk
f
248.453 880 mo
230 880 li
230 850 li
249.995 850 li
248.453 880 li
.605646 .44773 .545525 .175143 cmyk
f
0 774 mo
327 774 li
327 850 li
0 850 li
0 774 li
cp
.40766 .499672 .637873 .150271 cmyk
ef
0 780 mo
320 780 li
320 844 li
0 844 li
0 780 li
cp
.0735485 .128481 .144503 0 cmyk
ef
0 826.267 mo
18.8833 820.047 li
18.1865 824.625 li
34.6455 832.649 li
80.0776 824.824 li
127.273 833.382 li
148.179 826.901 li
151.098 830.884 li
154.748 827 li
207.599 827.799 li
253.399 836.117 li
286.895 832.048 li
320.109 844 li
0 844 li
0 826.267 li
cp
.20267 .180789 .19855 0 cmyk
ef
224 2865 mo
208 2865 li
208 2835 li
224 2835 li
224 2865 li
204 2865 mo
131 2865 li
131 2835 li
204 2835 li
204 2865 li
127 2865 mo
68.0002 2865 li
68.0002 2835 li
127 2835 li
127 2865 li
.367956 .877256 .804196 .549889 cmyk
f
68.0002 2865 mo
54.9996 2865 li
54.9996 2835 li
68.0002 2835 li
68.0002 2865 li
51.0002 2865 mo
0 2865 li
0 2835 li
51.0002 2835 li
51.0002 2865 li
gsave
[38.0547 -.0055127 .0055127 38.0547 3.77018 2000 ]ct
clp
/7 /Gradient get_res exec grestore
np
208 2865 mo
204 2865 li
204 2835 li
208 2835 li
208 2865 li
131 2865 mo
127 2865 li
127 2835 li
131 2835 li
131 2865 li
54.9996 2865 mo
51.0002 2865 li
51.0002 2835 li
54.9996 2835 li
54.9996 2865 li
.64831 .709132 .658137 .841001 cmyk
f
230 2865 mo
224 2865 li
224 2835 li
230 2835 li
230 2865 li
294 2840.03 mo
294 2835 li
300.074 2835 li
294 2840.03 li
.596063 .571191 .736599 .50695 cmyk
f
263.834 2865 mo
255.276 2865 li
253.48 2835 li
294 2835 li
294 2840.03 li
263.834 2865 li
.550866 .418524 .532128 .122835 cmyk
f
255.276 2865 mo
230 2865 li
230 2835 li
253.48 2835 li
255.276 2865 li
.605646 .44773 .545525 .175143 cmyk
f
0 2759 mo
327 2759 li
327 2835 li
0 2835 li
0 2759 li
cp
.40766 .499672 .637873 .150271 cmyk
ef
0 2765 mo
320 2765 li
320 2829 li
0 2829 li
0 2765 li
cp
.0735485 .128481 .144503 0 cmyk
ef
0 2811.27 mo
18.8833 2805.05 li
18.1865 2809.63 li
34.645 2817.65 li
80.0771 2809.82 li
127.272 2818.38 li
148.178 2811.9 li
151.097 2815.88 li
154.747 2812 li
207.597 2812.8 li
253.398 2821.12 li
286.893 2817.05 li
320.107 2829 li
0 2829 li
0 2811.27 li
cp
.20267 .180789 .19855 0 cmyk
ef
1344 2071 mo
1344 1861 li
1355 1861 li
1355 2071 li
1344 2071 li
cp
.221622 .231113 .397192 0 cmyk
ef
1350.14 1862.53 mo
1350.14 1785.58 1381.97 1723.19 1421.24 1723.19 cv
1460.5 1723.19 1492.34 1785.58 1492.34 1862.53 cv
1492.34 1939.49 1460.5 2001.87 1421.24 2001.87 cv
1381.97 2001.87 1350.14 1939.49 1350.14 1862.53 cv
cp
1341.22 1862.53 mo
1341.22 1946.28 1377.05 2014.18 1421.24 2014.18 cv
1465.43 2014.18 1501.25 1946.28 1501.25 1862.53 cv
1501.25 1778.78 1465.43 1710.89 1421.24 1710.89 cv
1377.05 1710.89 1341.22 1778.78 1341.22 1862.53 cv
cp
.1514 .165713 .31339 0 cmyk
ef
1358.56 1862.53 mo
1358.56 1785.58 1388.62 1723.19 1425.7 1723.19 cv
1462.77 1723.19 1492.83 1785.58 1492.83 1862.53 cv
1492.83 1939.49 1462.77 2001.87 1425.7 2001.87 cv
1388.62 2001.87 1358.56 1939.49 1358.56 1862.53 cv
cp
1350.14 1862.53 mo
1350.14 1946.28 1383.97 2014.18 1425.7 2014.18 cv
1467.43 2014.18 1501.25 1946.28 1501.25 1862.53 cv
1501.25 1778.78 1467.43 1710.89 1425.7 1710.89 cv
1383.97 1710.89 1350.14 1778.78 1350.14 1862.53 cv
cp
.221622 .231113 .397192 0 cmyk
ef
1366.98 1862.53 mo
1366.98 1785.58 1395.27 1723.19 1430.16 1723.19 cv
1465.05 1723.19 1493.33 1785.58 1493.33 1862.53 cv
1493.33 1939.49 1465.05 2001.87 1430.16 2001.87 cv
1395.27 2001.87 1366.98 1939.49 1366.98 1862.53 cv
cp
1359.06 1862.53 mo
1359.06 1946.28 1390.89 2014.18 1430.16 2014.18 cv
1469.42 2014.18 1501.25 1946.28 1501.25 1862.53 cv
1501.25 1778.78 1469.42 1710.89 1430.16 1710.89 cv
1390.89 1710.89 1359.06 1778.78 1359.06 1862.53 cv
cp
.292332 .293462 .463539 .00335698 cmyk
ef
1496.79 1862.53 mo
1496.79 1785.58 1464.96 1723.19 1425.7 1723.19 cv
1386.43 1723.19 1354.6 1785.58 1354.6 1862.53 cv
1354.6 1939.49 1386.43 2001.87 1425.7 2001.87 cv
1464.96 2001.87 1496.79 1939.49 1496.79 1862.53 cv
cp
1505.71 1862.53 mo
1505.71 1946.28 1469.89 2014.18 1425.7 2014.18 cv
1381.51 2014.18 1345.68 1946.28 1345.68 1862.53 cv
1345.68 1778.78 1381.51 1710.89 1425.7 1710.89 cv
1469.89 1710.89 1505.71 1778.78 1505.71 1862.53 cv
cp
ef
1488.37 1862.53 mo
1488.37 1785.58 1458.32 1723.19 1421.24 1723.19 cv
1384.16 1723.19 1354.1 1785.58 1354.1 1862.53 cv
1354.1 1939.49 1384.16 2001.87 1421.24 2001.87 cv
1458.32 2001.87 1488.37 1939.49 1488.37 1862.53 cv
cp
1496.79 1862.53 mo
1496.79 1946.28 1462.97 2014.18 1421.24 2014.18 cv
1379.51 2014.18 1345.68 1946.28 1345.68 1862.53 cv
1345.68 1778.78 1379.51 1710.89 1421.24 1710.89 cv
1462.97 1710.89 1496.79 1778.78 1496.79 1862.53 cv
cp
.221622 .231113 .397192 0 cmyk
ef
1479.95 1862.53 mo
1479.95 1785.58 1451.67 1723.19 1416.78 1723.19 cv
1381.89 1723.19 1353.61 1785.58 1353.61 1862.53 cv
1353.61 1939.49 1381.89 2001.87 1416.78 2001.87 cv
1451.67 2001.87 1479.95 1939.49 1479.95 1862.53 cv
cp
1487.88 1862.53 mo
1487.88 1946.28 1456.04 2014.18 1416.78 2014.18 cv
1377.51 2014.18 1345.68 1946.28 1345.68 1862.53 cv
1345.68 1778.78 1377.51 1710.89 1416.78 1710.89 cv
1456.04 1710.89 1487.88 1778.78 1487.88 1862.53 cv
cp
.1514 .165713 .31339 0 cmyk
ef
1418 1733 mo
1418 1690 li
1429 1690 li
1429 1733 li
1418 1733 li
cp
.598993 .528649 .527825 .231907 cmyk
ef
1418 1730 mo
1418 1690 li
1426 1690 li
1426 1730 li
1418 1730 li
cp
.189517 .14316 0 0 cmyk
ef
0 2358 mo
216 2358 li
216 2660 li
0 2660 li
0 2358 li
.377111 .45832 .589776 .0887465 cmyk
ef
209 2652 mo
0 2652 li
0 2365 li
209 2365 li
209 2652 li
.412238 .536736 .735073 .224216 cmyk
f
181.5 2414.9 mo
181.5 2414.9 li
179.024 2414.9 177 2416.49 177 2418.44 cv
177 2645.66 li
177 2647.6 179.024 2649.2 181.5 2649.2 cv
183.976 2649.2 186 2647.6 186 2645.66 cv
186 2418.44 li
186 2416.49 183.976 2414.9 181.5 2414.9 cv
cp
.297063 .288243 .657801 .0111391 cmyk
ef
205.054 2408.05 mo
205.054 2424.53 207.279 2438.2 189 2440.8 cv
189 2459.62 li
189 2459.81 185.851 2459.96 182 2459.96 cv
178.149 2459.96 175 2459.81 175 2459.62 cv
175 2440.8 li
156.721 2438.2 158.946 2424.53 158.946 2408.05 cv
158.946 2389.71 175.048 2374.85 182 2374.85 cv
188.952 2374.85 205.054 2389.71 205.054 2408.05 cv
cp
.655665 .565209 .422217 .177401 cmyk
ef
205.732 2407.78 mo
205.732 2426.65 208.574 2441.95 182 2441.95 cv
182 2373.6 li
189.156 2373.6 205.732 2388.9 205.732 2407.78 cv
cp
.538445 .440406 .294774 .0238651 cmyk
ef
55.501 2414.9 mo
55.501 2414.9 li
53.0244 2414.9 51 2416.49 51 2418.44 cv
51 2645.66 li
51 2647.6 53.0244 2649.2 55.501 2649.2 cv
57.9756 2649.2 60 2647.6 60 2645.66 cv
60 2418.44 li
60 2416.49 57.9756 2414.9 55.501 2414.9 cv
cp
.297063 .288243 .657801 .0111391 cmyk
ef
48 2429 mo
48 2450.26 li
48 2450.98 62 2450.98 62 2450.26 cv
62 2429 li
105 2429 li
105 2418.8 li
105 2412 li
105 2391.2 li
105 2390.63 100 2390.63 100 2391.2 cv
100 2412 li
96 2412 li
96 2390.9 li
96 2390.33 91 2390.33 91 2390.9 cv
91 2412 li
86 2412 li
86 2390.9 li
86 2390.33 81 2390.33 81 2390.9 cv
81 2412 li
77 2412 li
77 2390.9 li
77 2390.33 72 2390.33 72 2390.9 cv
72 2412 li
67 2412 li
67 2390.9 li
67 2390.33 62 2390.33 62 2390.9 cv
62 2412 li
58 2412 li
58 2390.9 li
58 2390.33 53 2390.33 53 2390.9 cv
53 2412 li
49 2412 li
49 2390.9 li
49 2390.33 44 2390.33 44 2390.9 cv
44 2412 li
39 2412 li
39 2390.9 li
39 2390.33 34 2390.33 34 2390.9 cv
34 2412 li
30 2412 li
30 2390.9 li
30 2390.33 25 2390.33 25 2390.9 cv
25 2412 li
20 2412 li
20 2390.9 li
20 2390.33 15 2390.33 15 2390.9 cv
15 2412 li
11 2412 li
11 2391.2 li
11 2390.63 6 2390.63 6 2391.2 cv
6 2412 li
6 2429 li
48 2429 li
cp
.217197 .946105 .890959 .129519 cmyk
ef
34 2435 mo
34 2416 li
42 2416 li
42 2435 li
34 2435 li
cp
.674311 .616815 .631098 .545403 cmyk
ef
34 2434 mo
34 2416 li
40 2416 li
40 2434 li
34 2434 li
cp
.354223 .278691 .0488289 0 cmyk
ef
68 2435 mo
68 2416 li
76 2416 li
76 2435 li
68 2435 li
cp
.674311 .616815 .631098 .545403 cmyk
ef
68 2434 mo
68 2416 li
74 2416 li
74 2434 li
68 2434 li
cp
.354223 .278691 .0488289 0 cmyk
ef
165 2446 mo
165 2427 li
173 2427 li
173 2446 li
165 2446 li
cp
.674311 .616815 .631098 .545403 cmyk
ef
165 2445 mo
165 2427 li
171 2427 li
171 2445 li
165 2445 li
cp
.354223 .278691 .0488289 0 cmyk
ef
191 2446 mo
191 2427 li
199 2427 li
199 2446 li
191 2446 li
cp
.674311 .616815 .631098 .545403 cmyk
ef
191 2445 mo
191 2427 li
197 2427 li
197 2445 li
191 2445 li
cp
.354223 .278691 .0488289 0 cmyk
ef
1536 690 mo
1321 690 li
1321 992 li
1536 992 li
1536 690 li
.377111 .45832 .589776 .0887465 cmyk
ef
1536 985 mo
1327 985 li
1327 698 li
1536 698 li
1536 985 li
.412238 .536736 .735073 .224216 cmyk
f
1354.5 747.294 mo
1354.5 747.294 li
1356.98 747.294 1359 748.886 1359 750.833 cv
1359 978.056 li
1359 980.001 1356.98 981.593 1354.5 981.593 cv
1352.02 981.593 1350 980.001 1350 978.056 cv
1350 750.833 li
1350 748.886 1352.02 747.294 1354.5 747.294 cv
cp
.297063 .288243 .657801 .0111391 cmyk
ef
1331.95 740.449 mo
1331.95 756.925 1329.72 770.596 1348 773.199 cv
1348 792.02 li
1348 792.206 1351.15 792.357 1355 792.357 cv
1358.85 792.357 1362 792.206 1362 792.02 cv
1362 773.199 li
1380.28 770.596 1378.05 756.925 1378.05 740.449 cv
1378.05 722.113 1361.95 707.25 1355 707.25 cv
1348.05 707.25 1331.95 722.113 1331.95 740.449 cv
cp
.655665 .565209 .422217 .177401 cmyk
ef
1331.27 740.173 mo
1331.27 759.05 1328.43 774.351 1355 774.351 cv
1355 705.997 li
1347.84 705.997 1331.27 721.298 1331.27 740.173 cv
cp
.538445 .440406 .294774 .0238651 cmyk
ef
1503 767 mo
1503 748 li
1495 748 li
1495 767 li
1503 767 li
cp
.674311 .616815 .631098 .545403 cmyk
ef
1503 766 mo
1503 748 li
1497 748 li
1497 766 li
1503 766 li
cp
.354223 .278691 .0488289 0 cmyk
ef
1468 767 mo
1468 748 li
1460 748 li
1460 767 li
1468 767 li
cp
.674311 .616815 .631098 .545403 cmyk
ef
1469 766 mo
1469 748 li
1463 748 li
1463 766 li
1469 766 li
cp
.354223 .278691 .0488289 0 cmyk
ef
1372 778 mo
1372 759 li
1364 759 li
1364 778 li
1372 778 li
cp
.674311 .616815 .631098 .545403 cmyk
ef
1372 777 mo
1372 759 li
1366 759 li
1366 777 li
1372 777 li
cp
.354223 .278691 .0488289 0 cmyk
ef
1346 778 mo
1346 759 li
1338 759 li
1338 778 li
1346 778 li
cp
.674311 .616815 .631098 .545403 cmyk
ef
1346 777 mo
1346 759 li
1340 759 li
1340 777 li
1346 777 li
cp
.354223 .278691 .0488289 0 cmyk
ef
310.901 4000 mo
1265.55 4000 li
1265.55 3900.97 1148.59 3801.93 1148.59 3702.9 cv
758.902 3677.92 598.133 3679.43 346.8 3702.9 cv
305.882 3799.86 392.411 3952.35 310.901 4000 cv
.127382 .217868 .886473 0 cmyk
ef
956.946 4000 mo
985.336 4000 li
987.561 3992.94 998.917 3985.8 1001.96 3979.4 cv
1004.14 3974.85 989.934 3969.19 991.884 3964.9 cv
996.083 3955.69 1010.27 3947.15 1016.92 3939.21 cv
1021.38 3933.89 1019.44 3929.08 1020.11 3923.63 cv
1021.87 3909.24 1020.66 3890.62 1023.55 3878.08 cv
1025.34 3870.31 1032.37 3867.83 1031.6 3861.21 cv
1030.49 3851.58 1023.49 3842.35 1023.34 3834.04 cv
1023.22 3827.68 1030.55 3821.85 1027.01 3816.78 cv
1023.2 3811.34 1005.14 3808.47 1002.37 3803.67 cv
993.051 3787.48 963.302 3775.78 957.525 3760.29 cv
956 3756.19 942.582 3754.99 941.907 3750.48 cv
940.757 3742.76 950.663 3731.71 952.435 3722.13 cv
953.124 3718.41 950.009 3718.49 946.976 3718.56 cv
943.574 3718.65 940.272 3718.73 942.555 3713.46 cv
944.699 3708.5 936.334 3708.48 939.331 3702.88 cv
940.992 3699.79 952.102 3694.84 954.033 3691.53 cv
944.535 3691.14 935.647 3690.79 927.296 3690.48 cv
928.604 3690.58 916.826 3700.81 916.063 3702.88 cv
914.008 3708.48 920.074 3708.5 918.624 3713.46 cv
917.079 3718.73 919.825 3718.65 922.623 3718.56 cv
925.118 3718.48 927.655 3718.41 927.235 3722.13 cv
926.151 3731.71 919.199 3742.76 920.195 3750.48 cv
920.778 3754.99 930.538 3756.19 931.73 3760.29 cv
936.246 3775.78 958.07 3787.48 965.175 3803.67 cv
967.282 3808.47 980.44 3811.34 983.32 3816.78 cv
985.999 3821.85 980.801 3827.68 981.02 3834.04 cv
981.307 3842.35 986.58 3851.58 987.587 3861.21 cv
988.281 3867.83 983.239 3870.31 982.102 3878.08 cv
980.271 3890.62 981.536 3909.24 980.56 3923.63 cv
980.19 3929.08 981.704 3933.89 978.579 3939.21 cv
973.919 3947.15 963.809 3955.69 960.957 3964.9 cv
959.633 3969.19 970.054 3974.85 968.575 3979.4 cv
966.499 3985.8 958.412 3992.94 956.946 4000 cv
.152316 0 .597955 0 cmyk
ef
774.754 4000 mo
829.727 4000 li
829.758 3995.26 817.265 3988.02 817.131 3983.52 cv
816.928 3976.78 825.617 3969.89 825.167 3963.7 cv
824.618 3956.17 829.599 3949.35 827.562 3942.95 cv
824.852 3934.44 814.844 3926.67 812.637 3918.92 cv
810.375 3910.98 812.989 3899.68 810.11 3892.82 cv
806.507 3884.24 797.887 3876.42 793.985 3869.4 cv
790.509 3863.13 791.884 3857.49 786.596 3852.49 cv
781.924 3848.07 770.767 3844.97 764.932 3841.26 cv
754.288 3834.49 748.122 3827.71 737.765 3821.47 cv
726.363 3814.6 710.437 3813.16 699.125 3806.86 cv
693.661 3803.82 707.522 3803.32 701.917 3800.06 cv
692.779 3794.75 679.858 3792.47 670.7 3785.87 cv
663.956 3781.01 664.394 3770.42 658.576 3764.03 cv
652.319 3757.16 639.808 3754.4 632.828 3746.59 cv
626.409 3739.41 635.585 3738.01 629.268 3729.19 cv
622.067 3719.13 608.728 3713.03 601.541 3703.28 cv
598.269 3698.84 600.382 3691.83 597.288 3685.43 cv
586.148 3685.9 573.583 3686.4 558.456 3686.89 cv
560.606 3693.3 555.139 3698.84 558.182 3703.28 cv
564.871 3713.03 581.242 3719.13 587.848 3729.19 cv
593.642 3738.01 580.532 3739.41 587.009 3746.59 cv
594.053 3754.4 610.387 3757.16 616.744 3764.03 cv
622.656 3770.42 618.552 3781.01 626.243 3785.87 cv
636.693 3792.47 653.75 3794.75 664.593 3800.06 cv
671.243 3803.32 651.971 3803.82 658.499 3806.86 cv
672.013 3813.16 693.494 3814.6 706.944 3821.47 cv
719.16 3827.71 725.421 3834.49 737.859 3841.26 cv
744.677 3844.97 759.034 3848.07 764.015 3852.49 cv
769.651 3857.49 765.895 3863.13 768.618 3869.4 cv
771.676 3876.42 780.976 3884.24 783.109 3892.82 cv
784.814 3899.68 777.477 3910.98 777.972 3918.92 cv
778.456 3926.67 789.685 3934.44 790.611 3942.95 cv
791.307 3949.35 782.188 3956.17 780.456 3963.7 cv
779.034 3969.89 764.775 3976.78 762.829 3983.52 cv
761.532 3988.02 776.365 3995.26 774.754 4000 cv
ef
1285.81 4000 mo
1108.21 4000 li
1158.29 3952.2 1145.4 3898.81 1091.31 3836.81 cv
1037.21 3774.82 1096.76 3790.83 1085 3758.97 cv
1075.81 3734.1 1047.1 3716.73 988.908 3693.5 cv
1127.26 3698.4 1185.49 3708.45 1273.18 3702.9 cv
1287.57 3799.86 1257.14 3952.35 1285.81 4000 cv
310.901 4000 mo
599.738 4000 li
458.715 3949.02 526.32 3886.04 516.786 3836.81 cv
507.77 3790.27 449.595 3784.14 462.051 3752.28 cv
471.774 3727.41 483.234 3711.62 544.838 3688.39 cv
404.428 3686.73 422.48 3702.6 324.266 3702.9 cv
309.033 3799.86 341.248 3952.35 310.901 4000 cv
.216556 .530693 .79913 .0438849 cmyk
ef
310.901 4000 mo
480.982 4000 li
458.002 3987.52 475.456 3979.76 463.171 3965.19 cv
456.534 3957.32 437.478 3942.77 435.26 3935.05 cv
432.534 3925.55 442.633 3925.83 445.138 3916.88 cv
447.462 3908.58 434.635 3893.6 434.926 3885.11 cv
435.522 3867.72 437.497 3849.68 435.539 3834.47 cv
434.21 3824.14 415.291 3801.22 411.566 3790.1 cv
404.216 3768.18 422.075 3760.63 414.315 3746.46 cv
408.29 3735.46 394.947 3735.5 404.234 3729.24 cv
415.164 3721.88 430.451 3723.66 431.829 3707.03 cv
432.46 3699.43 425.405 3699.7 440.6 3691.1 cv
416.636 3656.98 412.589 3643.92 355.604 3650.16 cv
345.467 3747.13 331.096 3952.35 310.901 4000 cv
1285.81 4000 mo
1186.12 4000 li
1190.7 3994.33 1185.46 3983.35 1189.21 3977.12 cv
1198.1 3962.4 1213.28 3951.25 1210.9 3934.32 cv
1208.49 3917.19 1189.13 3902.17 1178.61 3884.08 cv
1166.87 3863.9 1163.38 3840.62 1150.18 3820.98 cv
1108.53 3758.99 1126.1 3777.61 1117.04 3745.76 cv
1109.97 3720.89 1124.37 3721.05 1079.55 3697.83 cv
1115.68 3679.39 1107.97 3665.52 1175.5 3659.97 cv
1186.58 3756.93 1263.73 3952.35 1285.81 4000 cv
.442145 .74316 .843717 .616052 cmyk
ef
898.44 3979.5 mo
890.921 3979.5 884.826 3978.26 884.826 3976.74 cv
884.826 3975.22 890.921 3973.99 898.44 3973.99 cv
905.958 3973.99 912.053 3975.22 912.053 3976.74 cv
912.053 3978.26 905.958 3979.5 898.44 3979.5 cv
635.733 3974.69 mo
628.216 3974.69 622.12 3973.46 622.12 3971.94 cv
622.12 3970.42 628.216 3969.18 635.733 3969.18 cv
643.252 3969.18 649.347 3970.42 649.347 3971.94 cv
649.347 3973.46 643.252 3974.69 635.733 3974.69 cv
1024.54 3965.36 mo
1017.02 3965.36 1010.92 3964.13 1010.92 3962.61 cv
1010.92 3961.09 1017.02 3959.85 1024.54 3959.85 cv
1032.05 3959.85 1038.15 3961.09 1038.15 3962.61 cv
1038.15 3964.13 1032.05 3965.36 1024.54 3965.36 cv
1120.18 3962.55 mo
1112.66 3962.55 1106.56 3961.32 1106.56 3959.79 cv
1106.56 3958.27 1112.66 3957.04 1120.18 3957.04 cv
1127.7 3957.04 1133.79 3958.27 1133.79 3959.79 cv
1133.79 3961.32 1127.7 3962.55 1120.18 3962.55 cv
761.829 3960.56 mo
754.311 3960.56 748.216 3959.33 748.216 3957.81 cv
748.216 3956.28 754.311 3955.05 761.829 3955.05 cv
769.348 3955.05 775.443 3956.28 775.443 3957.81 cv
775.443 3959.33 769.348 3960.56 761.829 3960.56 cv
857.473 3957.75 mo
849.953 3957.75 843.859 3956.51 843.859 3954.99 cv
843.859 3953.47 849.953 3952.24 857.473 3952.24 cv
864.991 3952.24 871.085 3953.47 871.085 3954.99 cv
871.085 3956.51 864.991 3957.75 857.473 3957.75 cv
936.177 3949.03 mo
928.658 3949.03 922.561 3947.79 922.561 3946.27 cv
922.561 3944.75 928.658 3943.52 936.177 3943.52 cv
943.695 3943.52 949.79 3944.75 949.79 3946.27 cv
949.79 3947.79 943.695 3949.03 936.177 3949.03 cv
673.471 3944.23 mo
665.951 3944.23 659.856 3942.99 659.856 3941.47 cv
659.856 3939.95 665.951 3938.72 673.471 3938.72 cv
680.99 3938.72 687.085 3939.95 687.085 3941.47 cv
687.085 3942.99 680.99 3944.23 673.471 3944.23 cv
980.518 3933.02 mo
967.593 3932.8 957.73 3931.67 957.73 3930.3 cv
957.73 3928.93 967.6 3927.8 980.533 3927.58 cv
980.591 3929.42 980.682 3931.22 980.518 3933.02 cv
.365301 .511437 1 .180819 cmyk
f
984.957 3933.06 mo
983.445 3933.06 981.963 3933.04 980.518 3933.02 cv
980.682 3931.22 980.591 3929.42 980.533 3927.58 cv
981.973 3927.56 983.451 3927.55 984.957 3927.55 cv
999.995 3927.55 1012.19 3928.78 1012.19 3930.3 cv
1012.19 3931.82 999.995 3933.06 984.957 3933.06 cv
.435187 .35465 .849058 .0968338 cmyk
f
722.252 3928.25 mo
707.215 3928.25 695.025 3927.02 695.025 3925.5 cv
695.025 3923.98 707.215 3922.75 722.252 3922.75 cv
737.29 3922.75 749.479 3923.98 749.479 3925.5 cv
749.479 3927.02 737.29 3928.25 722.252 3928.25 cv
1090.81 3905.89 mo
1075.77 3905.89 1063.58 3904.66 1063.58 3903.14 cv
1063.58 3901.61 1075.77 3900.38 1090.81 3900.38 cv
1105.84 3900.38 1118.03 3901.61 1118.03 3903.14 cv
1118.03 3904.66 1105.84 3905.89 1090.81 3905.89 cv
1021.24 3905.22 mo
1021.29 3903.71 1021.34 3902.21 1021.39 3900.71 cv
1024.85 3901.21 1027.1 3902.03 1027.1 3902.95 cv
1027.1 3903.89 1024.78 3904.72 1021.24 3905.22 cv
.365301 .511437 1 .180819 cmyk
f
1013.49 3905.71 mo
1005.97 3905.71 999.877 3904.47 999.877 3902.95 cv
999.877 3901.43 1005.97 3900.2 1013.49 3900.2 cv
1016.43 3900.2 1019.16 3900.39 1021.39 3900.71 cv
1021.34 3902.21 1021.29 3903.71 1021.24 3905.22 cv
1019.04 3905.53 1016.37 3905.71 1013.49 3905.71 cv
.435187 .35465 .849058 .0968338 cmyk
f
828.099 3901.09 mo
821.863 3901.09 816.117 3900.88 811.526 3900.52 cv
811.454 3899.01 811.319 3897.55 811.07 3896.19 cv
815.733 3895.81 821.654 3895.58 828.099 3895.58 cv
843.136 3895.58 855.326 3896.81 855.326 3898.34 cv
855.326 3899.86 843.136 3901.09 828.099 3901.09 cv
.365301 .511437 1 .180819 cmyk
f
811.526 3900.52 mo
805.048 3900.02 800.872 3899.23 800.872 3898.34 cv
800.872 3897.47 804.853 3896.69 811.07 3896.19 cv
811.319 3897.55 811.454 3899.01 811.526 3900.52 cv
.435187 .35465 .849058 .0968338 cmyk
f
750.784 3900.91 mo
743.266 3900.91 737.172 3899.67 737.172 3898.15 cv
737.172 3896.63 743.266 3895.4 750.784 3895.4 cv
758.303 3895.4 764.399 3896.63 764.399 3898.15 cv
764.399 3899.67 758.303 3900.91 750.784 3900.91 cv
889.499 3895.52 mo
881.98 3895.52 875.886 3894.28 875.886 3892.76 cv
875.886 3891.24 881.98 3890.01 889.499 3890.01 cv
897.017 3890.01 903.112 3891.24 903.112 3892.76 cv
903.112 3894.28 897.017 3895.52 889.499 3895.52 cv
626.793 3890.72 mo
619.275 3890.72 613.181 3889.48 613.181 3887.96 cv
613.181 3886.44 619.275 3885.21 626.793 3885.21 cv
634.311 3885.21 640.408 3886.44 640.408 3887.96 cv
640.408 3889.48 634.311 3890.72 626.793 3890.72 cv
929.733 3885.33 mo
922.216 3885.33 916.121 3884.1 916.121 3882.58 cv
916.121 3881.06 922.216 3879.82 929.733 3879.82 cv
937.252 3879.82 943.346 3881.06 943.346 3882.58 cv
943.346 3884.1 937.252 3885.33 929.733 3885.33 cv
667.029 3880.53 mo
659.51 3880.53 653.414 3879.3 653.414 3877.78 cv
653.414 3876.26 659.51 3875.02 667.029 3875.02 cv
674.547 3875.02 680.641 3876.26 680.641 3877.78 cv
680.641 3879.3 674.547 3880.53 667.029 3880.53 cv
1024.5 3875.26 mo
1025.39 3873.3 1026.59 3871.7 1027.75 3870.22 cv
1036.54 3870.67 1042.56 3871.6 1042.56 3872.67 cv
1042.56 3873.86 1035.03 3874.88 1024.5 3875.26 cv
.365301 .511437 1 .180819 cmyk
f
1015.33 3875.42 mo
1000.29 3875.42 988.105 3874.19 988.105 3872.67 cv
988.105 3871.15 1000.29 3869.91 1015.33 3869.91 cv
1019.81 3869.91 1024.03 3870.02 1027.75 3870.22 cv
1026.59 3871.7 1025.39 3873.3 1024.5 3875.26 cv
1021.64 3875.37 1018.55 3875.42 1015.33 3875.42 cv
.435187 .35465 .849058 .0968338 cmyk
f
752.626 3870.62 mo
737.588 3870.62 725.4 3869.39 725.4 3867.87 cv
725.4 3866.35 737.588 3865.11 752.626 3865.11 cv
758.165 3865.11 763.318 3865.28 767.617 3865.57 cv
767.766 3866.82 768.052 3868.09 768.618 3869.4 cv
768.716 3869.62 768.821 3869.85 768.931 3870.07 cv
764.386 3870.42 758.742 3870.62 752.626 3870.62 cv
.365301 .511437 1 .180819 cmyk
f
768.931 3870.07 mo
768.821 3869.85 768.716 3869.62 768.618 3869.4 cv
768.052 3868.09 767.766 3866.82 767.617 3865.57 cv
774.99 3866.06 779.853 3866.91 779.853 3867.87 cv
779.853 3868.77 775.562 3869.57 768.931 3870.07 cv
.435187 .35465 .849058 .0968338 cmyk
f
1054.65 3864.5 mo
1047.13 3864.5 1041.03 3863.27 1041.03 3861.75 cv
1041.03 3860.23 1047.13 3858.99 1054.65 3858.99 cv
1062.16 3858.99 1068.26 3860.23 1068.26 3861.75 cv
1068.26 3863.27 1062.16 3864.5 1054.65 3864.5 cv
791.94 3859.7 mo
791.54 3859.7 791.144 3859.7 790.754 3859.69 cv
790.213 3857.82 789.511 3856.02 788.214 3854.3 cv
789.398 3854.23 790.648 3854.19 791.94 3854.19 cv
799.458 3854.19 805.553 3855.43 805.553 3856.95 cv
805.553 3858.47 799.458 3859.7 791.94 3859.7 cv
.365301 .511437 1 .180819 cmyk
f
790.754 3859.69 mo
783.791 3859.57 778.327 3858.39 778.327 3856.95 cv
778.327 3855.69 782.507 3854.63 788.214 3854.3 cv
789.511 3856.02 790.213 3857.82 790.754 3859.69 cv
.435187 .35465 .849058 .0968338 cmyk
f
967.471 3854.86 mo
959.952 3854.86 953.858 3853.63 953.858 3852.11 cv
953.858 3850.59 959.952 3849.35 967.471 3849.35 cv
974.99 3849.35 981.085 3850.59 981.085 3852.11 cv
981.085 3853.63 974.99 3854.86 967.471 3854.86 cv
704.765 3850.06 mo
697.247 3850.06 691.151 3848.83 691.151 3847.31 cv
691.151 3845.79 697.247 3844.55 704.765 3844.55 cv
712.284 3844.55 718.379 3845.79 718.379 3847.31 cv
718.379 3848.83 712.284 3850.06 704.765 3850.06 cv
858.369 3836.29 mo
850.851 3836.29 844.756 3835.06 844.756 3833.54 cv
844.756 3832.01 850.851 3830.78 858.369 3830.78 cv
865.887 3830.78 871.983 3832.01 871.983 3833.54 cv
871.983 3835.06 865.887 3836.29 858.369 3836.29 cv
752.533 3832.2 mo
750.409 3830.5 748.323 3828.83 746.133 3827.17 cv
753.066 3827.3 758.497 3828.48 758.497 3829.92 cv
758.497 3830.86 756.132 3831.7 752.533 3832.2 cv
.365301 .511437 1 .180819 cmyk
f
744.883 3832.67 mo
737.364 3832.67 731.271 3831.44 731.271 3829.92 cv
731.271 3828.4 737.364 3827.16 744.883 3827.16 cv
745.305 3827.16 745.722 3827.17 746.133 3827.17 cv
748.323 3828.83 750.409 3830.5 752.533 3832.2 cv
750.352 3832.5 747.719 3832.67 744.883 3832.67 cv
.435187 .35465 .849058 .0968338 cmyk
f
945.543 3826.65 mo
938.024 3826.65 931.931 3825.42 931.931 3823.9 cv
931.931 3822.38 938.024 3821.14 945.543 3821.14 cv
953.062 3821.14 959.156 3822.38 959.156 3823.9 cv
959.156 3825.42 953.062 3826.65 945.543 3826.65 cv
618.788 3818.54 mo
611.269 3818.54 605.175 3817.31 605.175 3815.78 cv
605.175 3814.26 611.269 3813.03 618.788 3813.03 cv
626.307 3813.03 632.402 3814.26 632.402 3815.78 cv
632.402 3817.31 626.307 3818.54 618.788 3818.54 cv
906.229 3815.73 mo
891.193 3815.73 879.003 3814.5 879.003 3812.98 cv
879.003 3811.46 891.193 3810.22 906.229 3810.22 cv
921.268 3810.22 933.457 3811.46 933.457 3812.98 cv
933.457 3814.5 921.268 3815.73 906.229 3815.73 cv
523.145 3815.73 mo
515.626 3815.73 509.531 3814.49 509.531 3812.97 cv
509.531 3811.45 515.626 3810.22 523.145 3810.22 cv
530.664 3810.22 536.758 3811.45 536.758 3812.97 cv
536.758 3814.49 530.664 3815.73 523.145 3815.73 cv
820.632 3805.82 mo
813.114 3805.82 807.019 3804.59 807.019 3803.07 cv
807.019 3801.55 813.114 3800.31 820.632 3800.31 cv
828.15 3800.31 834.245 3801.55 834.245 3803.07 cv
834.245 3804.59 828.15 3805.82 820.632 3805.82 cv
707.146 3802.2 mo
705.727 3802.2 704.359 3802.16 703.073 3802.08 cv
703.504 3801.53 703.322 3800.88 701.917 3800.06 cv
700.381 3799.17 698.739 3798.36 697.026 3797.61 cv
699.517 3797.05 703.129 3796.7 707.146 3796.7 cv
714.665 3796.7 720.762 3797.93 720.762 3799.45 cv
720.762 3800.97 714.665 3802.2 707.146 3802.2 cv
.365301 .511437 1 .180819 cmyk
f
703.073 3802.08 mo
697.545 3801.73 693.534 3800.68 693.534 3799.45 cv
693.534 3798.74 694.855 3798.1 697.026 3797.61 cv
698.739 3798.36 700.381 3799.17 701.917 3800.06 cv
703.322 3800.88 703.504 3801.53 703.073 3802.08 cv
.435187 .35465 .849058 .0968338 cmyk
f
780.397 3795.64 mo
772.879 3795.64 766.784 3794.4 766.784 3792.88 cv
766.784 3791.36 772.879 3790.13 780.397 3790.13 cv
787.915 3790.13 794.011 3791.36 794.011 3792.88 cv
794.011 3794.4 787.915 3795.64 780.397 3795.64 cv
670.783 3785.93 mo
670.755 3785.91 670.728 3785.89 670.7 3785.87 cv
668.871 3784.55 667.57 3782.81 666.53 3780.85 cv
677.578 3781.2 685.593 3782.24 685.593 3783.48 cv
685.593 3784.55 679.576 3785.47 670.783 3785.93 cv
.365301 .511437 1 .180819 cmyk
f
658.366 3786.23 mo
643.329 3786.23 631.138 3785 631.138 3783.48 cv
631.138 3781.96 643.329 3780.72 658.366 3780.72 cv
661.21 3780.72 663.953 3780.77 666.53 3780.85 cv
667.57 3782.81 668.871 3784.55 670.7 3785.87 cv
670.728 3785.89 670.755 3785.91 670.783 3785.93 cv
667.06 3786.12 662.839 3786.23 658.366 3786.23 cv
.435187 .35465 .849058 .0968338 cmyk
f
904.389 3785.45 mo
896.869 3785.45 890.774 3784.21 890.774 3782.69 cv
890.774 3781.17 896.869 3779.94 904.389 3779.94 cv
911.907 3779.94 918.002 3781.17 918.002 3782.69 cv
918.002 3784.21 911.907 3785.45 904.389 3785.45 cv
983.413 3785.26 mo
980.963 3783.43 978.479 3781.62 976.06 3779.81 cv
977.88 3779.77 979.769 3779.75 981.703 3779.75 cv
996.74 3779.75 1008.93 3780.99 1008.93 3782.51 cv
1008.93 3783.97 997.653 3785.17 983.413 3785.26 cv
.365301 .511437 1 .180819 cmyk
f
981.703 3785.26 mo
966.665 3785.26 954.476 3784.03 954.476 3782.51 cv
954.476 3781.18 963.73 3780.08 976.06 3779.81 cv
978.479 3781.62 980.963 3783.43 983.413 3785.26 cv
982.848 3785.26 982.278 3785.26 981.703 3785.26 cv
.435187 .35465 .849058 .0968338 cmyk
f
552.517 3759.07 mo
537.481 3759.07 525.291 3757.83 525.291 3756.31 cv
525.291 3754.79 537.481 3753.56 552.517 3753.56 cv
567.556 3753.56 579.745 3754.79 579.745 3756.31 cv
579.745 3757.83 567.556 3759.07 552.517 3759.07 cv
.365301 .511437 1 .180819 cmyk
f
629.831 3758.89 mo
622.314 3758.89 616.219 3757.65 616.219 3756.13 cv
616.219 3754.61 622.314 3753.38 629.831 3753.38 cv
637.351 3753.38 643.446 3754.61 643.446 3756.13 cv
643.446 3757.65 637.351 3758.89 629.831 3758.89 cv
.435187 .35465 .849058 .0968338 cmyk
f
875.856 3758.1 mo
860.819 3758.1 848.629 3756.87 848.629 3755.34 cv
848.629 3753.82 860.819 3752.59 875.856 3752.59 cv
890.893 3752.59 903.083 3753.82 903.083 3755.34 cv
903.083 3756.87 890.893 3758.1 875.856 3758.1 cv
753.823 3748.7 mo
746.306 3748.7 740.211 3747.46 740.211 3745.94 cv
740.211 3744.42 746.306 3743.19 753.823 3743.19 cv
761.343 3743.19 767.437 3744.42 767.437 3745.94 cv
767.437 3747.46 761.343 3748.7 753.823 3748.7 cv
827.074 3742.13 mo
819.556 3742.13 813.46 3740.89 813.46 3739.37 cv
813.46 3737.85 819.556 3736.62 827.074 3736.62 cv
834.593 3736.62 840.687 3737.85 840.687 3739.37 cv
840.687 3740.89 834.593 3742.13 827.074 3742.13 cv
713.589 3738.51 mo
706.071 3738.51 699.976 3737.28 699.976 3735.75 cv
699.976 3734.23 706.071 3733 713.589 3733 cv
721.108 3733 727.202 3734.23 727.202 3735.75 cv
727.202 3737.28 721.108 3738.51 713.589 3738.51 cv
1011.08 3728.6 mo
1003.56 3728.6 997.463 3727.37 997.463 3725.85 cv
997.463 3724.33 1003.56 3723.1 1011.08 3723.1 cv
1018.59 3723.1 1024.69 3724.33 1024.69 3725.85 cv
1024.69 3727.37 1018.59 3728.6 1011.08 3728.6 cv
628.833 3728.6 mo
627.366 3726.64 625.668 3724.84 623.836 3723.12 cv
625.191 3723.1 626.578 3723.09 627.991 3723.09 cv
643.029 3723.09 655.22 3724.32 655.22 3725.85 cv
655.22 3727.34 643.482 3728.55 628.833 3728.6 cv
.365301 .511437 1 .180819 cmyk
f
627.991 3728.6 mo
612.953 3728.6 600.764 3727.37 600.764 3725.85 cv
600.764 3724.47 610.771 3723.32 623.836 3723.12 cv
625.668 3724.84 627.366 3726.64 628.833 3728.6 cv
628.554 3728.6 628.273 3728.6 627.991 3728.6 cv
.435187 .35465 .849058 .0968338 cmyk
f
915.433 3725.79 mo
907.915 3725.79 901.819 3724.56 901.819 3723.04 cv
901.819 3721.52 907.915 3720.28 915.433 3720.28 cv
920.505 3720.28 924.93 3720.84 927.272 3721.68 cv
927.265 3721.82 927.252 3721.97 927.235 3722.13 cv
927.145 3722.92 927.015 3723.73 926.852 3724.54 cv
924.424 3725.29 920.216 3725.79 915.433 3725.79 cv
.365301 .511437 1 .180819 cmyk
f
926.852 3724.54 mo
927.015 3723.73 927.145 3722.92 927.235 3722.13 cv
927.252 3721.97 927.265 3721.82 927.272 3721.68 cv
928.401 3722.08 929.046 3722.54 929.046 3723.04 cv
929.046 3723.59 928.24 3724.11 926.852 3724.54 cv
.435187 .35465 .849058 .0968338 cmyk
f
588.677 3717.68 mo
581.159 3717.68 575.065 3716.45 575.065 3714.93 cv
575.065 3713.4 581.159 3712.17 588.677 3712.17 cv
596.196 3712.17 602.291 3713.4 602.291 3714.93 cv
602.291 3716.45 596.196 3717.68 588.677 3717.68 cv
f
789.337 3711.66 mo
781.819 3711.66 775.724 3710.43 775.724 3708.91 cv
775.724 3707.38 781.819 3706.15 789.337 3706.15 cv
796.857 3706.15 802.95 3707.38 802.95 3708.91 cv
802.95 3710.43 796.857 3711.66 789.337 3711.66 cv
675.852 3708.04 mo
668.334 3708.04 662.238 3706.81 662.238 3705.29 cv
662.238 3703.77 668.334 3702.53 675.852 3702.53 cv
683.371 3702.53 689.465 3703.77 689.465 3705.29 cv
689.465 3706.81 683.371 3708.04 675.852 3708.04 cv
.365301 .511437 1 .180819 cmyk
f
1536 4000 mo
1419.24 4000 1353.5 4000 1236.74 4000 cv
1236.67 3998.46 1236.58 3996.93 1236.48 3995.4 cv
1234.77 3995.66 1232.9 3995.8 1230.85 3995.82 cv
1219.13 3995.89 1201.6 3995.09 1201.51 3990.84 cv
1201.45 3988.11 1208.53 3984.64 1216.7 3982.47 cv
1210.64 3981.75 1206.03 3980.48 1205.98 3978.3 cv
1205.96 3977.41 1206.72 3976.43 1208.03 3975.45 cv
1200.09 3974.85 1193.31 3973.54 1193.25 3970.9 cv
1193.21 3969.27 1195.73 3967.37 1199.5 3965.65 cv
1193.38 3964.94 1188.69 3963.66 1188.65 3961.47 cv
1188.59 3958.77 1195.56 3955.32 1203.66 3953.15 cv
1201.69 3952.47 1200.49 3951.6 1200.46 3950.49 cv
1200.37 3946.57 1215.14 3941.07 1226.62 3940.18 cv
1236.39 3934.32 1234.5 3930.1 1222.58 3927.29 cv
1217.08 3928.03 1186.8 3928.16 1187.23 3923.87 cv
1187.45 3921.76 1194.88 3919.07 1203.27 3917.4 cv
1197.28 3916.84 1192.8 3915.86 1192.97 3914.18 cv
1193.04 3913.49 1193.89 3912.73 1195.31 3911.97 cv
1187.42 3911.51 1180.77 3910.5 1180.98 3908.45 cv
1181.1 3907.19 1183.81 3905.73 1187.76 3904.39 cv
1181.7 3903.84 1177.15 3902.86 1177.32 3901.16 cv
1177.53 3899.08 1184.85 3896.41 1193.17 3894.73 cv
1191.27 3894.2 1190.15 3893.53 1190.24 3892.68 cv
1190.45 3890.59 1197.77 3887.93 1206.08 3886.24 cv
1208.74 3885.29 1210.16 3884.34 1204.77 3883.4 cv
1198.76 3881.92 1193.1 3879.71 1191.99 3877.96 cv
1191.52 3877.22 1191.92 3876.63 1192.91 3876.17 cv
1186.64 3874.7 1180.54 3872.37 1179.39 3870.55 cv
1178.45 3869.07 1180.96 3868.21 1184.67 3867.73 cv
1181.43 3866.56 1178.94 3865.28 1178.24 3864.19 cv
1177.12 3862.4 1180.99 3861.52 1185.94 3861.11 cv
1184.64 3860.45 1183.72 3859.79 1183.34 3859.18 cv
1182.41 3857.72 1184.87 3856.86 1188.53 3856.38 cv
1182.21 3854.91 1176.02 3852.56 1174.86 3850.72 cv
1173.41 3848.43 1180.25 3847.62 1186.99 3847.42 cv
1193.21 3844.41 1192.36 3842.69 1184.35 3842.29 cv
1176.69 3842.32 1165.52 3841.45 1164.21 3837.3 cv
1163.35 3834.58 1166.96 3831.1 1171.67 3828.93 cv
1167.48 3828.22 1164.07 3826.95 1163.39 3824.77 cv
1163.11 3823.88 1163.31 3822.9 1163.87 3821.91 cv
1158.49 3821.32 1153.64 3820.01 1152.81 3817.36 cv
1152.29 3815.74 1153.38 3813.84 1155.34 3812.12 cv
1151.1 3811.41 1147.65 3810.13 1146.96 3807.94 cv
1146.11 3805.24 1149.65 3801.79 1154.31 3799.62 cv
1152.81 3798.93 1151.76 3798.06 1151.42 3796.96 cv
1150.64 3794.48 1153.55 3791.38 1157.64 3789.21 cv
1165.09 3785.09 1167.08 3782.55 1155.22 3784.01 cv
1154.85 3784.03 1154.48 3784.05 1154.09 3784.06 cv
1146.43 3784.13 1134.67 3783.33 1133.29 3779.07 cv
1132.4 3776.35 1135.97 3772.88 1140.66 3770.71 cv
1137.46 3770.16 1130.05 3768.56 1132.79 3763.68 cv
1127.47 3763.1 1116.36 3760.81 1124.15 3753.89 cv
1112.8 3751.98 1113.05 3746.05 1122.99 3741.39 cv
1113.24 3736.95 1128.22 3729.28 1133.58 3728.48 cv
1133.45 3728.06 li
1118.44 3727.81 1091.39 3723.28 1121.94 3714.74 cv
1119.31 3714.43 1105.92 3712.99 1111.94 3707.72 cv
1106.03 3707.28 1086.99 3705.21 1101.55 3697.92 cv
1082.53 3695.76 1089.49 3689.34 1103.34 3685.42 cv
1086.53 3679.94 1120.91 3671.06 1121.3 3670.97 cv
1348.79 3622.99 1398.17 3630.21 1434.82 3637.43 cv
1458.7 3642.13 1477.17 3646.83 1536 3636.26 cv
1536 4000 li
0 3686.37 mo
0 4000 li
117.019 4000 332.279 4000 449.298 4000 cv
449.413 3997.46 449.481 3994.94 449.503 3992.43 cv
477.118 3991.85 477.803 3985.19 451.812 3978.95 cv
456.755 3978.32 465.82 3976.64 457.386 3971.83 cv
469.793 3970.86 476.96 3967.82 461.588 3961.91 cv
484.054 3959.13 459.228 3951.03 451.881 3949.24 cv
460.46 3945.68 441.017 3939.73 439.414 3939.26 cv
431.391 3936.21 434.06 3934.19 441.594 3932.69 cv
468.807 3931.67 458.47 3926.05 439.817 3922.49 cv
439.773 3922.33 li
443.79 3921.91 453.381 3920.66 444.818 3916.88 cv
455.946 3916.21 465.201 3914.02 449.02 3909.21 cv
471.725 3907.04 446.027 3900.68 439.313 3899.42 cv
446.9 3896.98 432.067 3893.02 430.79 3892.67 cv
430.036 3890.4 429.27 3888.14 428.499 3885.88 cv
430.428 3885.02 435.817 3882.36 431.33 3880.61 cv
437.508 3878.98 450.179 3873.83 435.847 3872.06 cv
446.103 3867.62 438.047 3865.86 431.639 3865.36 cv
436.699 3861.95 429.541 3860.88 426.939 3860.55 cv
450.076 3854.51 432.663 3851.33 419.545 3851.42 cv
415.414 3851.45 416.569 3851.82 415.02 3847.34 cv
422.657 3844.66 415.499 3839.6 411.71 3837.52 cv
410.712 3834.48 li
414.331 3833.06 414.494 3830.91 411.889 3828.31 cv
420.373 3827.32 425.185 3824.21 416.096 3818.39 cv
430.159 3815.81 418.277 3808.34 411.579 3805.72 cv
418.874 3801.5 402.265 3794.5 399.631 3793.69 cv
399.631 3793.69 384.899 3788.23 397.256 3780.56 cv
406.45 3778.22 401.591 3773.1 395.897 3769.94 cv
395.813 3769.11 395.734 3768.28 395.66 3767.45 cv
399.132 3766.27 400.762 3764.27 398.054 3761.15 cv
405.36 3760.3 412.606 3757.53 403.622 3751.22 cv
417.067 3748.82 408.625 3741.77 400.839 3738.56 cv
406.503 3735.52 399.174 3730.58 396.287 3728.99 cv
396.287 3728.99 375.482 3725.21 396.978 3725.06 cv
410.942 3725.06 442.089 3720.68 407.985 3711.53 cv
411.064 3711.17 423.563 3709.67 416.631 3704.42 cv
424.093 3703.86 440.458 3701.56 425.116 3694.49 cv
445.779 3692.07 432.476 3684.98 420.873 3681.83 cv
429.845 3678.67 418.288 3665.39 414.422 3662.11 cv
278.465 3650.06 240.39 3663.93 210.051 3677.79 cv
175.24 3693.69 150.612 3709.6 0 3686.37 cv
.680568 .272984 1 .108797 cmyk
ef
1536 4000 mo
1421.4 4000 1356.87 4000 1242.27 4000 cv
1242.2 3998.38 1242.11 3996.77 1242.01 3995.17 cv
1240.33 3995.44 1238.5 3995.59 1236.48 3995.6 cv
1224.99 3995.68 1207.78 3994.84 1207.68 3990.37 cv
1207.62 3987.51 1214.57 3983.85 1222.6 3981.57 cv
1216.65 3980.82 1212.13 3979.48 1212.08 3977.2 cv
1212.06 3976.26 1212.8 3975.23 1214.09 3974.19 cv
1206.3 3973.57 1199.64 3972.19 1199.58 3969.41 cv
1199.54 3967.7 1202.01 3965.71 1205.72 3963.89 cv
1199.7 3963.15 1195.11 3961.81 1195.06 3959.5 cv
1195 3956.66 1201.84 3953.04 1209.79 3950.76 cv
1207.86 3950.04 1206.68 3949.13 1206.66 3947.96 cv
1206.57 3943.84 1221.06 3938.07 1232.33 3937.13 cv
1241.92 3930.97 1240.07 3926.53 1228.36 3923.58 cv
1222.97 3924.36 1193.25 3924.5 1193.67 3919.98 cv
1193.88 3917.77 1201.18 3914.94 1209.41 3913.18 cv
1203.54 3912.6 1199.14 3911.57 1199.3 3909.8 cv
1199.37 3909.07 1200.21 3908.28 1201.6 3907.48 cv
1193.86 3906.99 1187.33 3905.93 1187.53 3903.78 cv
1187.66 3902.46 1190.31 3900.92 1194.19 3899.51 cv
1188.25 3898.94 1183.78 3897.9 1183.94 3896.12 cv
1184.15 3893.92 1191.33 3891.13 1199.5 3889.36 cv
1197.63 3888.8 1196.54 3888.1 1196.63 3887.2 cv
1196.83 3885 1204.02 3882.21 1212.18 3880.44 cv
1214.78 3879.44 1216.18 3878.44 1210.88 3877.45 cv
1204.99 3875.9 1199.43 3873.57 1198.34 3871.73 cv
1197.88 3870.95 1198.28 3870.33 1199.25 3869.85 cv
1193.09 3868.3 1187.1 3865.86 1185.97 3863.94 cv
1185.05 3862.39 1187.52 3861.48 1191.16 3860.98 cv
1187.98 3859.75 1185.53 3858.41 1184.85 3857.25 cv
1183.74 3855.38 1187.55 3854.45 1192.4 3854.03 cv
1191.13 3853.33 1190.22 3852.63 1189.85 3852 cv
1188.94 3850.46 1191.35 3849.55 1194.95 3849.04 cv
1188.74 3847.5 1182.67 3845.04 1181.53 3843.11 cv
1180.11 3840.69 1186.82 3839.85 1193.44 3839.63 cv
1199.54 3836.47 1198.7 3834.67 1190.85 3834.24 cv
1183.33 3834.27 1172.36 3833.36 1171.08 3829 cv
1170.23 3826.14 1173.77 3822.49 1178.4 3820.2 cv
1174.29 3819.45 1170.94 3818.12 1170.27 3815.83 cv
1169.99 3814.89 1170.19 3813.86 1170.74 3812.82 cv
1165.46 3812.2 1160.7 3810.82 1159.88 3808.04 cv
1159.38 3806.33 1160.44 3804.34 1162.37 3802.53 cv
1158.21 3801.78 1154.82 3800.44 1154.14 3798.13 cv
1153.31 3795.3 1156.78 3791.68 1161.36 3789.39 cv
1159.89 3788.67 1158.86 3787.76 1158.52 3786.6 cv
1157.75 3784 1160.62 3780.73 1164.62 3778.45 cv
1171.94 3774.12 1173.89 3771.46 1162.25 3772.99 cv
1161.89 3773.01 1161.53 3773.03 1161.14 3773.04 cv
1153.62 3773.11 1142.08 3772.27 1140.72 3767.8 cv
1139.85 3764.94 1143.36 3761.29 1147.96 3759 cv
1144.82 3758.43 1137.55 3756.74 1140.24 3751.63 cv
1135.01 3751.01 1124.11 3748.6 1131.76 3741.33 cv
1120.61 3739.33 1120.86 3733.09 1130.62 3728.19 cv
1121.05 3723.53 1135.75 3715.46 1141.01 3714.63 cv
1140.88 3714.18 li
1126.15 3713.92 1099.6 3709.16 1129.59 3700.18 cv
1127.01 3699.86 1113.86 3698.34 1119.77 3692.8 cv
1113.97 3692.34 1095.28 3690.17 1109.58 3682.5 cv
1090.91 3680.24 1097.74 3673.49 1111.33 3669.37 cv
1094.83 3663.6 1128.59 3654.32 1128.96 3654.18 cv
1151.4 3645.66 1173.28 3637.14 1194.97 3630.64 cv
1193.7 3629.62 1192.43 3628.58 1191.16 3627.52 cv
1181.69 3619.7 1167.8 3607.58 1169.07 3605.62 cv
1170.23 3603.83 1183.58 3611.1 1193.1 3618.32 cv
1191.02 3615.15 1171.35 3585.31 1173.95 3583.04 cv
1175.87 3581.35 1189.41 3595.64 1198.04 3607.96 cv
1193 3591.45 1186.33 3567.48 1188.94 3566.31 cv
1191.44 3565.19 1201.55 3585.37 1206.98 3601.51 cv
1206.51 3583.22 1206.49 3558.14 1209.31 3557.83 cv
1212.24 3557.52 1217.14 3584.04 1217.76 3602.43 cv
1221 3589.65 1224.95 3576.03 1226.79 3576.44 cv
1229.08 3576.94 1227.25 3599 1223.86 3613.29 cv
1229.29 3603.56 1235.83 3592.69 1237.25 3593.54 cv
1238.91 3594.53 1232.93 3611.23 1227.29 3621.77 cv
1274.19 3610.1 1320.26 3603.87 1367.08 3602.61 cv
1365.46 3599.94 1364.5 3597.91 1364.8 3597.22 cv
1365.26 3596.11 1368.81 3598.63 1372.91 3602.48 cv
1374.28 3602.46 1375.64 3602.44 1377.01 3602.42 cv
1372.94 3592.35 1366.73 3576.32 1367.93 3574.71 cv
1369.17 3573.05 1377.87 3587.53 1383.42 3599.98 cv
1380.18 3583.39 1375.89 3559.33 1377.57 3558.19 cv
1379.17 3557.11 1385.68 3577.43 1389.17 3593.65 cv
1388.86 3575.35 1388.85 3550.27 1390.67 3550.01 cv
1392.55 3549.73 1395.7 3576.32 1396.1 3594.73 cv
1398.18 3581.99 1400.72 3568.43 1401.9 3568.86 cv
1403.27 3569.36 1402.35 3588.43 1400.46 3602.55 cv
1401.15 3602.57 li
1404.37 3593.85 1407.81 3585.33 1408.63 3586.1 cv
1409.35 3586.79 1407.84 3594.51 1405.68 3602.68 cv
1426.91 3603.32 1448.38 3604.94 1470.21 3607.49 cv
1459.81 3600.43 1449.08 3592.53 1450.34 3590.96 cv
1451.79 3589.16 1468.49 3596.29 1480.41 3603.42 cv
1477.8 3600.27 1453.19 3570.63 1456.44 3568.33 cv
1458.85 3566.63 1475.79 3580.78 1486.59 3593.02 cv
1480.28 3576.55 1471.94 3552.65 1475.2 3551.45 cv
1478.33 3550.31 1490.99 3570.39 1497.78 3586.47 cv
1497.19 3568.19 1497.16 3543.11 1500.7 3542.78 cv
1504.37 3542.43 1510.5 3568.9 1511.27 3587.29 cv
1515.33 3574.48 1520.26 3560.82 1522.57 3561.2 cv
1525.44 3561.68 1523.14 3583.76 1518.9 3598.08 cv
1525.7 3588.3 1533.22 3577.17 1535 3578 cv
1537.11 3578.99 1530.06 3596.37 1522.92 3606.93 cv
1521.18 3609.51 1519.26 3612.01 1517.31 3614.31 cv
1523.5 3615.37 1529.73 3616.5 1536 3617.7 cv
1536 4000 li
73.2924 3619.7 mo
84.6929 3611.77 97.9759 3601.88 96.567 3600.21 cv
95.098 3598.47 78.143 3606.26 66.0446 3613.87 cv
68.6892 3610.61 93.6771 3579.99 90.3796 3577.82 cv
87.9303 3576.21 70.7379 3591.04 59.7731 3603.7 cv
66.1738 3586.99 74.6442 3562.76 71.3287 3561.69 cv
68.1564 3560.67 55.309 3581.25 48.4107 3597.61 cv
49.0105 3579.3 49.0395 3554.22 45.4516 3554.02 cv
41.7296 3553.82 35.5052 3580.54 34.7171 3598.96 cv
30.6025 3586.31 25.5907 3572.84 23.2495 3573.32 cv
20.3386 3573.92 22.6697 3595.9 26.9736 3610.05 cv
20.0722 3600.54 11.772 3589.93 9.96952 3590.84 cv
7.84364 3591.9 15.5581 3608.59 22.7669 3618.88 cv
15.1726 3618.58 7.58128 3618.2 0 3617.7 cv
0 4000 li
114.6 4000 325.409 4000 440.009 4000 cv
440.12 3997.37 440.188 3994.75 440.21 3992.15 cv
467.254 3991.54 467.925 3984.64 442.471 3978.16 cv
447.313 3977.52 456.189 3975.77 447.932 3970.78 cv
460.08 3969.78 467.1 3966.62 452.045 3960.49 cv
474.046 3957.61 449.733 3949.2 442.538 3947.35 cv
450.941 3943.65 431.899 3937.48 430.329 3936.99 cv
422.472 3933.84 425.086 3931.74 432.465 3930.18 cv
459.115 3929.12 448.992 3923.29 430.723 3919.6 cv
430.682 3919.43 li
434.615 3919 444.007 3917.7 435.623 3913.78 cv
446.521 3913.09 455.583 3910.81 439.736 3905.82 cv
461.974 3903.58 436.804 3896.98 430.23 3895.67 cv
437.66 3893.14 423.135 3889.03 421.884 3888.67 cv
421.145 3886.31 420.395 3883.97 419.639 3881.62 cv
421.529 3880.73 426.807 3877.97 422.412 3876.15 cv
428.464 3874.46 440.872 3869.12 426.836 3867.29 cv
436.881 3862.68 428.991 3860.86 422.715 3860.33 cv
427.671 3856.8 420.661 3855.69 418.113 3855.35 cv
440.773 3849.09 423.717 3845.79 410.871 3845.88 cv
406.825 3845.91 407.956 3846.3 406.438 3841.64 cv
413.918 3838.87 406.909 3833.61 403.198 3831.46 cv
402.222 3828.3 li
405.764 3826.84 405.924 3824.6 403.372 3821.91 cv
411.681 3820.88 416.395 3817.65 407.494 3811.61 cv
421.265 3808.94 409.629 3801.19 403.069 3798.48 cv
410.214 3794.09 393.947 3786.83 391.369 3785.99 cv
391.369 3785.99 376.941 3780.33 389.043 3772.37 cv
398.047 3769.95 393.287 3764.64 387.713 3761.37 cv
387.629 3760.5 387.552 3759.64 387.479 3758.77 cv
390.88 3757.55 392.475 3755.48 389.824 3752.24 cv
396.978 3751.36 404.074 3748.48 395.277 3741.94 cv
408.443 3739.45 400.177 3732.14 392.551 3728.81 cv
398.098 3725.65 390.923 3720.53 388.094 3718.89 cv
388.094 3718.89 367.719 3714.97 388.77 3714.81 cv
402.446 3714.81 432.949 3710.26 399.549 3700.78 cv
402.565 3700.4 414.808 3698.84 408.017 3693.4 cv
415.324 3692.81 431.352 3690.44 416.326 3683.1 cv
436.563 3680.59 423.535 3673.23 412.172 3669.96 cv
420.958 3666.69 409.641 3652.91 405.854 3649.51 cv
387.817 3640.55 371.286 3638.13 351.849 3632.97 cv
354.353 3630.96 357.013 3628.73 359.649 3626.48 cv
369.259 3618.28 383.351 3605.61 382.062 3603.7 cv
380.889 3601.95 367.339 3609.75 357.672 3617.36 cv
359.785 3614.1 379.752 3583.48 377.116 3581.31 cv
375.161 3579.7 361.424 3594.53 352.66 3607.19 cv
357.775 3590.48 364.544 3566.25 361.895 3565.18 cv
359.359 3564.16 349.094 3584.74 343.582 3601.1 cv
344.061 3582.78 344.084 3557.71 341.217 3557.51 cv
338.243 3557.31 333.27 3584.03 332.639 3602.45 cv
329.352 3589.79 325.346 3576.33 323.477 3576.81 cv
321.151 3577.4 323.013 3599.38 326.451 3613.54 cv
320.936 3604.03 314.304 3593.42 312.864 3594.32 cv
311.156 3595.39 317.403 3612.27 323.192 3622.55 cv
324.073 3624.12 325.009 3625.65 325.973 3627.12 cv
278.267 3618.03 227.274 3617.18 174.783 3617.96 cv
179.593 3611.2 183.987 3604.43 183.398 3603.07 cv
182.644 3601.33 173.933 3609.13 167.716 3616.73 cv
169.074 3613.47 181.912 3582.85 180.218 3580.69 cv
178.961 3579.08 170.129 3593.9 164.495 3606.57 cv
167.783 3589.85 172.135 3565.62 170.431 3564.55 cv
168.802 3563.53 162.201 3584.11 158.658 3600.47 cv
158.966 3582.16 158.98 3557.08 157.136 3556.89 cv
155.225 3556.69 152.027 3583.4 151.622 3601.82 cv
149.508 3589.17 146.932 3575.71 145.731 3576.18 cv
144.235 3576.78 145.432 3598.76 147.642 3612.92 cv
144.096 3603.4 139.833 3592.79 138.907 3593.7 cv
137.923 3594.66 141.047 3608.31 144.385 3618.54 cv
120.862 3619.05 97.1127 3619.63 73.2924 3619.7 cv
.452003 .0382696 .956542 0 cmyk
ef
1433.55 4000 mo
1401.44 4000 1371.31 4000 1338.95 4000 cv
1338.51 3998.33 1338.06 3996.67 1337.61 3995.02 cv
1336.55 3995.3 1335.36 3995.46 1334.01 3995.47 cv
1333.69 3995.47 1333.37 3995.47 1333.05 3995.47 cv
1325.37 3995.47 1314.52 3994.5 1313.43 3990.07 cv
1312.7 3987.13 1316.48 3983.36 1321.32 3981.01 cv
1317.15 3980.23 1313.79 3978.86 1313.21 3976.5 cv
1312.97 3975.53 1313.22 3974.47 1313.83 3973.4 cv
1308.45 3972.76 1303.66 3971.34 1302.95 3968.48 cv
1302.51 3966.71 1303.69 3964.66 1305.74 3962.79 cv
1301.52 3962.02 1298.12 3960.64 1297.53 3958.26 cv
1296.81 3955.34 1300.53 3951.61 1305.31 3949.25 cv
1303.84 3948.51 1302.83 3947.57 1302.54 3946.37 cv
1301.49 3942.12 1309.82 3936.17 1317.16 3935.21 cv
1322.11 3928.85 1319.8 3924.28 1311.23 3921.24 cv
1310.17 3921.49 1307.54 3921.67 1304.38 3921.67 cv
1297.32 3921.67 1287.65 3920.75 1287.1 3917.53 cv
1286.7 3915.25 1290.92 3912.34 1296.02 3910.52 cv
1291.94 3909.93 1288.74 3908.86 1288.42 3907.04 cv
1288.3 3906.29 1288.67 3905.47 1289.4 3904.64 cv
1284.1 3904.15 1279.46 3903.05 1279.08 3900.83 cv
1278.85 3899.47 1280.26 3897.88 1282.52 3896.44 cv
1278.39 3895.84 1275.15 3894.78 1274.83 3892.94 cv
1274.44 3890.68 1278.59 3887.79 1283.64 3885.97 cv
1282.25 3885.4 1281.35 3884.67 1281.19 3883.75 cv
1280.8 3881.48 1284.95 3878.6 1290 3876.78 cv
1291.5 3875.75 1292.2 3874.72 1288.41 3873.69 cv
1284.08 3872.1 1279.79 3869.7 1278.62 3867.81 cv
1278.12 3867 1278.24 3866.36 1278.78 3865.86 cv
1274.27 3864.27 1269.67 3861.75 1268.45 3859.78 cv
1267.46 3858.17 1268.89 3857.24 1271.22 3856.72 cv
1268.79 3855.46 1266.82 3854.07 1266.09 3852.88 cv
1264.89 3850.95 1267.22 3849.99 1270.38 3849.56 cv
1269.36 3848.84 1268.58 3848.12 1268.18 3847.47 cv
1267.19 3845.88 1268.6 3844.95 1270.89 3844.43 cv
1266.35 3842.84 1261.69 3840.29 1260.46 3838.3 cv
1258.92 3835.82 1263.22 3834.94 1267.61 3834.72 cv
1270.94 3831.46 1269.95 3829.6 1264.57 3829.17 cv
1264.5 3829.17 1264.42 3829.17 1264.34 3829.17 cv
1259.31 3829.17 1251.93 3828.19 1250.05 3823.76 cv
1248.8 3820.82 1250.29 3817.05 1252.85 3814.7 cv
1249.91 3813.93 1247.34 3812.55 1246.34 3810.19 cv
1245.93 3809.22 1245.82 3808.16 1245.94 3807.09 cv
1242.24 3806.45 1238.72 3805.03 1237.5 3802.17 cv
1236.75 3800.41 1236.99 3798.35 1237.84 3796.48 cv
1234.87 3795.71 1232.27 3794.33 1231.26 3791.95 cv
1230.02 3789.03 1231.49 3785.3 1234.01 3782.94 cv
1232.85 3782.2 1231.93 3781.26 1231.43 3780.06 cv
1230.28 3777.38 1231.42 3774.02 1233.56 3771.67 cv
1236.68 3768.07 1237.72 3765.59 1234.1 3765.59 cv
1233.23 3765.59 1232.09 3765.73 1230.65 3766.04 cv
1230.42 3766.06 1230.18 3766.08 1229.93 3766.09 cv
1229.72 3766.09 1229.52 3766.09 1229.31 3766.09 cv
1224.27 3766.09 1216.88 3765.12 1214.97 3760.69 cv
1213.7 3757.74 1215.17 3753.98 1217.71 3751.63 cv
1215.46 3751.04 1210.17 3749.3 1210.75 3744.02 cv
1207.1 3743.38 1199.2 3740.9 1202.58 3733.41 cv
1194.63 3731.35 1193.29 3724.92 1198.66 3719.87 cv
1196.64 3718.58 1195.73 3717.04 1195.54 3715.45 cv
1203.4 3714.7 1213.73 3713.66 1224.49 3712.67 cv
1210.29 3714.81 1201.71 3717.26 1201.59 3717.65 cv
1201.58 3717.69 1201.74 3717.71 1202.04 3717.71 cv
1205.57 3717.71 1229.44 3715.01 1251.98 3713.01 cv
1234 3715.29 1222.81 3718.4 1222.67 3718.85 cv
1222.67 3718.87 1222.74 3718.88 1222.89 3718.88 cv
1226.42 3718.88 1270.72 3714.44 1276.33 3713.96 cv
1265.16 3716.86 1259.89 3719.77 1260.29 3720.16 cv
1260.33 3720.2 1260.43 3720.22 1260.6 3720.22 cv
1262.27 3720.22 1270.1 3718.41 1280.62 3716.61 cv
1291.13 3714.8 1304.34 3712.99 1316.78 3712.99 cv
1317.03 3712.99 1317.29 3712.99 1317.54 3712.99 cv
1295.3 3715.27 1281.06 3719.2 1280.92 3719.71 cv
1280.9 3719.76 1281.06 3719.78 1281.36 3719.78 cv
1284.87 3719.78 1308.5 3717.1 1330.94 3715.1 cv
1318.3 3717.72 1312.14 3720.45 1312.56 3720.92 cv
1312.58 3720.95 1312.7 3720.96 1312.9 3720.96 cv
1315.87 3720.96 1337.25 3718.25 1359.05 3716.06 cv
1359.23 3717.43 1359.7 3718.75 1360.62 3719.87 cv
1357.83 3724.92 1358.52 3731.35 1362.66 3733.41 cv
1360.9 3740.9 1365 3743.38 1366.9 3744.02 cv
1366.61 3749.3 1369.35 3751.04 1370.52 3751.63 cv
1369.2 3753.98 1368.44 3757.74 1369.1 3760.69 cv
1370.09 3765.12 1373.94 3766.09 1376.56 3766.09 cv
1376.73 3766.09 1376.9 3766.09 1377.07 3766.08 cv
1377.26 3766.04 li
1378 3765.73 1378.59 3765.59 1379.05 3765.59 cv
1380.93 3765.59 1380.39 3768.07 1378.77 3771.67 cv
1377.65 3774.02 1377.06 3777.38 1377.65 3780.06 cv
1377.92 3781.26 1378.39 3782.2 1379 3782.94 cv
1377.69 3785.3 1376.93 3789.03 1377.57 3791.95 cv
1378.1 3794.33 1379.45 3795.71 1380.99 3796.48 cv
1380.55 3798.35 1380.42 3800.41 1380.81 3802.17 cv
1381.45 3805.03 1383.28 3806.45 1385.2 3807.09 cv
1385.14 3808.16 1385.19 3809.22 1385.41 3810.19 cv
1385.93 3812.55 1387.26 3813.93 1388.79 3814.7 cv
1387.46 3817.05 1386.69 3820.82 1387.34 3823.76 cv
1388.31 3828.19 1392.15 3829.17 1394.77 3829.17 cv
1394.81 3829.17 1394.85 3829.17 1394.89 3829.17 cv
1397.68 3829.6 1398.2 3831.46 1396.47 3834.72 cv
1394.18 3834.94 1391.95 3835.82 1392.75 3838.3 cv
1393.39 3840.29 1395.81 3842.84 1398.17 3844.43 cv
1396.98 3844.95 1396.25 3845.88 1396.76 3847.47 cv
1396.97 3848.12 1397.37 3848.84 1397.91 3849.56 cv
1396.26 3849.99 1395.05 3850.95 1395.68 3852.88 cv
1396.06 3854.07 1397.08 3855.46 1398.34 3856.72 cv
1397.13 3857.24 1396.39 3858.17 1396.9 3859.78 cv
1397.54 3861.75 1399.93 3864.27 1402.27 3865.86 cv
1401.99 3866.36 1401.93 3867 1402.19 3867.81 cv
1402.8 3869.7 1405.03 3872.1 1407.28 3873.69 cv
1409.25 3874.72 1408.89 3875.75 1408.11 3876.78 cv
1405.48 3878.6 1403.32 3881.48 1403.53 3883.75 cv
1403.61 3884.67 1404.08 3885.4 1404.8 3885.97 cv
1402.17 3887.79 1400.02 3890.68 1400.22 3892.94 cv
1400.38 3894.78 1402.07 3895.84 1404.22 3896.44 cv
1403.04 3897.88 1402.31 3899.47 1402.43 3900.83 cv
1402.63 3903.05 1405.04 3904.15 1407.8 3904.64 cv
1407.41 3905.47 1407.22 3906.29 1407.29 3907.04 cv
1407.45 3908.86 1409.11 3909.93 1411.24 3910.52 cv
1408.58 3912.34 1406.39 3915.25 1406.6 3917.53 cv
1406.88 3920.75 1411.91 3921.67 1415.58 3921.67 cv
1417.23 3921.67 1418.6 3921.49 1419.15 3921.24 cv
1423.6 3924.28 1424.8 3928.85 1422.22 3935.21 cv
1418.41 3936.17 1414.08 3942.12 1414.62 3946.37 cv
1414.78 3947.57 1415.3 3948.51 1416.07 3949.25 cv
1413.58 3951.61 1411.65 3955.34 1412.02 3958.26 cv
1412.33 3960.64 1414.1 3962.02 1416.29 3962.79 cv
1415.22 3964.66 1414.61 3966.71 1414.84 3968.48 cv
1415.21 3971.34 1417.7 3972.76 1420.5 3973.4 cv
1420.18 3974.47 1420.05 3975.53 1420.17 3976.5 cv
1420.47 3978.86 1422.22 3980.23 1424.39 3981.01 cv
1421.87 3983.36 1419.91 3987.13 1420.29 3990.07 cv
1420.85 3994.5 1426.5 3995.47 1430.49 3995.47 cv
1430.66 3995.47 1430.82 3995.47 1430.98 3995.47 cv
1431.69 3995.46 1432.31 3995.3 1432.86 3995.02 cv
1433.09 3996.67 1433.33 3998.33 1433.55 4000 cv
1195.75 3713.11 mo
1195.76 3713.08 1195.77 3713.04 1195.78 3713.01 cv
1196.52 3712.91 1197.26 3712.81 1198 3712.71 cv
1197.23 3712.85 1196.48 3712.98 1195.75 3713.11 cv
1184.24 3696.49 mo
1184.49 3696.03 1184.83 3695.55 1185.3 3695.06 cv
1187.64 3695.03 1190.18 3694.99 1192.89 3694.94 cv
1191.49 3695.33 1188.19 3695.87 1184.24 3696.49 cv
1188.09 3692.81 mo
1188.98 3692.23 1190.02 3691.62 1191.23 3691 cv
1189.42 3690.67 1180.24 3689.11 1182.87 3683.4 cv
1178.87 3682.92 1165.8 3680.68 1173.55 3672.78 cv
1160.48 3670.45 1163.44 3663.49 1171.57 3659.25 cv
1159.12 3653.31 1179.49 3643.67 1179.74 3643.59 cv
1202.69 3636.98 1226.44 3631.86 1250.33 3627.97 cv
1260.22 3665.25 li
1277.22 3671.51 li
1290.9 3665.25 li
1285.26 3644 li
1315.94 3644 li
1321.58 3665.25 li
1338.58 3671.51 li
1343.39 3669.3 li
1344.04 3670.78 1345.36 3672.03 1347.57 3672.78 cv
1346.63 3674.62 1346.28 3676.16 1346.32 3677.43 cv
1336.75 3678.18 1327.49 3679.35 1323.62 3680.54 cv
1319.48 3678.94 1298.64 3677.94 1288.45 3677.94 cv
1287.33 3677.94 1286.34 3677.95 1285.51 3677.98 cv
1282.67 3678.06 1301.6 3680.92 1304.47 3681.55 cv
1295.42 3680.26 1270.4 3678.61 1255.77 3678.61 cv
1252.31 3678.61 1249.43 3678.7 1247.48 3678.91 cv
1245.59 3679.12 1260.48 3680.32 1276.81 3681.84 cv
1269.03 3681.6 1261.13 3681.51 1253.97 3681.51 cv
1239.72 3681.51 1228.39 3681.86 1226.81 3682.03 cv
1224.77 3682.25 1242.19 3682.88 1261.86 3683.74 cv
1234.49 3683.99 1208.86 3686.44 1206.73 3686.98 cv
1204.55 3687.52 1232.92 3687.32 1231.68 3687.49 cv
1209.74 3687.65 1189.89 3689.5 1188.01 3689.98 cv
1186.68 3690.32 1196.75 3690.55 1210.73 3690.89 cv
1208.24 3691.36 1197.86 3692.02 1188.09 3692.81 cv
.532158 .0739757 1 0 cmyk
f
343.098 4000 mo
291.534 4000 234.055 4000 178.527 4000 cv
178.315 3998.39 178.113 3996.8 177.913 3995.21 cv
178.536 3995.48 179.2 3995.63 179.905 3995.64 cv
180.065 3995.64 180.229 3995.64 180.395 3995.64 cv
184.383 3995.64 189.78 3994.7 189.185 3990.44 cv
188.788 3987.61 185.831 3983.98 182.698 3981.72 cv
184.663 3980.97 185.954 3978.98 185.73 3977.38 cv
185.506 3975.78 185.19 3975.43 184.589 3974.4 cv
187.217 3973.78 189.264 3971.88 188.954 3969.65 cv
188.645 3967.43 187.564 3965.98 186.007 3964.18 cv
187.996 3963.44 189.441 3962.38 189.084 3959.82 cv
188.728 3957.27 185.774 3953.42 182.67 3951.15 cv
183.239 3950.44 183.721 3951 183.355 3948.38 cv
182.988 3945.76 176.888 3938.56 172.82 3937.63 cv
168.576 3931.52 168.576 3927.12 172.226 3924.19 cv
172.841 3924.43 174.26 3924.61 175.902 3924.61 cv
179.571 3924.61 184.357 3923.72 183.8 3920.62 cv
183.406 3918.43 180.449 3915.62 177.317 3913.88 cv
179.283 3913.3 180.572 3911.76 180.35 3910.52 cv
180.128 3909.28 179.813 3909.01 179.212 3908.22 cv
181.841 3907.74 183.962 3906.68 183.579 3904.55 cv
183.341 3903.24 182.19 3901.71 180.633 3900.32 cv
182.622 3899.75 184.067 3898.92 183.711 3896.95 cv
183.356 3894.98 180.406 3892 177.301 3890.24 cv
177.87 3889.69 178.263 3889.63 177.986 3888.1 cv
177.71 3886.57 174.682 3883.15 171.577 3881.39 cv
170.524 3880.4 169.888 3879.41 171.593 3878.42 cv
173.421 3876.89 175.055 3874.06 175.133 3872.76 cv
175.211 3871.46 174.95 3871.37 174.54 3870.89 cv
176.464 3869.35 178.205 3866.75 178.309 3865.03 cv
178.413 3863.31 177.412 3862.59 176.069 3862.09 cv
176.999 3860.87 177.633 3859.9 177.724 3858.39 cv
177.815 3856.89 176.375 3855.61 174.619 3855.19 cv
174.961 3854.5 175.178 3853.81 175.216 3853.18 cv
175.309 3851.65 174.333 3850.75 173.006 3850.25 cv
174.946 3848.72 176.689 3846.51 176.819 3844.36 cv
176.948 3842.21 174.499 3841.12 172.158 3840.91 cv
169.569 3837.78 169.597 3835.99 172.276 3835.56 cv
172.298 3835.56 172.32 3835.56 172.342 3835.56 cv
174.962 3835.56 178.562 3833.92 178.407 3830.37 cv
178.251 3826.79 176.515 3823.9 174.57 3821.64 cv
175.895 3820.9 176.865 3819.57 176.765 3817.3 cv
176.726 3816.37 176.505 3815.35 176.162 3814.32 cv
177.914 3813.7 179.348 3811.8 179.251 3809.58 cv
179.155 3807.35 178.516 3805.9 177.581 3804.1 cv
178.923 3803.36 179.92 3802.3 179.809 3799.75 cv
179.698 3797.2 177.944 3793.34 176.015 3791.07 cv
176.422 3790.36 176.681 3790.17 176.599 3788.3 cv
176.517 3786.43 175.013 3782.49 173.281 3780.22 cv
170.713 3776.76 169.522 3774.37 171.404 3774.37 cv
171.856 3774.37 172.484 3774.51 173.314 3774.8 cv
173.441 3774.83 173.572 3774.84 173.705 3774.85 cv
173.764 3774.85 173.824 3774.85 173.884 3774.85 cv
176.512 3774.85 180.206 3773.21 180.063 3769.65 cv
179.916 3766.02 178.195 3763.19 176.255 3760.93 cv
177.267 3760.36 179.558 3758.69 177.873 3753.61 cv
179.605 3753 183.055 3750.61 179.327 3743.39 cv
182.921 3741.41 181.927 3735.22 177.808 3730.36 cv
180.464 3725.74 174.162 3717.74 172.204 3716.91 cv
172.186 3716.47 li
177.283 3716.2 185.849 3711.48 174.079 3702.57 cv
174.934 3702.26 179.296 3700.75 176.426 3695.25 cv
178.383 3694.8 184.585 3692.64 178.48 3685.04 cv
184.66 3682.79 181.294 3676.09 175.953 3672.01 cv
180.864 3666.29 167.74 3657.01 167.588 3656.94 cv
163.923 3655.24 160.311 3653.61 156.743 3652.07 cv
158.877 3644 li
189.465 3644 li
183.842 3665.25 li
197.481 3671.51 li
214.429 3665.25 li
220.052 3644 li
250.638 3644 li
245.016 3665.25 li
258.656 3671.51 li
275.604 3665.25 li
280.291 3647.53 li
293.824 3650.35 307.752 3653.48 322.057 3656.94 cv
322.349 3657.01 347.593 3666.29 338.147 3672.01 cv
348.419 3676.09 354.896 3682.79 343.009 3685.04 cv
354.75 3692.64 342.822 3694.8 339.058 3695.25 cv
344.577 3700.75 336.187 3702.26 334.544 3702.57 cv
357.182 3711.48 340.707 3716.2 330.9 3716.47 cv
330.936 3716.91 li
334.702 3717.74 346.825 3725.74 341.714 3730.36 cv
349.636 3735.22 351.55 3741.41 344.637 3743.39 cv
351.809 3750.61 345.172 3753 341.84 3753.61 cv
345.081 3758.69 340.674 3760.36 338.729 3760.93 cv
342.458 3763.19 345.831 3766.82 346.051 3769.65 cv
346.381 3773.91 339.477 3774.85 334.441 3774.85 cv
334.231 3774.85 334.025 3774.85 333.823 3774.85 cv
333.565 3774.84 333.315 3774.83 333.071 3774.8 cv
331.475 3774.51 330.265 3774.37 329.396 3774.37 cv
325.776 3774.37 328.068 3776.76 333.009 3780.22 cv
336.339 3782.49 339.174 3785.72 339.39 3788.3 cv
339.486 3789.45 339.05 3790.36 338.267 3791.07 cv
341.979 3793.34 345.327 3796.93 345.564 3799.75 cv
345.756 3802.03 343.859 3803.36 341.28 3804.1 cv
343.077 3805.9 344.351 3807.88 344.492 3809.58 cv
344.726 3812.33 341.92 3813.7 338.548 3814.32 cv
339.21 3815.35 339.634 3816.37 339.71 3817.3 cv
339.901 3819.57 338.034 3820.9 335.485 3821.64 cv
339.229 3823.9 342.629 3827.53 342.866 3830.37 cv
343.224 3834.62 336.334 3835.56 331.299 3835.56 cv
331.223 3835.56 331.148 3835.56 331.074 3835.56 cv
325.921 3835.99 325.868 3837.78 330.849 3840.91 cv
335.351 3841.12 340.089 3841.97 339.812 3844.36 cv
339.589 3846.28 336.21 3848.72 332.479 3850.25 cv
335.03 3850.75 336.907 3851.65 336.728 3853.18 cv
336.656 3853.81 336.241 3854.5 335.582 3855.19 cv
338.96 3855.61 341.772 3856.53 341.553 3858.39 cv
341.422 3859.54 340.158 3860.87 338.37 3862.09 cv
340.952 3862.59 342.859 3863.49 342.679 3865.03 cv
342.458 3866.93 339.129 3869.35 335.43 3870.89 cv
336.22 3871.37 336.66 3871.98 336.569 3872.76 cv
336.356 3874.58 333.278 3876.89 329.759 3878.42 cv
326.483 3879.41 327.704 3880.4 329.729 3881.39 cv
335.701 3883.15 341.306 3885.92 342.059 3888.1 cv
342.368 3888.99 341.835 3889.69 340.74 3890.24 cv
346.71 3892 352.314 3894.77 353.07 3896.95 cv
353.683 3898.72 350.976 3899.75 347.15 3900.32 cv
350.143 3901.71 352.357 3903.24 352.816 3904.55 cv
353.553 3906.68 349.471 3907.74 344.416 3908.22 cv
345.57 3909.01 346.357 3909.8 346.605 3910.52 cv
347.214 3912.27 344.552 3913.3 340.771 3913.88 cv
346.795 3915.62 352.481 3918.43 353.241 3920.62 cv
354.313 3923.72 345.108 3924.61 338.05 3924.61 cv
334.893 3924.61 332.164 3924.43 330.979 3924.19 cv
323.956 3927.12 323.956 3931.52 332.12 3937.63 cv
339.945 3938.56 351.286 3944.29 352.385 3948.38 cv
352.695 3949.53 352.161 3950.44 351.065 3951.15 cv
357.039 3953.42 362.646 3957.01 363.404 3959.82 cv
364.019 3962.11 361.311 3963.44 357.487 3964.18 cv
360.481 3965.98 362.699 3967.96 363.154 3969.65 cv
363.894 3972.41 359.812 3973.78 354.761 3974.4 cv
355.915 3975.43 356.7 3976.45 356.952 3977.38 cv
357.563 3979.65 354.9 3980.97 351.121 3981.72 cv
357.146 3983.98 362.834 3987.61 363.598 3990.44 cv
364.742 3994.7 354.364 3995.64 346.689 3995.64 cv
346.371 3995.64 346.055 3995.64 345.747 3995.64 cv
344.391 3995.63 343.116 3995.48 341.917 3995.21 cv
342.301 3996.8 342.69 3998.39 343.098 4000 cv
1347.48 3647.27 mo
1346.62 3644 li
1350.34 3644 li
1349.74 3644.59 1348.6 3645.76 1347.48 3647.27 cv
1366.08 3636 mo
1344.43 3636 li
1340.51 3621 li
1309.84 3621 li
1313.75 3636 li
1283.08 3636 li
1279.88 3623.77 li
1318.87 3619 1357.61 3617.2 1393.35 3617.2 cv
1409.14 3617.2 1424.34 3617.55 1438.73 3618.15 cv
1426.94 3619.14 1414.79 3620.94 1402.61 3623.82 cv
1401.87 3621 li
1371.19 3621 li
1374.22 3632.62 li
1371.5 3633.68 1368.78 3634.8 1366.08 3636 cv
191.643 3636 mo
161.056 3636 li
162.8 3629.31 li
172.391 3630.25 182.302 3631.37 192.508 3632.68 cv
191.643 3636 li
130.47 3636 mo
112.579 3636 li
108.543 3634.83 104.585 3633.76 100.716 3632.8 cv
102.63 3625.45 li
112.261 3625.71 122.341 3626.18 132.85 3626.86 cv
130.47 3636 li
71.5946 3627.17 mo
66.426 3626.47 61.4528 3625.97 56.6798 3625.64 cv
61.6506 3625.45 66.7884 3625.31 72.1002 3625.23 cv
71.5946 3627.17 li
f
1536 4000 mo
1536 4000 li
1536 3665 li
1536 3665 li
1536 4000 li
.618372 .267582 1 .0846265 cmyk
f
1.00036 4000 mo
.662967 4000 .335743 4000 0 4000 cv
.906141 3665.52 li
1.90435 3665.98 li
1.00036 4000 li
f
1536 3665 mo
1536 3665 li
1536 3626.96 li
1536 3626.96 li
1536 3665 li
.912958 3663.01 mo
1.00036 3630.74 li
3.80455 3629.89 6.82977 3629.1 10.0698 3628.4 cv
9.75309 3629.6 li
7.0753 3629.96 4.49405 3630.35 1.99971 3630.74 cv
1.92273 3659.19 li
.912958 3663.01 li
1536 3626.96 mo
1532.82 3626.48 1529.39 3625.99 1525.74 3625.5 cv
1525.41 3624.21 li
1529.35 3625.12 1532.89 3626.05 1536 3626.96 cv
41.1924 3626.46 mo
41.5307 3625.16 li
41.9532 3625.16 42.3797 3625.15 42.8061 3625.15 cv
47.224 3625.15 51.8519 3625.31 56.6798 3625.64 cv
51.3149 3625.85 46.1565 3626.13 41.1924 3626.46 cv
1494.14 3621.9 mo
1477.73 3620.35 1459.05 3619 1438.73 3618.15 cv
1446.62 3617.49 1454.35 3617.2 1461.84 3617.2 cv
1479.33 3617.2 1495.43 3618.79 1509 3621 cv
1493.9 3621 li
1494.14 3621.9 li
f
1536 4000 mo
1497.46 4000 1464.58 4000 1433.55 4000 cv
1433.33 3998.33 1433.09 3996.67 1432.86 3995.02 cv
1432.31 3995.3 1431.69 3995.46 1430.98 3995.47 cv
1430.82 3995.47 1430.66 3995.47 1430.49 3995.47 cv
1426.5 3995.47 1420.85 3994.5 1420.29 3990.07 cv
1419.91 3987.13 1421.87 3983.36 1424.39 3981.01 cv
1422.22 3980.23 1420.47 3978.86 1420.17 3976.5 cv
1420.05 3975.53 1420.18 3974.47 1420.5 3973.4 cv
1417.7 3972.76 1415.21 3971.34 1414.84 3968.48 cv
1414.61 3966.71 1415.22 3964.66 1416.29 3962.79 cv
1414.1 3962.02 1412.33 3960.64 1412.02 3958.26 cv
1411.65 3955.34 1413.58 3951.61 1416.07 3949.25 cv
1415.3 3948.51 1414.78 3947.57 1414.62 3946.37 cv
1414.08 3942.12 1418.41 3936.17 1422.22 3935.21 cv
1424.8 3928.85 1423.6 3924.28 1419.15 3921.24 cv
1418.6 3921.49 1417.23 3921.67 1415.58 3921.67 cv
1411.91 3921.67 1406.88 3920.75 1406.6 3917.53 cv
1406.39 3915.25 1408.58 3912.34 1411.24 3910.52 cv
1409.11 3909.93 1407.45 3908.86 1407.29 3907.04 cv
1407.22 3906.29 1407.41 3905.47 1407.8 3904.64 cv
1405.04 3904.15 1402.63 3903.05 1402.43 3900.83 cv
1402.31 3899.47 1403.04 3897.88 1404.22 3896.44 cv
1402.07 3895.84 1400.38 3894.78 1400.22 3892.94 cv
1400.02 3890.68 1402.17 3887.79 1404.8 3885.97 cv
1404.08 3885.4 1403.61 3884.67 1403.53 3883.75 cv
1403.32 3881.48 1405.48 3878.6 1408.11 3876.78 cv
1408.89 3875.75 1409.25 3874.72 1407.28 3873.69 cv
1405.03 3872.1 1402.8 3869.7 1402.19 3867.81 cv
1401.93 3867 1401.99 3866.36 1402.27 3865.86 cv
1399.93 3864.27 1397.54 3861.75 1396.9 3859.78 cv
1396.39 3858.17 1397.13 3857.24 1398.34 3856.72 cv
1397.08 3855.46 1396.06 3854.07 1395.68 3852.88 cv
1395.05 3850.95 1396.26 3849.99 1397.91 3849.56 cv
1397.37 3848.84 1396.97 3848.12 1396.76 3847.47 cv
1396.25 3845.88 1396.98 3844.95 1398.17 3844.43 cv
1395.81 3842.84 1393.39 3840.29 1392.75 3838.3 cv
1391.95 3835.82 1394.18 3834.94 1396.47 3834.72 cv
1398.2 3831.46 1397.68 3829.6 1394.89 3829.17 cv
1394.85 3829.17 1394.81 3829.17 1394.77 3829.17 cv
1392.15 3829.17 1388.31 3828.19 1387.34 3823.76 cv
1386.69 3820.82 1387.46 3817.05 1388.79 3814.7 cv
1387.26 3813.93 1385.93 3812.55 1385.41 3810.19 cv
1385.19 3809.22 1385.14 3808.16 1385.2 3807.09 cv
1383.28 3806.45 1381.45 3805.03 1380.81 3802.17 cv
1380.42 3800.41 1380.55 3798.35 1380.99 3796.48 cv
1379.45 3795.71 1378.1 3794.33 1377.57 3791.95 cv
1376.93 3789.03 1377.69 3785.3 1379 3782.94 cv
1378.39 3782.2 1377.92 3781.26 1377.65 3780.06 cv
1377.06 3777.38 1377.65 3774.02 1378.77 3771.67 cv
1380.39 3768.07 1380.93 3765.59 1379.05 3765.59 cv
1378.59 3765.59 1378 3765.73 1377.26 3766.04 cv
1377.07 3766.08 li
1376.9 3766.09 1376.73 3766.09 1376.56 3766.09 cv
1373.94 3766.09 1370.09 3765.12 1369.1 3760.69 cv
1368.44 3757.74 1369.2 3753.98 1370.52 3751.63 cv
1369.35 3751.04 1366.61 3749.3 1366.9 3744.02 cv
1365 3743.38 1360.9 3740.9 1362.66 3733.41 cv
1358.52 3731.35 1357.83 3724.92 1360.62 3719.87 cv
1359.7 3718.75 1359.23 3717.43 1359.05 3716.06 cv
1373.79 3714.58 1388.73 3713.33 1398.31 3713.31 cv
1388.92 3715.91 1375.16 3718.69 1378.07 3718.69 cv
1378.11 3718.69 1378.17 3718.69 1378.22 3718.69 cv
1397.3 3718.17 1417.51 3713.2 1421.29 3713.15 cv
1419.78 3715.97 1414.85 3719.22 1417.04 3719.22 cv
1417.14 3719.22 1417.24 3719.21 1417.36 3719.2 cv
1429.52 3717.99 1438.28 3712.85 1441.46 3712.76 cv
1444.53 3713.84 1455.42 3719.9 1457.31 3719.9 cv
1457.36 3719.9 1457.4 3719.9 1457.44 3719.89 cv
1458.6 3719.6 1461.45 3717.83 1461.9 3715.82 cv
1472.21 3718.39 1481.28 3721.03 1483.16 3721.03 cv
1483.36 3721.03 1483.47 3721 1483.51 3720.94 cv
1483.87 3720.32 1479.89 3716.08 1470.91 3712.78 cv
1484.8 3714.26 1497.9 3715.91 1500.51 3715.91 cv
1500.9 3715.91 1501.06 3715.87 1500.94 3715.79 cv
1500.19 3715.27 1491.54 3712.58 1480.04 3710.37 cv
1494.66 3711.89 1508.93 3713.71 1511.67 3713.71 cv
1512.07 3713.71 1512.22 3713.68 1512.1 3713.59 cv
1511.36 3713.08 1502.7 3710.38 1491.19 3708.17 cv
1508.01 3709.54 1522.22 3710.82 1525.66 3710.81 cv
1526.25 3710.81 1526.52 3710.78 1526.44 3710.7 cv
1525.99 3710.24 1518.11 3708.11 1505.84 3706.04 cv
1519.62 3707.26 1530.44 3708.24 1533.1 3708.24 cv
1533.6 3708.24 1533.81 3708.2 1533.7 3708.13 cv
1532.74 3707.49 1515.58 3703.47 1492.91 3700.83 cv
1506.55 3702.03 1517.23 3702.99 1519.88 3702.99 cv
1520.39 3702.99 1520.6 3702.96 1520.48 3702.88 cv
1519.65 3702.33 1506.68 3699.25 1488.49 3696.71 cv
1498.54 3696.99 1506.59 3697.21 1510.42 3697.21 cv
1512.28 3697.21 1513.15 3697.16 1512.77 3697.04 cv
1511.16 3696.51 1492.41 3693.93 1469.64 3692.52 cv
1484.83 3692.33 1496.14 3692.21 1494.73 3691.84 cv
1492.72 3691.31 1470.07 3688.96 1446.34 3688.79 cv
1454.78 3688.84 1462.22 3688.9 1467.55 3688.9 cv
1473.47 3688.9 1476.8 3688.83 1476.01 3688.62 cv
1474.24 3688.16 1456.2 3686.18 1434.43 3685.2 cv
1448.04 3685.06 1457.34 3684.93 1455.96 3684.62 cv
1453.71 3684.12 1428.88 3681.94 1402.47 3681.7 cv
1411.86 3680.92 1417.69 3680.37 1416.2 3680.2 cv
1414.87 3680.04 1408.43 3679.86 1399.4 3679.86 cv
1390.35 3679.86 1378.69 3680.04 1366.96 3680.61 cv
1380.67 3678.99 1392.38 3677.72 1390.51 3677.57 cv
1390.09 3677.54 1389.06 3677.51 1387.54 3677.51 cv
1382.37 3677.51 1371.58 3677.76 1360.33 3678.51 cv
1366.92 3677.57 1371.46 3676.91 1370 3676.8 cv
1368.44 3676.68 1366.52 3676.63 1364.36 3676.63 cv
1359.21 3676.63 1352.69 3676.94 1346.32 3677.43 cv
1346.28 3676.16 1346.63 3674.62 1347.57 3672.78 cv
1345.36 3672.03 1344.04 3670.78 1343.39 3669.3 cv
1352.26 3665.25 li
1347.48 3647.27 li
1348.6 3645.76 1349.74 3644.59 1350.34 3644 cv
1377.29 3644 li
1382.93 3665.25 li
1399.93 3671.51 li
1413.61 3665.25 li
1407.97 3644 li
1438.65 3644 li
1444.29 3665.25 li
1461.28 3671.51 li
1474.96 3665.25 li
1469.32 3644 li
1500 3644 li
1505.64 3665.25 li
1522.64 3671.51 li
1536 3665 li
1536 4000 li
1446.34 3688.79 mo
1446.03 3688.79 1445.73 3688.79 1445.42 3688.79 cv
1445.72 3688.79 1446.03 3688.79 1446.34 3688.79 cv
.666987 .289555 1 .121248 cmyk
f
178.527 4000 mo
112.09 4000 48.4318 4000 1.00036 4000 cv
1.90435 3665.98 li
13.9569 3671.51 li
30.9059 3665.25 li
36.5295 3644 li
67.115 3644 li
61.4924 3665.25 li
75.1319 3671.51 li
92.0799 3665.25 li
97.7035 3644 li
128.291 3644 li
122.667 3665.25 li
136.305 3671.51 li
153.254 3665.25 li
156.743 3652.07 li
160.311 3653.61 163.923 3655.24 167.588 3656.94 cv
167.74 3657.01 180.864 3666.29 175.953 3672.01 cv
181.294 3676.09 184.66 3682.79 178.48 3685.04 cv
184.585 3692.64 178.383 3694.8 176.426 3695.25 cv
179.296 3700.75 174.934 3702.26 174.079 3702.57 cv
185.849 3711.48 177.283 3716.2 172.186 3716.47 cv
172.204 3716.91 li
174.162 3717.74 180.464 3725.74 177.808 3730.36 cv
181.927 3735.22 182.921 3741.41 179.327 3743.39 cv
183.055 3750.61 179.605 3753 177.873 3753.61 cv
179.558 3758.69 177.267 3760.36 176.255 3760.93 cv
178.195 3763.19 179.916 3766.02 180.063 3769.65 cv
180.206 3773.21 176.512 3774.85 173.884 3774.85 cv
173.824 3774.85 173.764 3774.85 173.705 3774.85 cv
173.572 3774.84 173.441 3774.83 173.314 3774.8 cv
172.484 3774.51 171.856 3774.37 171.404 3774.37 cv
169.522 3774.37 170.713 3776.76 173.281 3780.22 cv
175.013 3782.49 176.517 3786.43 176.599 3788.3 cv
176.681 3790.17 176.422 3790.36 176.015 3791.07 cv
177.944 3793.34 179.698 3797.2 179.809 3799.75 cv
179.92 3802.3 178.923 3803.36 177.581 3804.1 cv
178.516 3805.9 179.155 3807.35 179.251 3809.58 cv
179.348 3811.8 177.914 3813.7 176.162 3814.32 cv
176.505 3815.35 176.726 3816.37 176.765 3817.3 cv
176.865 3819.57 175.895 3820.9 174.57 3821.64 cv
176.515 3823.9 178.251 3826.79 178.407 3830.37 cv
178.562 3833.92 174.962 3835.56 172.342 3835.56 cv
172.32 3835.56 172.298 3835.56 172.276 3835.56 cv
169.597 3835.99 169.569 3837.78 172.158 3840.91 cv
174.499 3841.12 176.948 3842.21 176.819 3844.36 cv
176.689 3846.51 174.946 3848.72 173.006 3850.25 cv
174.333 3850.75 175.309 3851.65 175.216 3853.18 cv
175.178 3853.81 174.961 3854.5 174.619 3855.19 cv
176.375 3855.61 177.815 3856.89 177.724 3858.39 cv
177.633 3859.9 176.999 3860.87 176.069 3862.09 cv
177.412 3862.59 178.413 3863.31 178.309 3865.03 cv
178.205 3866.75 176.464 3869.35 174.54 3870.89 cv
174.95 3871.37 175.211 3871.46 175.133 3872.76 cv
175.055 3874.06 173.421 3876.89 171.593 3878.42 cv
169.888 3879.41 170.524 3880.4 171.577 3881.39 cv
174.682 3883.15 177.71 3886.57 177.986 3888.1 cv
178.263 3889.63 177.87 3889.69 177.301 3890.24 cv
180.406 3892 183.356 3894.98 183.711 3896.95 cv
184.067 3898.92 182.622 3899.75 180.633 3900.32 cv
182.19 3901.71 183.341 3903.24 183.579 3904.55 cv
183.962 3906.68 181.841 3907.74 179.212 3908.22 cv
179.813 3909.01 180.128 3909.28 180.35 3910.52 cv
180.572 3911.76 179.283 3913.3 177.317 3913.88 cv
180.449 3915.62 183.406 3918.43 183.8 3920.62 cv
184.357 3923.72 179.571 3924.61 175.902 3924.61 cv
174.26 3924.61 172.841 3924.43 172.226 3924.19 cv
168.576 3927.12 168.576 3931.52 172.82 3937.63 cv
176.888 3938.56 182.988 3945.76 183.355 3948.38 cv
183.721 3951 183.239 3950.44 182.67 3951.15 cv
185.774 3953.42 188.728 3957.27 189.084 3959.82 cv
189.441 3962.38 187.996 3963.44 186.007 3964.18 cv
187.564 3965.98 188.645 3967.43 188.954 3969.65 cv
189.264 3971.88 187.217 3973.78 184.589 3974.4 cv
185.19 3975.43 185.506 3975.78 185.73 3977.38 cv
185.954 3978.98 184.663 3980.97 182.698 3981.72 cv
185.831 3983.98 188.788 3987.61 189.185 3990.44 cv
189.78 3994.7 184.383 3995.64 180.395 3995.64 cv
180.229 3995.64 180.065 3995.64 179.905 3995.64 cv
179.2 3995.63 178.536 3995.48 177.913 3995.21 cv
178.113 3996.8 178.315 3998.39 178.527 4000 cv
1536 3665 mo
1525.74 3625.5 li
1529.39 3625.99 1532.82 3626.48 1536 3626.96 cv
1536 3626.96 li
1536 3665 li
1.92273 3659.19 mo
1.99971 3630.74 li
4.49405 3630.35 7.0753 3629.96 9.75309 3629.6 cv
1.92273 3659.19 li
1497.82 3636 mo
1467.14 3636 li
1463.22 3621 li
1432.54 3621 li
1436.46 3636 li
1405.78 3636 li
1402.61 3623.82 li
1414.79 3620.94 1426.94 3619.14 1438.73 3618.15 cv
1459.05 3619 1477.73 3620.35 1494.14 3621.9 cv
1497.82 3636 li
1375.11 3636 mo
1366.08 3636 li
1368.78 3634.8 1371.5 3633.68 1374.22 3632.62 cv
1375.11 3636 li
112.579 3636 mo
99.8825 3636 li
100.716 3632.8 li
104.585 3633.76 108.543 3634.83 112.579 3636 cv
69.295 3636 mo
38.7075 3636 li
41.1924 3626.46 li
46.1565 3626.13 51.3149 3625.85 56.6798 3625.64 cv
61.4528 3625.97 66.426 3626.47 71.5946 3627.17 cv
69.295 3636 li
f
1536 3665 mo
1536 3665 li
1536 3665 li
1250.33 3627.97 mo
1248.48 3621 li
1279.16 3621 li
1279.88 3623.77 li
1270.03 3624.97 1260.17 3626.36 1250.33 3627.97 cv
1525.41 3624.21 mo
1520.51 3623.08 1515 3621.98 1509 3621 cv
1524.58 3621 li
1525.41 3624.21 li
.689235 .475349 1 .473243 cmyk
f
1338.58 3671.51 mo
1321.58 3665.25 li
1315.94 3644 li
1285.26 3644 li
1290.9 3665.25 li
1277.22 3671.51 li
1260.22 3665.25 li
1250.33 3627.97 li
1260.17 3626.36 1270.03 3624.97 1279.88 3623.77 cv
1283.08 3636 li
1313.75 3636 li
1309.84 3621 li
1340.51 3621 li
1344.43 3636 li
1366.08 3636 li
1360.93 3638.28 1355.82 3640.8 1350.78 3643.59 cv
1350.77 3643.6 1350.61 3643.75 1350.34 3644 cv
1346.62 3644 li
1347.48 3647.27 li
1344.98 3650.63 1342.59 3655.63 1346.53 3659.25 cv
1343.68 3662.11 1342.05 3666.22 1343.39 3669.3 cv
1338.58 3671.51 li
1374.22 3632.62 mo
1371.19 3621 li
1401.87 3621 li
1402.61 3623.82 li
1393.13 3626.06 1383.62 3628.95 1374.22 3632.62 cv
.708766 .479225 1 .502251 cmyk
f
1536 3665 mo
1536 3665 li
1536 3665 li
1536 3665 li
1536 3665 li
1525.74 3625.5 mo
1516.55 3624.26 1505.94 3623.03 1494.14 3621.9 cv
1493.9 3621 li
1509 3621 li
1515 3621.98 1520.51 3623.08 1525.41 3624.21 cv
1525.74 3625.5 li
.698695 .528099 .924956 .62417 cmyk
f
1522.64 3671.51 mo
1505.64 3665.25 li
1500 3644 li
1469.32 3644 li
1474.96 3665.25 li
1461.28 3671.51 li
1444.29 3665.25 li
1438.65 3644 li
1407.97 3644 li
1413.61 3665.25 li
1399.93 3671.51 li
1382.93 3665.25 li
1377.29 3644 li
1350.34 3644 li
1350.61 3643.75 1350.77 3643.6 1350.78 3643.59 cv
1355.82 3640.8 1360.93 3638.28 1366.08 3636 cv
1375.11 3636 li
1374.22 3632.62 li
1383.62 3628.95 1393.13 3626.06 1402.61 3623.82 cv
1405.78 3636 li
1436.46 3636 li
1432.54 3621 li
1463.22 3621 li
1467.14 3636 li
1497.82 3636 li
1494.14 3621.9 li
1505.94 3623.03 1516.55 3624.26 1525.74 3625.5 cv
1536 3665 li
1536 3665 li
1522.64 3671.51 li
1343.39 3669.3 mo
1342.05 3666.22 1343.68 3662.11 1346.53 3659.25 cv
1342.59 3655.63 1344.98 3650.63 1347.48 3647.27 cv
1352.26 3665.25 li
1343.39 3669.3 li
.70724 .536156 .893919 .655451 cmyk
f
1522 3577 mo
1251 3577 li
1251 3552 li
1522 3552 li
1522 3577 li
cp
gsave
[.000762489 -24.2708 24.2708 .000762489 1386.5 3576.27 ]ct
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~K7ef/K7\],Jq8K(JUi9#IsuiqIXQWmI=-EhH[:!aH?jd]H$FRYG^"@UGBS.PF`__IFE;MEF)l;@EH#l9
E,]`6Df9N2D/F**Ci!m&C2.HsBk_6oBP;$kAnGUcA7T1[@U`bS@:<PO?XI,G?=$oC>[1K;>?b97=]nj/
=BJ[,=&r@%<E3$u<)cgq;c6Lj;,L1e:esk^:/4PY9he>U9M8#N8kM]I8OuBB7n6'=7Rfj9779O26UO4-
6:*t(5X7S"5<h@s5!D+m4?P_g4$,Mc3]]8]3&ilW2`EZS2E!EM1c.$G1G^dA0ekC;0JG.5/hSb//M/M)
~>
<~:f'tb:f'tb:esk_:JXb^:JOY[:/4PZ:/+GW9h\5S9MA,R9M8#O91hfK8kDTG8OuBC84Z9B84Q0?7n,s;
7Rfg877BX677BX677BU46psF26psC06UO1,6:*t(5s[b$5X7Ou5<h@s5<h=q5!D+m4Ztni4?P_g4?P\e
4$,Mc4$,Mb3]];^3B9)Z3&ilV2`EZS2`EZR2E!HO2E!HN2)R6J1c.$G1c.$F1G^gB1,:U?1,:U>0ekC:
0JG170/"t30/"t3/hSb//hSb//M/P+/M/P+/1`>'.k<,#.k<,#.Olnt.4H\p.4H\p-n$Jl-n$Jl-RU5f
~>
<~Bk_9qBkV0nBP1sjB4bafAn>ObAS#FaARo=^A7K+Z@q&nV@UW\R@:3JN?sd8J?X@&F?<piB?!LW>>[1N=
>[1K;>?b97>$>'3=BJX+='&I)='&F'<E3!t<)cdp;c?Rl;Gp@h;,L.d:f'q`:JX_\:/4MX9he;T9MA)P
91qoM8kM]I8P)KE84Q0>7Rfj977BX56psF26psF16UF+*5s[e%5X7S!5<h@r5!D.n4Ztqj4?P_f4$,Mc
4$,Mc3]]8]3&ilW2`EZS2`EZS2E!HO2)R6K1c.$G1G^gC1,:U?0ekC;0JG170/"t3/hSb//M/P+/1`;%
~>
<~"U,&5"U,&5"U"r2"9\i1"9S`.!s8W-!s/N*!WiE)!WiE)!WiE)!W`<&!<E3%!<E3%!<E3%!<<*"zzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
1518 3574 mo
1256 3574 li
1256 3556 li
1518 3556 li
1518 3574 li
cp
.143923 .129213 .148043 0 cmyk
ef
1248 3621 mo
1248 3489.02 li
1263.5 3470.37 li
1279 3489.02 li
1279 3621 li
1248 3621 li
cp
gsave
[.0031548 -150.631 150.631 .0031548 1263.5 3621 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
1251 3618 mo
1251 3488.75 li
1264 3470.48 li
1277 3488.75 li
1277 3618 li
1251 3618 li
cp
.143923 .129213 .148043 0 cmyk
ef
1310 3621 mo
1310 3489.02 li
1325.5 3470.37 li
1341 3489.02 li
1341 3621 li
1310 3621 li
cp
gsave
[.0031548 -150.631 150.631 .0031548 1325.5 3621 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
1312 3618 mo
1312 3488.75 li
1325 3470.48 li
1338 3488.75 li
1338 3618 li
1312 3618 li
cp
.143923 .129213 .148043 0 cmyk
ef
1371 3621 mo
1371 3489.02 li
1386.5 3470.37 li
1402 3489.02 li
1402 3621 li
1371 3621 li
cp
gsave
[.0031548 -150.631 150.631 .0031548 1386.5 3621 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
1374 3618 mo
1374 3488.75 li
1387 3470.48 li
1400 3488.75 li
1400 3618 li
1374 3618 li
cp
.143923 .129213 .148043 0 cmyk
ef
1432 3621 mo
1432 3489.02 li
1447.5 3470.37 li
1463 3489.02 li
1463 3621 li
1432 3621 li
cp
gsave
[.0031548 -150.631 150.631 .0031548 1447.5 3621 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
1435 3618 mo
1435 3488.75 li
1448 3470.48 li
1461 3488.75 li
1461 3618 li
1435 3618 li
cp
.143923 .129213 .148043 0 cmyk
ef
1494 3621 mo
1494 3489.02 li
1509.5 3470.37 li
1525 3489.02 li
1525 3621 li
1494 3621 li
cp
gsave
[.0031548 -150.631 150.631 .0031548 1509.5 3621 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
1496 3618 mo
1496 3488.75 li
1509 3470.48 li
1522 3488.75 li
1522 3618 li
1496 3618 li
cp
.143923 .129213 .148043 0 cmyk
ef
.906141 3665.52 mo
.318432 3665.25 li
.912958 3663.01 li
.906141 3665.52 li
.689235 .475349 1 .473243 cmyk
f
287.184 3621.48 mo
285.579 3621.32 283.974 3621.15 282.363 3621 cv
287.312 3621 li
287.184 3621.48 li
.594049 .568078 .587121 .330724 cmyk
f
280.291 3647.53 mo
248.917 3641.01 219.633 3636.16 192.508 3632.68 cv
195.55 3621 li
226.137 3621 li
222.23 3636 li
252.819 3636 li
256.724 3621 li
282.363 3621 li
283.974 3621.15 285.579 3621.32 287.184 3621.48 cv
280.291 3647.53 li
162.8 3629.31 mo
152.45 3628.29 142.473 3627.48 132.85 3626.86 cv
134.375 3621 li
164.964 3621 li
162.8 3629.31 li
10.0698 3628.4 mo
12.0273 3621 li
42.6138 3621 li
41.5307 3625.16 li
29.4499 3625.24 18.9506 3626.48 10.0698 3628.4 cv
102.63 3625.45 mo
95.5615 3625.25 88.7321 3625.15 82.142 3625.15 cv
78.7304 3625.15 75.3824 3625.18 72.1002 3625.23 cv
73.2013 3621 li
103.788 3621 li
102.63 3625.45 li
.689235 .475349 1 .473243 cmyk
f
258.656 3671.51 mo
245.016 3665.25 li
250.638 3644 li
220.052 3644 li
214.429 3665.25 li
197.481 3671.51 li
183.842 3665.25 li
189.465 3644 li
158.877 3644 li
156.743 3652.07 li
141.076 3645.27 126.34 3640 112.579 3636 cv
130.47 3636 li
132.85 3626.86 li
142.473 3627.48 152.45 3628.29 162.8 3629.31 cv
161.056 3636 li
191.643 3636 li
192.508 3632.68 li
219.633 3636.16 248.917 3641.01 280.291 3647.53 cv
275.604 3665.25 li
258.656 3671.51 li
100.716 3632.8 mo
90.4063 3630.23 80.6984 3628.4 71.5946 3627.17 cv
72.1002 3625.23 li
75.3824 3625.18 78.7304 3625.15 82.142 3625.15 cv
88.7321 3625.15 95.5615 3625.25 102.63 3625.45 cv
100.716 3632.8 li
.708766 .479225 1 .502251 cmyk
f
1.90435 3665.98 mo
.906141 3665.52 li
.912958 3663.01 li
1.92273 3659.19 li
1.90435 3665.98 li
9.75309 3629.6 mo
10.0698 3628.4 li
18.9506 3626.48 29.4499 3625.24 41.5307 3625.16 cv
41.1924 3626.46 li
29.6112 3627.23 19.1196 3628.31 9.75309 3629.6 cv
.698695 .528099 .924956 .62417 cmyk
f
136.305 3671.51 mo
122.667 3665.25 li
128.291 3644 li
97.7035 3644 li
92.0799 3665.25 li
75.1319 3671.51 li
61.4924 3665.25 li
67.115 3644 li
36.5295 3644 li
30.9059 3665.25 li
13.9569 3671.51 li
1.90435 3665.98 li
1.92273 3659.19 li
9.75309 3629.6 li
19.1196 3628.31 29.6112 3627.23 41.1924 3626.46 cv
38.7075 3636 li
69.295 3636 li
71.5946 3627.17 li
80.6984 3628.4 90.4063 3630.23 100.716 3632.8 cv
99.8825 3636 li
112.579 3636 li
126.34 3640 141.076 3645.27 156.743 3652.07 cv
153.254 3665.25 li
136.305 3671.51 li
.70724 .536156 .893919 .655451 cmyk
f
14 3577 mo
285 3577 li
285 3552 li
14 3552 li
14 3577 li
cp
gsave
[-.000804864 -24.2712 24.2712 -.000804864 149.5 3576.27 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
19 3574 mo
280 3574 li
280 3556 li
19 3556 li
19 3574 li
cp
.143923 .129213 .148043 0 cmyk
ef
288 3621 mo
288 3489.02 li
272.5 3470.37 li
257 3489.02 li
257 3621 li
288 3621 li
cp
gsave
[-.0031548 -150.631 150.631 -.0031548 272.501 3621 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
285 3618 mo
285 3488.75 li
272 3470.48 li
259 3488.75 li
259 3618 li
285 3618 li
cp
.143923 .129213 .148043 0 cmyk
ef
226 3621 mo
226 3489.02 li
210.5 3470.37 li
195 3489.02 li
195 3621 li
226 3621 li
cp
gsave
[-.0031548 -150.631 150.631 -.0031548 210.501 3621 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
224 3618 mo
224 3488.75 li
211 3470.48 li
198 3488.75 li
198 3618 li
224 3618 li
cp
.143923 .129213 .148043 0 cmyk
ef
165 3621 mo
165 3489.02 li
149.5 3470.37 li
134 3489.02 li
134 3621 li
165 3621 li
cp
gsave
[-.0031548 -150.631 150.631 -.0031548 149.501 3621 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
163 3618 mo
163 3488.75 li
150 3470.48 li
137 3488.75 li
137 3618 li
163 3618 li
cp
.143923 .129213 .148043 0 cmyk
ef
104 3621 mo
104 3489.02 li
88.5005 3470.37 li
73 3489.02 li
73 3621 li
104 3621 li
cp
gsave
[-.0031548 -150.631 150.631 -.0031548 88.5014 3621 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
101 3618 mo
101 3488.75 li
88.0005 3470.48 li
75 3488.75 li
75 3618 li
101 3618 li
cp
.143923 .129213 .148043 0 cmyk
ef
43 3621 mo
43 3489.02 li
27.4995 3470.37 li
12 3489.02 li
12 3621 li
43 3621 li
cp
gsave
[-.0031548 -150.631 150.631 -.0031548 27.5014 3621 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
40 3618 mo
40 3488.75 li
26.9995 3470.48 li
14 3488.75 li
14 3618 li
40 3618 li
cp
.143923 .129213 .148043 0 cmyk
ef
1159.31 3717.77 mo
1158.99 3717.77 1158.84 3717.74 1158.86 3717.68 cv
1159.09 3717.09 1168.94 3713.43 1184.71 3710.23 cv
1166.29 3711.21 1150.25 3712.2 1145.93 3712.2 cv
1145.04 3712.2 1144.65 3712.16 1144.84 3712.07 cv
1145.93 3711.53 1160.74 3708.77 1180.5 3706.79 cv
1180.21 3706.69 1179.49 3706.65 1178.44 3706.65 cv
1175.18 3706.65 1168.8 3707.06 1162.75 3707.48 cv
1156.7 3707.89 1150.99 3708.3 1149.07 3708.3 cv
1148.48 3708.3 1148.25 3708.26 1148.48 3708.17 cv
1149.51 3707.78 1161.32 3705.68 1176.33 3704.12 cv
1176.33 3704.12 1176.31 3704.12 1176.27 3704.12 cv
1175.67 3704.12 1170.15 3704.57 1164.23 3705.02 cv
1158.31 3705.48 1152 3705.93 1149.81 3705.93 cv
1149.21 3705.93 1148.92 3705.9 1149.04 3705.82 cv
1152.14 3703.81 1177.25 3701.15 1179.78 3699.75 cv
1171.34 3700.4 1165.12 3700.84 1163.01 3700.84 cv
1162.4 3700.84 1162.13 3700.81 1162.26 3700.73 cv
1164.14 3699.51 1175.7 3697.82 1184.24 3696.49 cv
1181.2 3702.19 1194.42 3705.22 1202.17 3705.43 cv
1202.37 3705.89 li
1200.39 3706.4 1196.8 3709.54 1195.78 3713.01 cv
1177.74 3715.44 1162.11 3717.77 1159.31 3717.77 cv
1181.83 3716.6 mo
1181.5 3716.6 1181.34 3716.58 1181.37 3716.54 cv
1181.54 3716.23 1186.81 3714.76 1195.75 3713.11 cv
1195.54 3713.89 1195.45 3714.68 1195.54 3715.45 cv
1188.41 3716.14 1183.33 3716.6 1181.83 3716.6 cv
1174.08 3695.18 mo
1171.03 3695.18 1169.49 3695.12 1169.97 3694.97 cv
1172.46 3694.19 1180.07 3693.46 1188.09 3692.81 cv
1186.89 3693.6 1185.97 3694.35 1185.3 3695.06 cv
1180.63 3695.13 1176.77 3695.18 1174.08 3695.18 cv
.689235 .475349 1 .473243 cmyk
f
1312.9 3720.96 mo
1312.7 3720.96 1312.58 3720.95 1312.56 3720.92 cv
1312.14 3720.45 1318.3 3717.72 1330.94 3715.1 cv
1308.5 3717.1 1284.87 3719.78 1281.36 3719.78 cv
1281.06 3719.78 1280.9 3719.76 1280.92 3719.71 cv
1281.06 3719.2 1295.3 3715.27 1317.54 3712.99 cv
1317.29 3712.99 1317.03 3712.99 1316.78 3712.99 cv
1304.34 3712.99 1291.13 3714.8 1280.62 3716.61 cv
1270.1 3718.41 1262.27 3720.22 1260.6 3720.22 cv
1260.43 3720.22 1260.33 3720.2 1260.29 3720.16 cv
1259.89 3719.77 1265.16 3716.86 1276.33 3713.96 cv
1270.72 3714.44 1226.42 3718.88 1222.89 3718.88 cv
1222.74 3718.88 1222.67 3718.87 1222.67 3718.85 cv
1222.81 3718.4 1234 3715.29 1251.98 3713.01 cv
1229.44 3715.01 1205.57 3717.71 1202.04 3717.71 cv
1201.74 3717.71 1201.58 3717.69 1201.59 3717.65 cv
1201.71 3717.26 1210.29 3714.81 1224.49 3712.67 cv
1213.73 3713.66 1203.4 3714.7 1195.54 3715.45 cv
1195.45 3714.68 1195.54 3713.89 1195.75 3713.11 cv
1196.48 3712.98 1197.23 3712.85 1198 3712.71 cv
1197.26 3712.81 1196.52 3712.91 1195.78 3713.01 cv
1196.8 3709.54 1200.39 3706.4 1202.37 3705.89 cv
1202.17 3705.43 li
1194.42 3705.22 1181.2 3702.19 1184.24 3696.49 cv
1188.19 3695.87 1191.49 3695.33 1192.89 3694.94 cv
1190.18 3694.99 1187.64 3695.03 1185.3 3695.06 cv
1185.97 3694.35 1186.89 3693.6 1188.09 3692.81 cv
1197.86 3692.02 1208.24 3691.36 1210.73 3690.89 cv
1196.75 3690.55 1186.68 3690.32 1188.01 3689.98 cv
1189.89 3689.5 1209.74 3687.65 1231.68 3687.49 cv
1232.92 3687.32 1204.55 3687.52 1206.73 3686.98 cv
1208.86 3686.44 1234.49 3683.99 1261.86 3683.74 cv
1242.19 3682.88 1224.77 3682.25 1226.81 3682.03 cv
1228.39 3681.86 1239.72 3681.51 1253.97 3681.51 cv
1261.13 3681.51 1269.03 3681.6 1276.81 3681.84 cv
1276.81 3681.84 li
1276.81 3681.84 li
1260.48 3680.32 1245.59 3679.12 1247.48 3678.91 cv
1249.43 3678.7 1252.31 3678.61 1255.77 3678.61 cv
1270.4 3678.61 1295.42 3680.26 1304.47 3681.55 cv
1304.47 3681.55 li
1304.47 3681.55 li
1301.6 3680.92 1282.67 3678.06 1285.51 3677.98 cv
1286.34 3677.95 1287.33 3677.94 1288.45 3677.94 cv
1298.64 3677.94 1319.48 3678.94 1323.62 3680.54 cv
1327.49 3679.35 1336.75 3678.18 1346.32 3677.43 cv
1346.45 3681.63 1350.81 3683.03 1352.41 3683.4 cv
1351.04 3689.11 1355.82 3690.67 1356.76 3691 cv
1347.42 3700.25 1357.27 3705.16 1362.45 3705.43 cv
1362.55 3705.89 li
1361.22 3706.55 1358.5 3711.58 1359.05 3716.06 cv
1337.25 3718.25 1315.87 3720.96 1312.9 3720.96 cv
.708766 .479225 1 .502251 cmyk
f
1483.16 3721.03 mo
1481.28 3721.03 1472.21 3718.39 1461.9 3715.82 cv
1461.45 3717.83 1458.6 3719.6 1457.44 3719.89 cv
1457.4 3719.9 1457.36 3719.9 1457.31 3719.9 cv
1455.42 3719.9 1444.53 3713.84 1441.46 3712.76 cv
1438.28 3712.85 1429.52 3717.99 1417.36 3719.2 cv
1417.24 3719.21 1417.14 3719.22 1417.04 3719.22 cv
1414.85 3719.22 1419.78 3715.97 1421.29 3713.15 cv
1417.51 3713.2 1397.3 3718.17 1378.22 3718.69 cv
1378.17 3718.69 1378.11 3718.69 1378.07 3718.69 cv
1375.16 3718.69 1388.92 3715.91 1398.31 3713.31 cv
1388.73 3713.33 1373.79 3714.58 1359.05 3716.06 cv
1358.5 3711.58 1361.22 3706.55 1362.55 3705.89 cv
1362.45 3705.43 li
1357.27 3705.16 1347.42 3700.25 1356.76 3691 cv
1355.82 3690.67 1351.04 3689.11 1352.41 3683.4 cv
1350.81 3683.03 1346.45 3681.63 1346.32 3677.43 cv
1352.69 3676.94 1359.21 3676.63 1364.36 3676.63 cv
1366.52 3676.63 1368.44 3676.68 1370 3676.8 cv
1371.46 3676.91 1366.92 3677.57 1360.33 3678.51 cv
1371.58 3677.76 1382.37 3677.51 1387.54 3677.51 cv
1389.06 3677.51 1390.09 3677.54 1390.51 3677.57 cv
1392.38 3677.72 1380.67 3678.99 1366.96 3680.61 cv
1378.69 3680.04 1390.35 3679.86 1399.4 3679.86 cv
1408.43 3679.86 1414.87 3680.04 1416.2 3680.2 cv
1417.69 3680.37 1411.86 3680.92 1402.47 3681.7 cv
1428.88 3681.94 1453.71 3684.12 1455.96 3684.62 cv
1457.34 3684.93 1448.04 3685.06 1434.43 3685.2 cv
1456.2 3686.18 1474.24 3688.16 1476.01 3688.62 cv
1476.8 3688.83 1473.47 3688.9 1467.55 3688.9 cv
1462.22 3688.9 1454.78 3688.84 1446.34 3688.79 cv
1446.03 3688.79 1445.72 3688.79 1445.42 3688.79 cv
1445.73 3688.79 1446.03 3688.79 1446.34 3688.79 cv
1470.07 3688.96 1492.72 3691.31 1494.73 3691.84 cv
1496.14 3692.21 1484.83 3692.33 1469.64 3692.52 cv
1492.41 3693.93 1511.16 3696.51 1512.77 3697.04 cv
1513.15 3697.16 1512.28 3697.21 1510.42 3697.21 cv
1506.59 3697.21 1498.54 3696.99 1488.49 3696.71 cv
1506.68 3699.25 1519.65 3702.33 1520.48 3702.88 cv
1520.6 3702.96 1520.39 3702.99 1519.88 3702.99 cv
1517.23 3702.99 1506.55 3702.03 1492.91 3700.83 cv
1515.58 3703.47 1532.74 3707.49 1533.7 3708.13 cv
1533.81 3708.2 1533.6 3708.24 1533.1 3708.24 cv
1530.44 3708.24 1519.62 3707.26 1505.84 3706.04 cv
1518.11 3708.11 1525.99 3710.24 1526.44 3710.7 cv
1526.52 3710.78 1526.25 3710.81 1525.66 3710.81 cv
1522.22 3710.82 1508.01 3709.54 1491.19 3708.17 cv
1502.7 3710.38 1511.36 3713.08 1512.1 3713.59 cv
1512.22 3713.68 1512.07 3713.71 1511.67 3713.71 cv
1508.93 3713.71 1494.66 3711.89 1480.04 3710.37 cv
1491.54 3712.58 1500.19 3715.27 1500.94 3715.79 cv
1501.06 3715.87 1500.9 3715.91 1500.51 3715.91 cv
1497.9 3715.91 1484.8 3714.26 1470.91 3712.78 cv
1479.89 3716.08 1483.87 3720.32 1483.51 3720.94 cv
1483.47 3721 1483.36 3721.03 1483.16 3721.03 cv
.70724 .536156 .893919 .655451 cmyk
f
1426.31 3701.35 mo
1426.91 3701.53 1417.15 3701.37 1407.12 3701.34 cv
1412.81 3701.61 1435.13 3703.45 1437.91 3704.5 cv
1438.44 3704.7 1410.69 3702.84 1403.92 3702.5 cv
1412.22 3703.26 1439.47 3707.03 1441.89 3708.56 cv
1442.13 3708.72 1406.34 3704.08 1396 3702.99 cv
1401 3703.88 1415.42 3707.53 1416.09 3708.72 cv
1416.09 3708.72 1393.87 3703.68 1387.17 3702.35 cv
1373.39 3704.9 1359.15 3707.73 1359.59 3707.46 cv
1359.96 3707.24 1367.31 3705.16 1377.55 3702.99 cv
1364.71 3704.28 1352.36 3705.66 1352.77 3705.45 cv
1354.76 3704.43 1377.09 3701.76 1382.35 3701.29 cv
1373.8 3700.56 1351.57 3698.86 1352.21 3698.84 cv
1358.47 3698.67 1379.41 3700.19 1386.72 3700.94 cv
1392.38 3700.52 1409.3 3697.34 1412.38 3697.82 cv
1413.13 3697.94 1408.41 3698.63 1399.93 3700.08 cv
1405.18 3699.97 1423.35 3700.48 1426.31 3701.35 cv
cp
.185367 .185733 .776089 0 cmyk
ef
1499.89 3698.26 mo
1500.79 3698.57 1486.08 3698.29 1470.97 3698.25 cv
1479.55 3698.71 1513.16 3701.83 1517.35 3703.59 cv
1518.15 3703.93 1476.36 3700.79 1466.15 3700.21 cv
1478.66 3701.5 1519.7 3707.88 1523.35 3710.48 cv
1523.71 3710.73 1469.8 3702.89 1454.22 3701.03 cv
1461.76 3702.55 1483.48 3708.72 1484.49 3710.75 cv
1484.49 3710.75 1451.03 3702.22 1440.93 3699.95 cv
1420.17 3704.27 1398.72 3709.06 1399.39 3708.61 cv
1399.95 3708.23 1411.01 3704.72 1426.44 3701.05 cv
1407.09 3703.23 1388.49 3705.57 1389.11 3705.21 cv
1392.11 3703.47 1425.75 3698.95 1433.66 3698.17 cv
1420.79 3696.92 1387.3 3694.05 1388.26 3694.02 cv
1397.7 3693.72 1429.24 3696.31 1440.24 3697.57 cv
1448.77 3696.86 1474.27 3691.48 1478.9 3692.29 cv
1480.03 3692.49 1472.92 3693.67 1460.15 3696.11 cv
1468.06 3695.92 1495.42 3696.78 1499.89 3698.26 cv
cp
ef
1480.79 3710.75 mo
1481.4 3710.93 1471.63 3710.77 1461.6 3710.75 cv
1467.29 3711.01 1489.61 3712.86 1492.39 3713.9 cv
1492.92 3714.1 1465.18 3712.25 1458.4 3711.9 cv
1466.7 3712.67 1493.95 3716.43 1496.37 3717.97 cv
1496.62 3718.12 1460.82 3713.49 1450.48 3712.39 cv
1455.49 3713.28 1469.9 3716.93 1470.58 3718.13 cv
1470.58 3718.13 1448.36 3713.09 1441.66 3711.75 cv
1427.87 3714.3 1413.63 3717.13 1414.08 3716.86 cv
1414.45 3716.64 1421.79 3714.57 1432.04 3712.4 cv
1419.19 3713.69 1406.84 3715.07 1407.25 3714.86 cv
1409.25 3713.83 1431.58 3711.16 1436.83 3710.7 cv
1428.29 3709.96 1406.05 3708.26 1406.69 3708.25 cv
1412.96 3708.07 1433.89 3709.6 1441.2 3710.35 cv
1446.86 3709.93 1463.79 3706.75 1466.87 3707.23 cv
1467.62 3707.34 1462.89 3708.04 1454.42 3709.48 cv
1459.67 3709.37 1477.83 3709.88 1480.79 3710.75 cv
cp
ef
1179.85 3690.99 mo
1179.11 3691.41 1191.03 3691.03 1203.25 3690.98 cv
1196.31 3691.6 1169.1 3695.89 1165.71 3698.32 cv
1165.06 3698.78 1198.89 3694.47 1207.16 3693.66 cv
1197.03 3695.44 1163.8 3704.21 1160.85 3707.78 cv
1160.56 3708.14 1204.21 3697.36 1216.82 3694.8 cv
1210.71 3696.88 1193.13 3705.37 1192.31 3708.15 cv
1192.31 3708.16 1219.4 3696.42 1227.58 3693.32 cv
1244.39 3699.24 1261.75 3705.83 1261.21 3705.21 cv
1260.76 3704.69 1251.8 3699.87 1239.31 3694.82 cv
1254.97 3697.82 1270.03 3701.04 1269.53 3700.54 cv
1267.1 3698.15 1239.87 3691.94 1233.46 3690.86 cv
1243.88 3689.14 1270.99 3685.19 1270.22 3685.15 cv
1262.58 3684.75 1237.04 3688.3 1228.13 3690.04 cv
1221.23 3689.06 1200.59 3681.66 1196.84 3682.78 cv
1195.92 3683.05 1201.68 3684.67 1212.02 3688.03 cv
1205.62 3687.77 1183.46 3688.96 1179.85 3690.99 cv
cp
ef
1368.27 3589.54 mo
1379.45 3586.63 1390.03 3586.28 1391.44 3586.73 cv
1392.88 3587.2 1383.89 3590.97 1373.36 3595.83 cv
1391.37 3592.42 1409.12 3593.66 1411.17 3594.58 cv
1412.31 3595.1 1407.83 3596.73 1400.62 3599.07 cv
1420.89 3599.79 1439.95 3606.3 1441.68 3607.8 cv
1442.74 3608.72 1435.6 3609.1 1425.15 3609.53 cv
1441.87 3612.45 1455.71 3618.37 1457.07 3619.75 cv
1458.24 3620.94 1447.6 3620.56 1433.59 3620.24 cv
1452.06 3620.58 1469.87 3627.75 1471.44 3629.36 cv
1472.52 3630.47 1463.84 3630.82 1452.18 3631.39 cv
1469.66 3635.6 1484.05 3643.31 1485.29 3644.88 cv
1486.18 3646 1478.1 3645.15 1466.65 3643.9 cv
1480.61 3651.48 1490.57 3660.7 1491.21 3662.34 cv
1491.75 3663.74 1482.5 3660.47 1470.04 3656.19 cv
1487.45 3664.1 1500.61 3676.1 1501.35 3678 cv
1501.9 3679.41 1492.54 3676.09 1479.97 3671.78 cv
1489.39 3677.96 1495.43 3684.33 1495.78 3685.68 cv
1496.2 3687.33 1483.83 3682.92 1468.73 3678.14 cv
1477.56 3684.75 1484.2 3692.79 1484.77 3694.33 cv
1485.49 3696.28 1473 3689.91 1460.16 3684.71 cv
1468.99 3691.31 1475.63 3699.35 1476.2 3700.89 cv
1476.89 3702.76 1465.43 3696.97 1453.16 3691.91 cv
1460.05 3701.77 1463.1 3714.42 1462.83 3716.28 cv
1462.55 3718.17 1454.97 3709.45 1446.24 3700.97 cv
1445.89 3706.97 1443.71 3712.28 1442.82 3713.13 cv
1441.73 3714.18 1432.97 3695.16 1430.55 3691.85 cv
1428.11 3692.12 1421.39 3707.46 1412.05 3711.08 cv
1409.8 3711.96 1413.86 3701.79 1415.07 3693.02 cv
1412.17 3693.15 1396.65 3708 1382.01 3709.55 cv
1379.31 3709.83 1390.11 3701.38 1397.43 3693.47 cv
1378.45 3693.64 1332.07 3718.23 1331.61 3716.21 cv
1331.29 3714.79 1336.01 3706.64 1345.72 3698.83 cv
1327 3705.31 1307.2 3714.2 1307.32 3712.61 cv
1307.43 3711.08 1318.37 3699.35 1335.43 3692.54 cv
1315.23 3692.07 1292.11 3716.39 1291.49 3713.95 cv
1291.19 3712.77 1295.22 3704.08 1303.8 3695.44 cv
1299.31 3696.91 1262.52 3711.27 1262.62 3710.03 cv
1262.72 3708.69 1271.31 3699.39 1285.11 3692.58 cv
1266.31 3699.07 1246.32 3708.05 1246.44 3706.45 cv
1246.52 3705.27 1253.11 3697.96 1264.01 3691.56 cv
1246.65 3697.82 1230.71 3704.57 1230.91 3703.12 cv
1231.05 3702.13 1235.77 3697.09 1243.68 3691.69 cv
1227.55 3700.09 1213.44 3708.42 1213.64 3706.52 cv
1213.81 3704.77 1221.38 3693.84 1233.47 3684.29 cv
1216.42 3687.83 1202.02 3691.38 1202.87 3689.77 cv
1203.71 3688.18 1215.07 3679.91 1230.25 3674.02 cv
1228.41 3671.61 1204.12 3680.45 1205.67 3678.13 cv
1206.46 3676.96 1215.53 3670.69 1227.04 3666.03 cv
1227 3665.66 1205.31 3673.1 1206.09 3671.11 cv
1208.48 3665.1 1227.75 3657.17 1229.69 3653 cv
1221.33 3655.47 1215.82 3656.97 1216.24 3655.9 cv
1218.35 3650.57 1236.36 3642.27 1239.75 3638.62 cv
1228.86 3639.32 1221.3 3639.75 1222.16 3638.7 cv
1226.39 3633.54 1249.97 3629.08 1253.44 3626.51 cv
1242.71 3625.51 1234.99 3624.81 1236.01 3623.8 cv
1237.45 3622.37 1252.69 3616.85 1269.53 3616.36 cv
1270.48 3615.86 1248.71 3616.45 1250.38 3614.83 cv
1252.01 3613.23 1271.68 3605.9 1292.69 3605.15 cv
1277.59 3602.58 1264.23 3600.71 1265.79 3600.06 cv
1267.62 3599.3 1286.34 3597.29 1304.17 3599.5 cv
1291.64 3594.95 1280.21 3591.36 1281.66 3590.75 cv
1289.47 3587.46 1316.81 3593.84 1325.4 3598.62 cv
1323.19 3596.73 1308.67 3588.2 1310.85 3587.95 cv
1317.25 3587.2 1336.57 3590.3 1340.1 3595.62 cv
1345.88 3588.7 1367.31 3581.99 1375.7 3584.43 cv
1376.82 3584.76 1373.34 3586.73 1368.27 3589.54 cv
cp
gsave
[2.78294 -124.999 124.999 2.78294 1351.65 3704.47 ]ct
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~>?b<9>?b<9>?b<9>?Y36>$>*5>$5!2=]ed.=BJ[-=BAR*='&I)='&I)=&r@&<`N."<E3%!<E)ps<)cgr
<)cdp;c?Un;c?Rl;GpCj;Gp@h;,L1f;,L.d:f'q`:JX_\:/4PZ:/4MX9he;T9MA,R9MA)P91qlL8kM]J
8kM]I8P)KF8P)KE84Z9B84Z9A7n6'>7n6'=7Rfj:7Rfj977BX677BX56psF26psF16UO4-6:+"*6:+")
5s[e&5X7S"5X7S"5<h@s5<h@s5!D.o4Ztqk4?P_g4?P_g4$,Mc4$,Mc3]];_3]];_3B9)[3&ilW2`EZS
~>
<~:/4PZ:/4PZ:/4PZ:/+GW9he>V9he>V9he>V9h\5S9MA,R9M8#O91qoN91hfK8kM]J8kM]J8kDTG8P)KF
8P)KF8P)HD84Z9B84Z6@7n6'>7n6$<7Rfj:7Rfj:7Rfg877BX677BU46psF26psC06UO4.6UO1,6:+"*
6:+")5s[e&5s[e&5s[e%5X7S"5X7S!5<h@s5<h@r5!D.o5!D.n4Ztqk4Ztqj4?P_g4?P_g4?P_f4$,Mc
4$,Mc4$,Mc3]];_3]];_3B9)[3B9)[3&ilW3&ilW2`EZS2`EZS2`EZS2E!HO2E!HO2E!HO2)R6K2)R6K
~>
<~dF$@hdEp7ed*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*L%acd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`
cd0q`cd0n^cHa_\cHa_\cHa_\cHa_\cHa\Zc-=MXc-=JVbfn;Tbfn8RbKJ)PbKJ)PbKJ)PbKJ)PbKJ&N
b0%lLb0%lLb0%lLb0%lLb0%lKaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZGaN2HDaN2HDaN2HD
aN2HDaN2HDaN2HDaN2HDaN2HDa2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@`l?$<`l?$<`l?$<
~>
<~#mgnE#mgnE#mgnE#m^eB#RC\A#RC\A#R:S>#6tJ=#6tJ=#6kA:"pP89"pP89"pG/6"U,&5"U,&5"U,&5
"U,#3"9\i1"9\i1"9\i1"9\i1"9\f/!s8W-!s8W-!s8T+!WiE)!WiE)!WiE)!WiE)!WiB'!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3$zzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/9 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
1362.14 3592.11 mo
1370.93 3589.92 1379.25 3589.67 1380.36 3590.01 cv
1381.49 3590.36 1374.42 3593.21 1366.14 3596.87 cv
1380.3 3594.31 1394.26 3595.25 1395.87 3595.95 cv
1396.77 3596.34 1393.25 3597.57 1387.58 3599.33 cv
1403.52 3599.89 1418.51 3604.82 1419.87 3605.95 cv
1420.71 3606.65 1415.09 3606.93 1406.87 3607.25 cv
1420.02 3609.47 1430.9 3613.94 1431.97 3614.99 cv
1432.89 3615.89 1424.53 3615.59 1413.5 3615.34 cv
1428.03 3615.61 1442.04 3621.03 1443.27 3622.25 cv
1444.12 3623.1 1437.3 3623.35 1428.13 3623.78 cv
1441.87 3626.96 1453.19 3632.8 1454.16 3633.98 cv
1454.86 3634.83 1448.51 3634.18 1439.51 3633.23 cv
1450.48 3638.96 1458.31 3645.93 1458.82 3647.17 cv
1459.25 3648.23 1451.97 3645.76 1442.17 3642.52 cv
1455.86 3648.5 1466.21 3657.57 1466.8 3659.01 cv
1467.23 3660.07 1459.87 3657.56 1449.98 3654.29 cv
1457.39 3658.96 1462.14 3663.78 1462.42 3664.8 cv
1462.75 3666.04 1453.02 3662.71 1441.14 3659.09 cv
1448.09 3664.08 1453.31 3670.16 1453.76 3671.33 cv
1454.32 3672.8 1444.5 3667.98 1434.4 3664.04 cv
1441.35 3669.04 1446.57 3675.11 1447.02 3676.28 cv
1447.56 3677.69 1438.54 3673.31 1428.9 3669.48 cv
1434.31 3676.92 1436.71 3686.48 1436.5 3687.88 cv
1436.28 3689.31 1430.32 3682.72 1423.45 3676.31 cv
1423.18 3680.84 1421.46 3684.85 1420.76 3685.49 cv
1419.91 3686.29 1413.02 3671.92 1411.12 3669.42 cv
1409.2 3669.62 1403.91 3681.2 1396.57 3683.92 cv
1394.8 3684.58 1397.99 3676.91 1398.94 3670.29 cv
1396.66 3670.38 1384.46 3681.59 1372.95 3682.74 cv
1370.82 3682.96 1379.31 3676.58 1385.07 3670.62 cv
1370.14 3670.73 1333.67 3689.27 1333.31 3687.74 cv
1333.06 3686.67 1336.77 3680.52 1344.4 3674.63 cv
1329.68 3679.5 1314.12 3686.21 1314.21 3685 cv
1314.29 3683.85 1322.89 3675 1336.32 3669.87 cv
1320.43 3669.5 1302.25 3687.85 1301.75 3686 cv
1301.52 3685.11 1304.69 3678.55 1311.44 3672.03 cv
1307.91 3673.14 1278.97 3683.96 1279.05 3683.03 cv
1279.13 3682.01 1285.89 3675 1296.74 3669.86 cv
1281.96 3674.75 1266.23 3681.52 1266.33 3680.31 cv
1266.39 3679.42 1271.57 3673.9 1280.15 3669.08 cv
1266.49 3673.8 1253.96 3678.88 1254.12 3677.78 cv
1254.22 3677.04 1257.94 3673.24 1264.15 3669.16 cv
1251.47 3675.49 1240.38 3681.78 1240.53 3680.34 cv
1240.67 3679.02 1246.62 3670.78 1256.13 3663.57 cv
1242.72 3666.23 1231.39 3668.9 1232.07 3667.68 cv
1232.73 3666.48 1241.66 3660.25 1253.59 3655.81 cv
1252.15 3653.99 1233.05 3660.64 1234.27 3658.9 cv
1234.88 3658.01 1242.02 3653.28 1251.07 3649.78 cv
1251.04 3649.5 1233.98 3655.1 1234.6 3653.59 cv
1236.47 3649.06 1251.63 3643.09 1253.15 3639.93 cv
1246.59 3641.8 1242.25 3642.93 1242.58 3642.12 cv
1244.24 3638.09 1258.4 3631.84 1261.07 3629.08 cv
1252.5 3629.61 1246.56 3629.93 1247.24 3629.13 cv
1250.56 3625.24 1269.11 3621.89 1271.84 3619.96 cv
1263.4 3619.19 1257.32 3618.65 1258.13 3617.89 cv
1259.26 3616.82 1271.25 3612.65 1284.48 3612.3 cv
1285.23 3611.92 1268.11 3612.35 1269.42 3611.13 cv
1270.71 3609.93 1286.18 3604.4 1302.7 3603.85 cv
1290.83 3601.9 1280.32 3600.48 1281.55 3599.99 cv
1282.98 3599.41 1297.7 3597.91 1311.73 3599.59 cv
1301.87 3596.14 1292.88 3593.43 1294.02 3592.97 cv
1300.17 3590.49 1321.67 3595.33 1328.43 3598.94 cv
1326.69 3597.51 1315.27 3591.06 1316.98 3590.87 cv
1322.01 3590.31 1337.21 3592.67 1339.98 3596.68 cv
1344.53 3591.46 1361.38 3586.41 1367.98 3588.26 cv
1368.86 3588.51 1366.12 3590 1362.14 3592.11 cv
cp
gsave
[-1.35558 60.9878 -60.9878 -1.35558 1350.8 3601.76 ]ct
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO2E!HO2E!HO2Dm?L2)R6K2)R6K2)R6K2)I-H1c.$G
1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?1,:U?1,:R=0ekC;0ekC;0ek@90JG170JG170JG.5
0/"t30/"t2/hSb//hSb./M/P+/M/P+/M/P+/M/P+/M/P*/1`>'/1`>'/1`>'/1`>&.k<,#.k<,#.k<,"
.Olnt.Olnt.Olnt.Olnt.Olnt.4H\p.4H\p.4H\p.4H\p.4H\p-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-RU8h
~>
<~1c.$G1c$pD1GU^@1,1L<0eb:80J>(40.nk0/hSb//hJY,/M&G(/1W5$.k3"u.Oceq.4H\p.4?Sm-mpAi
-RU8h-RU5f-71#b,paf^,U=TZ,9nBV+sJ0R+X&!P+X%sN+<VaJ+!2RH+!2OF*Zc=B*??+>*#on:)]K_8
)]K_7)B'M3)&X;/(`4)+(Ddl'()@Z#'bqGt'GM5p',)#l&eYfh&J5Te&J5Td&.fB`%hB0\%LrsX%1NaU
%1NaU$k*OQ$O[=M$47+I$47+I#mgnE#RC\A#RC\A#6tJ="pP89"U,&5"U,&5"9\i1"9\i1!s8W-!s8W-
~>
<~`l?$<`l5p9`Pog8`Pf^5`5BL1_ns:-_SX1,_SO()_83t(_8*k%^q[Y!^V7Fr^:h4n]tM+m]tD"j]Xtef
]=YYc]"5Ja]"5G_\[f8]\[f5[\@B#W\$riU\$rfS[^NTO[C*BK['[3I['[0GZa7!EZa6sCZEga?Z*CO;
Yct@8YHP.5YHG%1Xf\_,XK8M(X/i;%X/i;$WiE)!WiE(uWMukqW2QYmVl-GjVl-GiVP^5eV5:#bV5:#a
Unjf^USFTZU8"BVU8"BVTqS0RTqS0RTV.sNT:_aJSt;OFSXl=BSXl=BS=H+>S=H+>S"#n:R[T\6R@0J2
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/10 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
1361.07 3588.83 mo
1367.45 3587.8 1373.49 3587.72 1374.3 3587.89 cv
1375.12 3588.07 1369.99 3589.44 1363.98 3591.19 cv
1374.26 3590.01 1384.39 3590.54 1385.56 3590.9 cv
1386.21 3591.09 1383.66 3591.68 1379.54 3592.52 cv
1391.12 3592.88 1402 3595.38 1402.98 3595.94 cv
1403.59 3596.29 1399.51 3596.4 1393.55 3596.52 cv
1403.09 3597.67 1411 3599.93 1411.77 3600.45 cv
1412.44 3600.9 1406.37 3600.71 1398.36 3600.53 cv
1408.91 3600.74 1419.08 3603.48 1419.98 3604.09 cv
1420.59 3604.51 1415.64 3604.6 1408.98 3604.76 cv
1418.96 3606.4 1427.17 3609.33 1427.88 3609.92 cv
1428.39 3610.34 1423.78 3609.99 1417.24 3609.47 cv
1425.21 3612.35 1430.9 3615.82 1431.26 3616.43 cv
1431.58 3616.96 1426.29 3615.7 1419.18 3614.06 cv
1429.12 3617.07 1436.63 3621.59 1437.06 3622.3 cv
1437.37 3622.82 1432.02 3621.55 1424.84 3619.89 cv
1430.22 3622.23 1433.68 3624.62 1433.87 3625.13 cv
1434.12 3625.74 1427.05 3624.05 1418.43 3622.21 cv
1423.47 3624.7 1427.26 3627.72 1427.59 3628.29 cv
1428 3629.02 1420.87 3626.6 1413.54 3624.61 cv
1418.58 3627.1 1422.37 3630.12 1422.7 3630.7 cv
1423.09 3631.39 1416.54 3629.19 1409.54 3627.25 cv
1413.47 3630.95 1415.21 3635.67 1415.06 3636.35 cv
1414.9 3637.05 1410.57 3633.78 1405.59 3630.59 cv
1405.39 3632.82 1404.14 3634.78 1403.63 3635.1 cv
1403.01 3635.48 1398.01 3628.37 1396.63 3627.13 cv
1395.23 3627.22 1391.4 3632.89 1386.07 3634.2 cv
1384.78 3634.51 1387.1 3630.75 1387.79 3627.5 cv
1386.13 3627.53 1377.27 3632.99 1368.92 3633.49 cv
1367.37 3633.59 1373.54 3630.49 1377.72 3627.59 cv
1366.88 3627.56 1340.4 3636.5 1340.14 3635.75 cv
1339.95 3635.22 1342.65 3632.21 1348.19 3629.35 cv
1337.51 3631.67 1326.2 3634.89 1326.27 3634.3 cv
1326.33 3633.73 1332.57 3629.42 1342.32 3626.97 cv
1330.78 3626.7 1317.59 3635.64 1317.23 3634.73 cv
1317.05 3634.29 1319.36 3631.08 1324.26 3627.9 cv
1321.7 3628.43 1300.69 3633.6 1300.74 3633.14 cv
1300.8 3632.64 1305.71 3629.23 1313.58 3626.76 cv
1302.85 3629.08 1291.44 3632.33 1291.5 3631.74 cv
1291.55 3631.3 1295.31 3628.62 1301.54 3626.29 cv
1291.63 3628.54 1282.52 3630.97 1282.64 3630.43 cv
1282.72 3630.07 1285.41 3628.22 1289.93 3626.24 cv
1280.72 3629.29 1272.67 3632.33 1272.78 3631.62 cv
1272.88 3630.97 1277.2 3626.95 1284.1 3623.45 cv
1274.37 3624.69 1266.14 3625.94 1266.63 3625.35 cv
1267.11 3624.76 1273.6 3621.74 1282.26 3619.62 cv
1281.21 3618.71 1267.34 3621.89 1268.23 3621.04 cv
1268.68 3620.6 1273.86 3618.31 1280.43 3616.63 cv
1280.41 3616.5 1268.02 3619.16 1268.47 3618.43 cv
1269.83 3616.21 1280.84 3613.34 1281.94 3611.8 cv
1277.17 3612.68 1274.02 3613.22 1274.26 3612.82 cv
1275.47 3610.85 1285.75 3607.84 1287.69 3606.5 cv
1281.47 3606.71 1277.15 3606.84 1277.64 3606.45 cv
1280.06 3604.56 1293.53 3603 1295.51 3602.06 cv
1289.38 3601.65 1284.97 3601.35 1285.55 3600.98 cv
1286.37 3600.46 1295.08 3598.47 1304.69 3598.36 cv
1305.23 3598.18 1292.8 3598.3 1293.75 3597.71 cv
1294.69 3597.12 1305.92 3594.48 1317.92 3594.3 cv
1309.29 3593.28 1301.66 3592.52 1302.56 3592.29 cv
1303.6 3592.01 1314.29 3591.35 1324.47 3592.25 cv
1317.31 3590.5 1310.79 3589.12 1311.61 3588.9 cv
1316.08 3587.71 1331.69 3590.2 1336.59 3592.02 cv
1335.33 3591.3 1327.04 3588.07 1328.28 3587.99 cv
1331.94 3587.74 1342.97 3588.98 1344.98 3590.97 cv
1348.28 3588.42 1360.52 3586.02 1365.31 3586.97 cv
1365.95 3587.09 1363.96 3587.81 1361.07 3588.83 cv
cp
.128206 .0211795 .614893 0 cmyk
ef
1367.21 3601.83 mo
1367.21 3601.83 li
1369.26 3603.03 1371.91 3602.25 1373.1 3600.1 cv
1471.64 3422.07 li
1472.83 3419.93 1472.12 3417.2 1470.07 3416 cv
1470.07 3416 li
1468.02 3414.81 1465.37 3415.58 1464.18 3417.73 cv
1365.64 3595.76 li
1364.45 3597.9 1365.16 3600.64 1367.21 3601.83 cv
cp
.377111 .45832 .589776 .0887465 cmyk
ef
1470.74 3421.76 mo
1473.6 3416.6 1467.03 3412.91 1464.18 3418.07 cv
1365.64 3596.1 li
1364.74 3597.72 1368.14 3598.09 1370.21 3595.08 cv
1391.41 3564.25 1456.55 3447.4 1470.74 3421.76 cv
cp
.252293 .359777 .532097 .00854505 cmyk
ef
1349.74 3597.47 mo
1347.05 3602.56 1330.93 3631.99 1329.56 3631.94 cv
1321.38 3631.65 li
1320 3631.6 1343.35 3592.11 1346.46 3586.48 cv
1347.01 3585.49 1391.31 3611.27 1390.76 3612.27 cv
1387.64 3617.89 1379.44 3633.22 1378.06 3633.18 cv
1370.51 3632.96 li
1369.15 3632.92 1376.99 3619.99 1379.88 3615.01 cv
1368.43 3608.35 li
1365.74 3613.44 1357.06 3631.67 1355.69 3631.75 cv
1347.4 3632.25 li
1346.04 3632.33 1358.3 3609.11 1361.19 3604.14 cv
1349.74 3597.47 li
cp
.477577 .299351 .395361 .0115663 cmyk
ef
1347.4 3632.25 mo
1350.79 3632.05 li
1353.66 3622.56 1358.58 3612.07 1368.01 3606.85 cv
1381.35 3614.61 li
1376.34 3623.24 1373.33 3624 1370.51 3632.96 cv
1372.42 3633.02 li
1375.55 3623.28 1381.38 3620.19 1389.44 3612.43 cv
1384.9 3608.88 1352.3 3589.9 1347 3587.73 cv
1341.76 3597.13 1324.71 3622.03 1321.38 3631.65 cv
1324.11 3631.75 li
1326.4 3622.47 1340.11 3602.15 1349.32 3595.97 cv
1362.66 3603.74 li
1357.65 3612.36 1350.22 3623.29 1347.4 3632.25 cv
cp
.143923 .129213 .148043 0 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.1.0
%%For: (ABCDetective) ()
%%Title: (Game_Background_02.eps)
%%CreationDate: 5/15/2018 11:45 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6=^*AtZ2f3Cqtp4SJ2e^(2%P^H;3[fR-od9HJhkHp]t5BSDncmP2*i"6C\?P.T6$;("]^sF7q>#"%4`r@DqqJ&\o23L?e^^=
%X@\PM+DG(KQ\>\u$f(3cXfNMM0'gF%L8pinF^:POD=sph:;&_=%!pJ#E1#mtH\::#,kG*J)`]Lb_3&d!Y24'jrf!63EqKP2(chE2
%DRJeRDpTqo,"d_;42i#aq.^2K!!%Hqqph$<#BgjJUCe%?YR011l.noB-gXU-P-,-SHr3k6f-U!AK735XkBKR!,O5l$d,IofPt+ge
%?n9&oIT0==DIn3:q#)Y%=H&b:W@HKrj["1Al?.Z<m0F6+FZ:5ClAbAE4eh",r)W<0'TXAm7-)"AH\S>_'&b#9l-;:BT"[%"L\j^7
%q!U.O^YsA[,"<i8VbjT/LHle,>XXb6Yi'W])$IH^SIgXp0@`/_G'R%7)Wrt,,tF,+)R'PIE#XH+W+kb6Qr9/>;Wg<dZE?VAN@-eu
%4iN8hmW@sCV#Elbro\IcW*ZXW#ECYYK2JoH2e\bK73r#KW1c4A0?<JVi2YNMJI!!r:T$fFmFCK=ki>+9gLXh;!KQ^!D,DbnhWc=>
%mp:@"3n]O,*9S;')gCl7^ZpFOP4O.9>O#K-HBY)!E%-VGZP!C,9?B4Kaea5N;'S3$o+;FZ"LO!K<7hI/G+raW#6I;4/g?SYU%Sh$
%iTGjE>H>B\3R-*@_a1?cS%U:>2#9L'VmO6DGM`nl+G\@ChK<DI$SRpsJ-0eje"VJie/WZ^h/WnaLgDZH&ImtZlTg>-*gKSMZ6Xt7
%rY70f)V'U^P_21t`(rh<:L2#e9ZGm=MRXBi4=Z55<#"RogEt`j2atPpMLrSW"e-qJ2H(=EG(Jp>[aB56""'_*m^eG'F<-k02uLU+
%R1)!sA?]hrK1@[7Ch)4Ee@$*GFLQ+'@,&%%-(9uj.AAfd;=*Qh(IdPJ)f17Vi?pNN^0GR?0k:VUYmiIBT7hDi*4.NmKqJ,JRDM`&
%7>4/r,?+A/GfMJI)u2h%<2Pl]Ckf%M-ap9sguiF/&5OTHAP#=ET<p-1Sh`RQVpnTAKQpQuDA2l%c&bHn6r6jFP]M/p;&k&$B#paJ
%Bdt%T)0s.rr.PPW42=XIGhe"FfF3&D:T@*'/l]?F!lX?W![6F.,Zf,Q6n3P"7YU$JL2p'-+N.4,-tWh@<?#f7ra?aVd'Z_]OE@Cj
%e&06OIUY*Jlc:<9$ginFfEN4Hm]MheSj^OfEDT;Pc.OrmfBrq7e7>LT\5)&KQ:ddt7qGIN;rJ>J?,a>O;=^u[Mk>U!!9eG!k7CE0
%Q!-)r4V\M3@?Wojb.dW!51&-Y?Jj(6@JP@;/`$(#h\&M)hjRfrpU0D2g=HPWjGK.CpI4))l]UUDVLWA^T'+0:DOjVG4+DiI&,BH+
%-V<s>^SQG,?'a_-InTf@Q2^KdoM<s"Db]i-CX/P\cpReurg>,3m;M52FLNg4bMUa_CmP(o\+GaQrgYs/3lFgo?i&OU7CU@5+Cug$
%Yn^IZh+nb2ChW=d%@b#<n1>,Z1Chh$[]N_!^l!!uP2uPXOUa=MAS;rKP7/Jg#[kJ#@LqlnJcWG8g(oH'i0U/g)T@UO<@d+97Cph,
%DT5^9<0.TMlkIbK?\hEtR5-TVlVXQUD@,jlL\u"N.?>'OM[Ti@)0b&;C(Z0aMm>XRZ\Jg!Y-M<P'J6NoYZ&pQH2H`i8m\:*Gp;j)
%S$5;7[DZ4dceAXTd1P310iA<VV)a^2Tp8%\(Jl$X4eFH\rHhj/:N;D]+nSoD(3HfqQh^[$IFHAk/@^$+L6i'L%(h#<bCWrbpMY:Z
%d)D[TGJ.fnW*I]mJrI77ql\?e(NUefGJ%b>3'ZA5RF$3Ig&0i9[YWr*GZiD4>bh7PQVI(c^fWL1+Subi"^DJVnJPXK:t\MX^)H#u
%]I`8UJH:'o0:Nh/(\=r*M_/[d1BoTI/pu<0GZf"_SP\P]A@BYuFr.mUAb4nDj(557$h3:Y7?pm+<uMf,$!%(:>Ynj;MBfdU!k`bX
%7XUA5BY"3q)60c:)mV5RU&'`HLuNO!R),g=8P0;-);HEH*)Q]k^GS9!$`8W!]aPbc16sX#nJOFX2B32+ciEJ/)<!.Lb#04L$7Ns5
%(Lj7[=WiS(eU:A)'8gjV6X0aDHpca)9p3<@A[FkG%_lFp1Xee8'Y[FaKWiA.loUmrS1-O]*dlS_k)F@OZ8J=0fhc=ZM[SY<1U\2Z
%>2J5]0o$li?_r[=.Sb3*LBlJ!bcKreANup!"k#h;jr7ZfA[Ai5(cQdme*!Qc1Xj3DgW>#jZ+@-YZ:1n`Rmi`trB"?Z<N,gb;<D'<
%&#mh4I9or35@+2iihk-mRZrP=N/N@M"f=KG'kRCQV`s6hg!$gB0e`D]p$o^T5;A6o:43\DMY:tVqOg(^bQ0\'!GfN\ljdS+nC35J
%Y*1%,iIl0i^b,Qb2b\X]5mk>6P0<`@KY:Jjp-$CZQikJ4,_lRu&YZhP5t^X!diWWG(\BO63lRD\i*]$+eb;4D(@S7B)I6.f`Hd0j
%cR@)`XM4.;5GC-`e$())afN3@r@q)fY0m:dGafGf(fh;7i+^ZQlTT7NgPV:/%IWQHNuq@ANK$^3:<Wb@agWW_(/p_ZU1(h]@!.)l
%CNSa@(*:p?;Oh*]!B/1?@I15*O[bf^RV3-#:3b4sLGu0"Oh\)XZQE&7UGRJ+OaR,q7,t#!6Yjp(e,Zn&MO@Wm_<u[(GGd^C'Lt=2
%`)7D*W62Hq`h,hZofu-NigMbRN^f."MmMk%c;>K&d@<4t+.m<G8o\4(B-]M5dA]UH\F=(t3'2-Xd?N;W;W@.>kYH)iqmZK>C,cT/
%s8H!X]QKWratl(gp?ehKp['JK_$U'3`YMOD:#6c:Sgr&57/-XOOFZ>h^bR6.8.E/,^O=*'jdG8`]P!7m0JB23ce:G=_VYOL_S"+2
%\M>qDKQCac-2OAF+`cF$HmkcG))$UF_5?gTZ@I4:`qM5Y$hR/kI<=5IRCspOqe!u,U,^psnB!GRUSb[uC*\2mnNLs6I><-:_\DRb
%djc#^1!JW6a5Sq&lF:c>jCd\^RAjf^,U_S>`eYqp+iMjcTh;Yhg(D>tqm;[j1CCrg[XMnsVmPG4%f$IGfqu*m#@dFQbM_B61WaN1
%^4S'!DeZRuG"jA;`63tZ1<q@@#&S?(Za(H+Kl+*#%*bk#^!*%uVse$+pU/um5M+YAN(j^k:9a:(k01J"$A6V;*]Es,G[/l_bfbS?
%R5=B-A1,$+iO:mYp4\i!m\,CFA.J.4g:jh74YD,%)R3bf9B(A3MD<G"I,a<Y'io%u`COm!Gq-I+k7'(gBdq9LJm4lAKtWHA#CUql
%>4>I%@bisX(ZK#9BK,IYBq.Op?ig41>K=^Q'l]KmJY&KHicKu%6-KT3oAY1CS=eYmVi/,bbHMlE4?*,Rj1b)i@(PQ7(I.Qkh)Y)c
%)cM_^*B7clU2$1+6uQW^HibQYkRT'oeB<H&\\TbW0eTK5E5aDVQ;r12qp%9j=j<A]2iNTEbhm_\iSn/ZF>8q"Y`g/eA6&4gj[)BR
%$.LeXHq.UDMYiF#3N3.eq1FRr>g/aHs4YYPT`e&ICji@R4qtB@R73NRo-%G+rQ<k7UP4)LGKrBSaNK/fjuD]ADddQ')'BSk'Ue>=
%mTX!eBgZWP?ZEM;\M\1W>b'a4l)?0#TP7(.A2C,I>[)<^K]pFnXp)=U[o<Hf:OS>%PcrFF8Och+r=n$29>k6FDi0<iTrF)H(1'6F
%HCR8r:r0X&,RR[@#A$8r>EZ5[oK3"gIkgVY%="<+X?]OP>iR1Z)*1-!i8b^!.?GD`(Hi:b)9;r(lGJVUWe3Z]:>uTZ<h33D>iS;!
%6/@-EE$l^4R?Jn$\N>CDr'8LEMP4RR'u6YM-+J)"i1+[7A=8G`Ij\n+:sLm!3J5eL'Ed^Di9<:/H%`u>'JOE]inU`dL]"W*>c26D
%hHdf=2(X2&7`0RWU*LjZSHLeJ7dMU=`];eh@81](N(Vf,/Yi-F[udUNNM$Z$R"`^=:`:<^:.Jh9miF)*/d)D=<;/K"f4k@``aPj,
%\NM!69o[a-K&+B`gnG"MEV[WUS;Bj,QcTj[$LNHC$`]j*QB8pARM$<cMT-=\O=JD1lA?&X6BBRb'u5PuOCRL3SK7C&A?3eA5^=0e
%='6+jpf:+WPAsbE\u6s;(_iST?qE^RLn01"g#39k`1p-WB=&'"EiOuK&2:a;">XFV4J\/`X/ZR4cKR6<Xm*8;POC9@E9loS!0Tpb
%,DkoTO@j7i?i[G4I$$0Ph@uUZ<cPuA-X!::;#q`\<MoQh2nTk$?,oM[U2<62o1%+fd"MnO)la@l"'!;EfZ6r+1;miHY$@"OGCu*Q
%Rmu98L_/nQQ9g=[*P<_4MDLMI$s/+D/HA7B_q,T<eEUEd,A5(:)P_om6#dQSEUK=]$<pBH9r^m1e:e`Ns#8VD;9!\u.3pN5bp:(D
%kO@W69F7_Xi8mi)W"!hd29:iR7eaCRCcTI(@KVQ$1Nu6"pem[@NCmO%pl&&sco"[Oe8-u)D>C%9MGpM64Q\cG>`h()Eu!j-V@n9Z
%^cZ4VjcOt+J9TL!e[Z&[G-FXgc*Iha'cb1Q7cIUAM\hB%0cUfOACi#*R53nQNfa18dL[Mn2:T:6\:>0k*cG4YLgVLB7=%RI'Ls@u
%9"%sA/"3$4R9g+O8B:%al.+(56*K*kF,p)]aK]3&2!uT]SGY]s]U\Yf6`Z,H<<)sP)*Ok1'\[%VGW=oHqmgU>p\Smp7]fak8$;1.
%;/ahX]3^Dc=5Mn+4L4r7$GrR:E0$^rDhY*-RA9Xi"noiR=hs&0H9bB!"2*Mg_V[-8QY@C="kXm1<4UP?ImKU\/e@4ZH5-4=TC-lb
%r`6_[)g$H-O!5rJHB9bEo4aD6A41I*J?:$4GBg/dKYklTs/<DRIDept/j_gs?1+!`&TZeWnLm1@&?[KD)@:(J<?kHFp]ESiNHcpV
%!mF2+I<<(4c1SoW%pE`HiJQKes2tUt6]7V[\%3!(8!/#+5kYqY>t&c#M#`&i\TW<^*"C%u=fM84l<g5:Iagm<k"d.t+MNoJ:`_J=
%B"Qp%%=d4UGa3Fto\ihogS;p_TEL-d&QKPFl;W)sf!+1-6CsDATg80S=qMaRE$!+8'RV4S+;+q`4Je#/OmrDnnY6GB.aSsPUZCd*
%3Ad`+@+;3blc$VnU\[;PQRTDuXg^U,heZ:;k$U;f7S:@#q]Cp/&9'AUc,>-\85>Ckotn<nkkHS*O?$[L.T'0,?:$8B]9&rMXY^7<
%o.IGNIumSpoL$4LEl@c7T>QXC(f>naYHm0\qIaZk)-g1XnN_Y'8c\j"@s2+X'$H_UJp/dj&E(WJQ-t9%/7ln^99L7F*0-R@89JF0
%5a_c=%a+g2A3+THajsWLi6=e'k-c`<=b_J`hl;&Y.\WRUX_nSY;B3/8FdeWePN%\Z4NA$;*Eo7(A9O]R.XGq.J;ZSpndB!Z_9=p-
%r;AQ3@WmBlp#2QKCI)FD*EdU$g9#N[_?5b]4lg3YB'o?M*e+-+p\3R8RnrOD!&'Iu313])Q.%]5?3Y%_(;-rCc/UB96sbK):uPEQ
%8p&qJ9g6I!I$V781G9#c-qM,Q-HLc_5k2'SiFDnHo4^7XVXoZ!9OMX\0AZHRSPT+13%3qFXTRI8=-h3HH-f7r$LNOcQ#NQ2rabS_
%a@dd3J\6M)=!@c27o7jHS[C%2A"0n-V3PYn2O(h^A;dm(o75ZBB!YMrP;T[m<m.LG,qEW)XI'a.4A]Tn=j+*+Q>&XqChXZ@`_nA@
%P$Ab&#/3(n!bh5fr`RMsj1S.LAN2@!H"lpDqen_%]Nk6m(i;kA;(*,.r?E."$7Ib5H&:T.OdAaJMQHlt$HRb7QQdq5k($PIQQi@!
%i'"J-aO<PBhGYu%M*.4ehG?tu1]b?>)OLf_U!,rMN^FA&Dlo?JLL<GCMCgiVk;8HO;9=gXnCDco,]c#WjVNFZAD/PaopbmkQYH9P
%krRH@*[rca.85)aBSdVS'FdnU2;hYmE$7QN^k"\TA>[cdF?p!NP6D7T:&rW#^]uI\72+k[_)iB5olp]^ne0&;Er6_:R//N0@eA[h
%nR^=A3SFpjg4_uXJ^LH5nj9C_a?6Ec]Z@[]Ioe"'doB[n?8?p4]IK[B?R'&m1)UId1r+H`9<^fW!oHg*'g0G8T?6$)F"BDrJM.>f
%;\Jkk!nOKI9iH![9n:VY-Vu[\H1>7SK]s:gf3fM[0&s)"+D+8[T!AQo?6I7ej2IX(3g:%8#Zei7@HRNPJ;BJg"Gmd+iZj>Tl$,]]
%7H@F1!`:f]oK3G5f+jl3qO[l]1Hlp:4s3VtJ?4md64$tK*^[7dAL1!lOGdmr8X0uL,Y9].Jk:"pUFaH$FRU-$GRP\`(_]@bl8>U%
%2q2X0$,=l404^6;Zo@4[]aY$o_Otir,hED-a('?LO<A'M3kW6A:%C%Z9EZ;[.E!HBigJYb5e(n2j+0G!I);R!))*rkY;AG!1e%Un
%-<0<LU4FtY?CtEHP5pjK]E8(h\%+7LL'>JL%3m>5n3g21AQ-F%Aajo]1sLtn_16"4kfm`CTMEYN)'u&4GrCV-6/U7+H+,:*!hWq@
%EDS2#&&j431bY"gN!-&2eVtu-Q]/Ki2oSP^3tsY2!#6Q(jHT6#EZ:[kiL+^<L/:85chPuiI[;**#:^%&R[T?%"%`o^UE?CKS4K@Z
%#N"_#d1RXVM#OC4J;=Ff]Tl^bi;/XfB_2o,r%/m/Gtil-#%%Lu'6J7Jes&M55l;18$,]q=%>:r./O'F$B;1I26m$\8qIgMO(XBm=
%OQC#p%0]GU:j#c:<H@B%"Kj+[64)=A(A)M(idl^POqgOf@=[G^=0gnGCs%J@#oUZ:H,3VFqRJ]e/'dqY`j:V>TJA,.n-#?M^r/1F
%r"(%;P")*C$n`<P`Y9%Ch5EXo6KV];dD_K/07JjG.c=$B6_Gak`L:1n`/*Gb+@It5)jMgO<[<cf,9nD1XA""m8BQUqYE<rWfnoZ\
%7u'0j)%?=o2rr3E8Kb>!S2fbo"Khl5)+mkc?Au5oe#OZ,nsZWdr49\C%45D&s1Gr.+8KuW"JnX3+@T3d%G]KaaHV6hQITenC`&[1
%:q@(p<[%4c+VupX40p&*ZZ54HPTq(Z=m;ZiI0&bc35C:pD_@:X^InU(_4e`>_ki%7i_lP8!QQ4$-r#@EE-9R%9V)O27S#e9*$/(7
%;V_l(*gJ-.=(\Vb-E4F9ft#P+noH+U"_e0DAj&_sZBPECM!dhk'2#Or8QNaZI\sJM7:!]"8<sA"D3S&)65hL#T27Lf?XqAq"Vq/r
%>A/``F+EHs+S2&%A+UO^>uGW4Jb2AYHT4=@'HB;I=u9ZF90g9/LddiNNWoFc[%A3K'P9m4R"R<V"EWB*;1:dn"!QLiJhG%r5<[6q
%M`NN5$\iMB35FD)`1RZ8!j,$b:7-b9mD?f?7e-t8d2<OcI+"bHEpbYTXO,-hLke$ZMrq[fFhHX'Vc%1gV0\i`SO3-QR.Q8-eT7@.
%+_[PLjLMW:m\U)X+7b",B$s[,6]2g!AEeNLn0O56;6>1D=^3^0k6'X8F'c6)V5L#Sc3q^*SQatAf#jBW5XqX8`8*Bi*N:]</kEug
%F:SPDL";MR$-:6T'S1QPUkB_irHOT<JtQ\74rZbQF:LSK!44=,>1riAkCNSj9<4"EX3<\aS)_"=JjT#2e?N4R$$=lHORH:H7@8'E
%/CUX-+_G6Hiu/DY6?=I>APUJ'psj#3be4jh)T3O*U]h+!1Rb3$G3Eu)i94o.FDq3`/4ou!&-.AXk4LLf/d<2+1b`MZN*6@k2OJdp
%N8>\TUT3B['+#W\0>$8c4H?7jC#[?2E-?ue;-C)gigb=PV\3sK(s/afA>ck6Sb`\/)VqH0i!#5L!.)''_ML_F]F\"'rr*j;O.O[0
%J=ru[P6;P_9aP&=l3RW4qdI9bS,m**M@Bm)!1K7qoiN[hpGsSqG]&uS8\[u3NW`%d+Rt&Z.r;X-+Q*7BnR*h-0kA@+Fm='F6qO23
%dW+7La"%2W4abQHBAbaj69cLkrh2=BF8i0ori/]i.iB+&1,RFG'8`8AIu@j1UpUZ2Dk'e`X`A)TQ18T/h2)-GpWJ+Ka.!:;J,Trp
%&*WS8Bg_hcVGC34Xu]iV+HuhIUAl=PRWYmg)Vu:M#&X^$%&Bh*<lm\J!C7#.-8N(Z&TA^`E9PN8kTi'(>!l4$P)MB"#aM1Meu)I<
%djiq!JJma@F)=-DeV)O2``H0"QdjA>YK7M4K<.K:lWjRuiYB&eKe$KF/'\Of^qE=b-I)rVA4BZS6fmQ@S]!E*hn1g)#:&41X:lG'
%31Zja11]XT`0"^0#T>=:UbnM"8:D#BVW5'V_@&g5a4gbY3emmAIfPoN^*).P)L_$H8d$*o`'DUD6DFtJ4!\3^YN$fMC;stFoR'07
%)GEpsoTl*5b4o\]>CNU`,3OS^I1ZGD?tA[36!Nh=Xu8WWDoEqMLEJ_>Ee9faX2R<>g8ksRTYW/dnJKP"$51`>^,ZhJanD>S?`1s6
%ECck>gA%b?XcmYkcS##.f`l14*`ZOck>t(n<CN\oYel/uam`Se!tsc]`(F%$ifU@LEi0u3"A$L4Vr+Y(TX`''=_8()VWbIIHS3^%
%^ODC_m<EDS(\cT\[t!A?A,,a-qu-_L78>'<:L'^h3ueC=":L0?>D4i:*ngAf\&ak8Dr;GK5):c*r7=gtPhYlYW(n3Z<5(`qG9-oW
%,]roBQ2fji%kCW<D>JX)e:,^Pnu^m7#?9$,PQL\IgZ1A@OIj=FT`-$W56.203t$\YReo&ukBuW_/U%G'-N7g]nbHGO_-bKJgXH('
%Y?%98GUKfrY>2\;%?fi#B[Ec<8+g:1XWAB"K0f;t$K`GI&nk?`[bA,T^$E%GNXR:brn!@Ir^V61XH,%X6!Pl@N:*1m(dGUmONUV-
%q>W!8M0??-=GTVRmH/n[[`']mVWd2WIsY;;&I<e+oXYSCe$qarW`?4/lf;c<s!YCrantP2[XXc9s8DR#gT>5hJ!.G\PP'FLURUr-
%>B:tbpR;):./U>N)`8EUb\?mFTaQl[HD=?@PHQo7oVn>[=IAtHa:'#;rY)Q:;]h9?&5)s/=L"<YIP%@r5\o*PJY'%4?8P*rMK[:0
%VWS;uf;GSH<AZ0aH.a*-ZT[B2<q6hU-R;dN7@\"Z6KM>ee;*]o,`in":ml0+f#qpsW^fhM:u#?BLSO^=of%:?YQ)sNV[G.Op,O4U
%qW#t)]qA".-jh7S?gbXfTeqcDH@7m`S"baUR8@HU4UC/%5O+A/rEgdimWQ.hC:?Z^\ZHTD'0R$^r(OZu7sTndaE:3sg*\/D:USdq
%3,MX2fiRLK;QcB$QfEP*<qBIg'R%X:O(kVLrSD5!?+Jbu$mJ.n@Z3f?:N1FuKYrNc.1\n5??oA*<:R6,e*sS1^YB(5%U5KD],VBk
%,0Q]C'+bjhK=]51Y!m$1RgP9MHX(2\K2PrqNdPqqeW1ag_&GOsIU:bE(e/dM#H2e9TPUO6&>3Df.!LIF1AG#F0*'\*!Ip\c^*NGi
%:p2N'L&c.!!qo(V-.j=LZKA\ji;,fg7.CY>dHnV;IRKRPp(@V'M8hg^F-24?je.Df?F`$8%=0+&'ODUN'VF@dZ/W[Bg#I81Fd?f.
%Ll^dAL"KNVr"6Hu/AIX2q8I[WW&t,T+L:hdB+;skh\Wrc--RPF=9o@.J;,i/`Y%^<ZHF;VQm4So6j>&DB0`4HKV3NIm[Vd4N/Ab%
%DEYeDH*8ea"#>FrBgV$`:V^R20th)1q!hE>A0W3=,R3Eld(B@RnB,jsO]4%H?@8u0dEmXSLW!?2f/)gN\G#O$8Lhd-VWdA!NTG\_
%hPK_q6;5KWR52t9&%m(`qbM1.81Y\gc&s'P942oLXHXu2WJ\d6;V>(oY[k0e$VOqHP$&u><dQ%6&BBCc=BI[9*1lCCC+T$%b;R\N
%/S_@e#pJ50\cd0ma7:X`i'g[+*4q+>l,ZI`@<`L:OH-EN7CErWMGOS@C5?i]>rp`&B.QR&6Zt1HME4DD*+Gs"6X5Fd(_)<_CF3Kr
%>mtsTA!A>*+lHMR$EP:/L*:SiM.sP'[Q0X+STUupi6SZ+'j.oP&EaFpMZGJG+n:JUKH(VZ6Khl5$6deBKN&.#dmd`#&:nsR6")_e
%=;)K27Y$*17\#P_`%".$=BMZp$6_=K"sJQj+FtP?"c;'Sl:57,;IE4(?q3&9%IG@?14]l@!ZPGKG*!BiO]Gk"YJ:>PJb=MDNV3E8
%9F*+@"?U?+$6'W1\0S!rFG95*[ZX#%KI)nC?32(G"Ek1g1mV*!.1k.)/Z>aFYkad(L)5s]BEFYEMJVQ#Z6<1Dfmq)&ZiV2H"?"-R
%fj3s+,I!#c^h-pTRkY4c<[b14R`NKgOWCjKORsr3n7D2@OU^\%c^HMVR>>Zo.^H<\%*>OqQACV*K9_eE"tNP[WFqDiO\M642A[!/
%7i'd*:Ll7TOWC/bG2*baKM7UsfOe?mj.=?SBHh54,+CZO+euI[!hSf#7K>.g@q%rFOj/9mOIUqT6prp^&D=iH$EP<%+[?GRRb1J'
%AEt4tNP6SuMM`SISkU7o2GT'E+sO>1S/;kQfTAr<.1=el/$^m"A4)e&;OiLF"ZAK#C^),<(ca[p-m9HT.mf*#<Jc\^&t>%UXI2U&
%`Y=TGKa]?q\1P!rLD3X/YfVO=%[dqKjWlb,8ZZ>mSe]PC"`YCeR<0@4#G[W8C*&%&8U,C]kLg]kZb#/LTo>6_cXrJ*Riej9B:X]g
%a"]J@AM[<:-eZ/#:%278B:Y*k9:d/*fkcpr7Q0"2M[>sqlZq(WH$5S:fb'6eFImVs2P@@d36u1U4I[2XC`UH[5s1WRZD!IpF%/(A
%na&6WZQgT^FL*]UB+m(m9d+biS79YqSfM*^2E>:M(=+=mC^%Y]#n^B6nSG>FZO%[W#-`*4BCd*d`+/s%cOKq;>Ca$lP\2d(SupGo
%dXdr(#UtedGSO+$0RMI"Rb>N;=_s%*^k<DD+ls4r`3;6%"$'mAP+a6Ka'ln"1:P<r@ejIoZ%FLSLWpqYg`_k^%'#D`O.AmON$i-_
%4X;1`dgH?i)[TVf@MHXJ8(Mf"!^gR/g!hoj?@d[Fi!N&O6h2l7E_%Oti*otRAH&-N*&;stnUQT:Cg^ZR,0N"LR8$\Kf]VUgTCKH+
%Z5F`3]U4I-KgGZu<rL@2S(=Ok)in;r*r,=5+O<(ace9tslB>j:!hN,hGh0fXehVM/S)W+cMe@e[4sVRbitfsq4._G?4<&D;&D(EE
%.F/nfc\<<$A-`UKGLkSp2ULuq'C`(6nfdNa,`cO^5L5'GSrN%u)c-6jiL14?4<'Q2G0o59M?c&To5$,?fjU(Wj/s"1p=\u%NJ@QS
%I"dYAb*n.uZ3\8N.Y3S(6HIAd8/,U0Pn9+lYQ7E'RIt0W-A9UhZ@e1QL/id6cU,_:&2Fa$!EifOCOlpq6C;LT1_cZS[U[D>2='Z3
%48''KGUK^UT>8%:^kO"`9q_^@@0G/D"kIGm2RsE%Ih^PR:'es)g#Q';=la$>'SMQNJ<60)[P[."g6`DM]@jKDB5;gbc2W'4idhUh
%F4j\"St12cfn+ihX+*=/1(1'i6]+!Lg4Bj'-3u'Pf[>Qd=`RtE.R'XJ%4RH-AeRMRHaY2#fYI4pVabrOBT[E%T?=#0:RkAu1@#oX
%*JL"0[b.QL+m5"?FuBu&*<%ubam]#j"=;Y,J"<7nG5QK7P0;2r-Reps.J^ALnnY)_f1H?,NW8;p-,5a@JqFn-cQZ"05<SK4Dd%3b
%CdL'kP*F3C(0R^FR0Hu.r?c'TpqM;M-Y+uZO]A!7q<eD%IR<28(Kh+QR5YYG]DjaPmP;/j9R97t\'Wq,O"IqsbfGRAgFP*M^W:0G
%5<4cHU;+ZZp4$n,0Z7]*K1gqBCCadU+te+'7*$:d%ppNcf]'sOTF328enP,sf2dPU",0ut&[F/+Fp1@V@aT\E72_#c==n^\`a\7;
%s/d)^/@OCNEZ)r-95l$jMhJ1SrUBJ)5J3L&P&1/^.srN'Be?dW(NQKJ8-uTKeLui_(5?*>o>:rl$XI#DfJ6sh,re-%o!m>[49+C<
%AB8mY5J1O;fEFYd$_&<k'SVK5s5(qX(0aE0YIGG6f6XU7li6$lDMXGQ\ie7)q!7K-(Y5e5e(e7/-SJ7o6A!'=HH"S^-^FT_]WR6"
%aSi<UeBJ.=EiE9D2K;sF+$;.<hgJhoYELrZNXM+ss5l*qJ"<1qm@&*Zh0bi:@Bi"1eZ3os_dA`N0Y;d>G2VfbFkM>XCSAo]6>#)l
%k(q\=nEX=pDqD2Hg]]p?2P2)_".,u]g`SEMYC:CD_Y\VAc@J_3MQ%PQ<nja*UtW_5h>\u\W5$.Si8*7R$f"!,fOmJ;St#YQ?6/\C
%O\3/imT/X\i9@j4'CPfr+8#(`)ua]"[k;ZnWmtl.,>i";X>cS/rp0@u^RhY!5DRWnce%sbI#VLZfD,#dNW0DM^RhY!lhMJ!Im.3A
%$8DKG'tb)4EY8%KO-+Iljui$?qFMD8O2R^)np%cn8:3u^ncXh'HL[,6TstB6abORir>%Z=45"QodU0n;qEW>H%H<;AeP2mLHrJaF
%mo<8Neu2NejHt47#:2(V^Ald[8AU*]YOrfn'X_,B]eZpBV`a_k1@=lKE[JV`LNP!s9`4,n]l+ET2dg4H)RT[nX9]%AecQb(?Ss(S
%FJtE/_g17?%VdGo-JIR1Wjuf\5JBHY"RoEd+[2UhX%$2c%7c'AUfqCb4Qq(:n43lV9PrAG%=AXR0LCN17#msL^Y'S(4g/"8!2An5
%BL_d`PcpoHGag3Kg'6@da>D5f"?<KKgN?;;?T*"Gb;4,3Hc+DNd]W<@K+rU`a]rG_<>4.q=<DtEma(-@TlTQdkkl?1E(HQ81._)n
%CUE5-+?$=OLTS%':_hq1N,8YoI4jCIO@Ce!XY?qq"n-dt=3d!QV[Xm?f?t.rrg\L<*=j=I"b[R*nJ^4\Wn./A1Qt3:!ZG5blAg8,
%T''*pj4>OW'+dN*c'r1A[*.!\3K5KfrB[4A:WG$%;a=.;)AnLgNWT(Ug)Tou4,@S3EI6b*S.-+bTW[!UfIC&2`BJ4EK16@90*9k+
%eb1)Q'F'H7VeUGN'r59GhlctOKg(7Ob4$AD2>AA'<')OQlE*![ecuRt"0KUZN6b2X<I@7S4s*LP09Yqb1jk+J8tVI44r]JFa>lqJ
%0W;JH,Y8>:j35n/V.!9T+lWJj[Q<NZqH'i^2[n?B-LiNjR+6R.*6Yp`&na*3L8F\t.1JSVbpS+OT?,m?5p%NS^a&+iaa$:F(jK#N
%9V6ARo+B]lIC>]j_cEE>E?ET)1dc+N_cIn7-J8VZ>MVcp:!UZ1%70];eD"=&F*VFgEnQDgl\^i>;Z&)h5pHl"G[\K"1dZh/q5$W,
%UHl="a#9k*L8f4&gRB;G8@.P?_lAeTF6CAp_`:Vj/]Z]4=)B:JB_5&NT<naN4Setd:G`Jhr)Z+]r@l&TMrD1,;.fT9ZSec/*M9!E
%Y?r5ueRCMagn4g7Mi9cUbR_rS@9%Yq$j'Vj'$,G;:6$<=pt@8q:,5P8!]SG6L=gUtl[INc6fe)4"Yi\nlYg?^Cu)`9D[=</eu/,q
%_]:>/S\O<`%d;%tP#n56qEQRPN7%J([P*B5q:N,YY13d6,YP(#or0kRi2L/H!%;>t@7oTm.!NH@hdd3AXQ^\QFN8`/-H)I2iO4aL
%*iBfV&^qu\T"b7@Bm%P?)\t$uJ"JO/'.WSp8NO-+7jg^g,;Qa2kou`[+\U@8&0lllYOU[0.1u3_o.\(Fmn^8/'doTOaA8"F5/!I'
%KLBJ]_8]9558T--/I[%#TeRF(ph<D>>YE=$CT3YaCT._lEuP(jSl(DZk?5VHf@YBm[_juqeV%%,q!kE/G2%GZkPWFLdK:,C!Bq1f
%Mu%SkdHX(fe=@E,Yh]:WPejSa[*D=2K>`3>&Mr>8BR\N`m9H68ge:2)j'F#:3EBg@.<`o5RjKCPVnG:pr!W:-ZSs<)!d6`5/VNZV
%Q]6am2k9+AZ"\d\T.aG_rN"d-e-D!0*"n1[EhKGd10^oP(r]0$Voa2K>-1P[7\eAt=>(Y`0@@E1IF6b05LOcBo#b@d/2g75H#`!u
%)BIUPd8fGp1;/+-*pG9Ro^Qker,1;s<tFp$^]49p)NDL8dHJU(;Dbt6]EDV"3M/J7g]%@4;'A*4aRSb2H%8+PLALPnL+b%nn?Jc0
%Rd'YlV.d8n%HR0Sdq9Z7XK@VWg"1!,(k:t8T;JRS*8o.ag:263h8Z'eo$br<`'/QO?UE\_L/rP;^pj([r[\)=_mP`6#sU>Pe^ER<
%b/]nUh_rfbHT'=kQF?91+]YsKQcUCu8b1r@SZ*,`n`LYd9P.Z+5M,Eu)*W/q'Uk9fq+8-EJMosbp^QR`j([t#j^.11Z]u04AFE]3
%,:2I_2FMU:=YNI?_\G7KD?qBRoquV;H2GEmX<"EF-Y)\78<(\h"Rne]#pU4&$<Bna's-MPD=7(c^\mutec,+^XXM5l2l2bO],.d#
%Uq,%BlmH&/5^1up7AC3n)NG.`547[\^sV6E811j!Z;/&oS_+tV*s8QZ-dT$sUZFC?g-ugJ^VGueV,+<fN5iLY*baQn=c,F#n*Vig
%bM'e4RGE`lKVJ.hgZNXpgAfgKY4c`l%a@N*ebn(&D5KPd>%YREI'DdID[8?GK%fM1VpXbBNU:"5GHN>Aea#nEmq=eF4jET_c\&6d
%aQDkG79gm8s8IB2j7jmgfH1Q%7nVUtD54V/mUfX@[1Rpj4-07fX$/XBZhFp`9Q-Q:Ir(Z4&sCsoi30$A3ShddO3Y'HDKBWagr12)
%chE*\e1VlE>V3Dhi66AU/XgO%V4sto_hMh5W]<95Tg,6G/6s4tmX3>/NhajPR2$Wq#!YX*d[@M#Td<W1<[7Dg>3>)6rj6,TNW)Y2
%q<quJc6oAA83<S>[A3J0e@LdXGR'XMo\atIPV+s'Mf1^07H8$iT@&X8I=i@ueLi[u]Qa;\J&UdIT#U`2ga(X2oJ$9AiLqM8H#tpT
%[/.-MNGVj3d:FIuM6<f8`N+@K14$dj2Kp!D5A38Lj4Rlp\oG$>MC'sAbin3^o5uncR!k$m.`lpWl`IQ2jZ8*R-pL\s;)'t4Nf)jI
%,q?+d*_2L?fQ1$R?Ns@ZI4@^/><7XZ?U^T^44Pg\.D!!7UIP"PO3aR+f6_G`FI,ckc0YrjRX'_&7'iqHjeuJ[9Lk.EqN'%ZGs<'-
%8WJdD^:a"L4Zc3QUP2\o(VQaaX_9G5.RgPNgT0Q2pjFT;gY9qAmpGdWM!"7$8rZ#AZlc'H-$_:M\\9UaCUa9(BVW#.O#D@H;=n@`
%4,S3imlmM[o@.4@Z[23\*Gl-R9@7!i]G0\$Vb=(&CisI*H$cr`a;f.lal1D.&pIO9=VCPZ%\Qsfhm\Z5['R15V4I#Aj3mp1H$:]#
%\GKOR1bXb[p@F-JP^CQ\Qh$2-k=b!G;ebL%IF2?3)I8\qmPk4=BXF+l?Ad-sV+Lth2g05Y;X4YiFCP3HV1(_R+e$g4PnI:N%[LV*
%dQoZ)DcL[aaeEeij2F)3-Ei;`R+<\sA%Sp+NEH&JrB=ha*M:B4MOY^1hgFe0$BH!$XRs5nN8;J4CU#8#^D&17b(EgpXk8KD$RbCn
%-J#lS1h4F'j)')+r1L=-[[DDF:-9UVQarZNpLQ@2eQLHF?TshN:\rK#N5_tP+,NI-q)!(904/T,pQf_qgP<t5>M"SjnojA.\T)rD
%>lJsgNgKX<_ph;#B=nI_<`X.bngfReg>`Ni<pm+=,9sJ!Ha^N#@WIIfb$jn9\T3#%(LJVkWV"?hdcbl9\c)'/;L<=2/+5-pKp@+^
%g0'Edb0oS/8*sbC[G'lK9'XjMl?7`.=A?8`F[39ZW*GsrT&+p<=%fT`H`QlWLR$CFf901llLMi-f=FPUNg'"&[FO51E\1GO\m:N&
%T2KGd(H[[nk"/?PbFKGbCPBh-K=.3"H@P=-gcSkX.!LNU:-SEX2Yord?o2-Chi"Y8)Z&j4U+>!aHgf[%4_sNAY+J%>>VC5XX6Yh-
%jm%0Z\=[,HS"-cJ1/F4qCM(6uho[2OEAaBGNupIp;t7b$CD\_#5&0WBj316q[21u_\+WIN-N;]LjGao?1U3'GI>D_g:Y+^K_3+Ap
%E?m0g2_J-Xjc-lYrHSJX]Z6"mf$hOVW;#kELr\DE&q\\]8aIEK<>*k5f1;EK>4'8Ql0TTj?5fslhG:OY@^L6V!h.C,Q^G<4fX\?5
%h.5t_1HVsJS*/=1D"I(o+Dt4e`U%37no9julBXVsad)fm;Vb(d8`T1/-@+$WoTIgfIOAJEDbcK<WQSmor-$D_''@)G8m/:';s@m9
%dA0O?f5FR=q;(.3q;gfheNWE0\!E&nh6#c"AS"N8`T4/Fpum"hI![,Vh-V0eDh0pk>G$W4$Fd`eluM)cm"7B]b;OQ,.`Aj_2sZ4!
%>X7<+"iU=2DESMDGlB8.`U=Q%9g2Y@:ALr^.e"0:e)S&1Kkk,YZXjEZhHE7umq(7j8`ohD\D9[r$FP1W'gD5o2)/t`]6N_rX-f#V
%YJc$-*fEhjEa!k:^M2-EbrH#BUodK@+mnZsX4$ND@S+/e=<:',]B,_C'UOSqiaZIDlSn*lI$i$WaB)U/EOhNcj5eP2%9;*60FnkW
%Im$\GF/u7(/rMATV7k_d54uNfFlQ=s<'=QoEJ-E$5.O[spOs-c2X#"V_\s"CVrp"mma4m=43<kQG/(e5VR91Ims==_/a,P"UnF3X
%f7!TAgYC=dlc\5^g@"+s7dKJOHeVka6MNT$gqKgJqqJ7$ScreNQ;?5J*@Z&Cmo\/pE2R50j`bGua(mc313^(JXiKMYFQU9E>A.&Y
%]4L@a^AHTnJ)*a=gh$3Q2eqlrZZ<C`pN!rpZI_=,`Vn'!PJR6i<I*:_45%^B^YGHU$1.CjrRHO21@oLiIl;O43:H#<#A&823Z.M4
%H@"oTE%>e(i``q'^(O/l3ZibpqY]toLujDXOfdHQ))lIm%HDl=gbdW+5Mf-5@b`\6qV8l62@j;0Io&i>RS<!_6d-B6IQpaNNK,fS
%b2Kb9HonK6lM9,[3^-?9XJ_Pb@J*u'MqP5_rDqM!2WEDja/G,;D0544[@?oa]sH8=mBcZ0Q!HBl%1f5gn\%:MWBD?cib+)0n7e_F
%HMEna%urXJ,]dK2"s6@Ec0YF,B;>EkgFSo^kDXZ`4a6Qqc/daS_ng>?/=[aLf40Zt@]B0Fgq9fYT<+YL$r?TbT<D$ClX_)gB5<`=
%f*6Hp]beKf2#6."Z&rs25J3W.q<7M9I`os*QEFE.l+=J>4\M_lbqh`/5+LHMZ*Ud^m\=or3jj1WX_1BgIomV-Spt?:ed=aM*%U([
%*liu$dIZQGqU??hBQe=Yi`oht!AkUPKG)%)h^WT3#NE@AH*(p(>^"DqNf.-7eZ7]gen(]QHlhaCU.^Q(P#aWr/JY_GcV&2O7ceB[
%H6'UQ+&98JmYg=fX$LI_j'$ogj0)7Jqkr&*ea30-gal'Jk/MX]>i"1N.n_gR`d[V^3I6"d4\r0JgqJ3,<pp[)bNbYkFB,kuH4[I\
%BXu['heqQemRs&(^&(P_Sq#Z;_i9Ebna6.Gp0?:#N:0cAO-u9arSqCa^],!r9!&/`Vk(0]b1"m01&o`R[FJohXMg^VU\Bc2QF_)/
%P.J6I^?!jjoqcuh9YABAh"WbUjZd(D+%FfOEj"t85"K&<Pjd(T@X4Io>Z>l!$\c`GmCH+3CfE$fg=b[.cr>ojrh8%-ad$Yak1b7M
%U<3p[Sa2&U>rq-/H=?:!XLBuIQOWKKZe@CR\K*Um)JS_9'ZAe]H#`N=m:4e,2T:UB::%1T\Sei?#(r66(uK%5>\u^4\n?:^9])+%
%2>:F)9Q].gDn3OlIC3AX\@)h=A,+n6[s,.p>5N3]f/lX7Sc)<0\(Kq-$heRaD-^N7B%QguDKUlllYWZ$;=F9N]]h:(qn%9-4-0%B
%`L#2*0+g>O1nWLf^AN8?.k_@+@]DU_Vk1$r0,s380YYu^s5/7>1)C"W03t?/=QE.,3pXj[;K/puBj5EP*A[Rk/H8R3*OeP@I_0Jk
%9n]T01P>h#kJ7<D<JhX$?DS\l=>lb.e*E(YFOK4qi,Pq53N%XadlseW#sfJ^blZsO76K)n_`f^6rD>d!Zt_6re1X_@9*aX\%uK,3
%]sXF%mH1[`HCctBK>UH*qlLf#[\K>XCRJ3`2-a1bNj;8n4+27]IjuITk9&;Ndt;X?[Bm`L[K7)$ESSoe\)'$Rjn-i>C*UF(fcR)H
%-c-Xl8ak`8"1QhNaF$(\aJX6YH4e<#rMl,TXh?I!o!LPEW*8o;[X*E_ZJM3IkruWaoiZ_Lg))[\qat[@>LN)%q;,Gi!Ami040F6'
%>?:EOH@>>QBTt9Ole,BmmC&Y8]-$`FH@)%E,co7UZ+YTgCB,7s0DkG(Hu([3DH*^\DRUQsF-LC=p\]\4?<=6YTDqUR6Gc1m!R\g/
%o@n<s^9)inD&5'ngAA0Q9ZFZ.Ltcre$u#;-ogCZAPqU]E:$H5%f2rVd'B\!1.i*8/G,@I[fY9V125,sXJ)Ie:,2:0t.;GI/.]\3Q
%o':Jbq7(%F<t<fEK>cg&a;7oBOb%b'kI?A4!Qr^\;qgG9f/ec%e"&'=>5)26"m.`3JZN%q_eY@(\lMmN7'<uSb&!>/ao(D[H?-?0
%[ad^"no0q&8S<(UZ((*W/n81#jW9Z=^7+:L-[)\/&)0Dsp-dj,G?9<kI:XXXC3`WnP`%/OC>\rF.nRcHYA8EDIu9e#>NO[@4.<Z$
%+;tCo4;0-=$)$6,90%k,8F5*CcF;W!lj7O$g!%0.BYp=%!t2j)')VRZ9u/l8gN*ANm-X5jhTqdM2EcouhRP)IBV:W9m#geuPJFBj
%?"0kG7/"`"ds<1s`d%PU\Q@Xg7`fsP=H0GHcYU/)[VRFYX,GdYlXes%26.ssYZs=K8qMjG@&QkF1$DTKcecAWN'/Uej.3F*k78Z'
%ekQ[7>c$9LX@=pK,9d<$j`k6![W=gDKTH4/p4Z:IS'p]/SK83.=46g,blQ4T-FX0dBQ.H;@J9?VBk^>J*Yc:<.]Q_VKkXe$DnKsl
%D;O?6j_acPjB<8E^/F3lG=nVVUNAU:ZdPAlAjH!kp2:15gkTrmdV#Rk9T*Y5WRpP1eUBX0<%dXG'lJ65WXf<'*/oJ2*[Oc0SiH:r
%`lg)4Ci23-C88tDUo`@`>'?V?eZ)[Jm$npUcfV3tBcLn.Io<9!R9Jd67+)W0*1C_Un&>U8N:JY:+-g;^;afQFO*"Sj[gkW'l@A20
%QV7I#NU<2V9CHu7.X]tj*VPgL\t7Q:cDG-XP8j36RF\U=OO0DC-j]?Fm`=R,VnTju!M@)bUQM)op5\U&?*%t*&CX$,\rtr1*50i_
%7e-0(g1p#WgCun_m78s(VnKS3FX^D#ZeEAMT\3%Yfgeg^rTn.b9X%T`m9<Eb=O1#45$)"u`)56")Q$RXf('A&pXY;HG(1ahm\5(3
%Tl<_(0:Nn0j5dAq`>%'fk\c$>F@fb$cf@;`r59/PZ"c.T[HEAiiR5/AimB)]"9NPO%^%*ZVN/57J.4[h7\2m>%2`+VHeHYAFUnV#
%E<@hB]:@O2;abZUR4`;]e<%3h2CVcV-V$aT2_2qj;8UT47[LP:SYfK4p+_n#I6I@c\oX\&mRla0b*H3j]">nA/$S<PI;q-UCuDc)
%Y$S@D<&n)0$1[,$M]=#b9)%`B'%#S)%/Bpp38<oD=.[S^KkB]:LJSo3"o-4*posquP."94$O-I<!%?/2r\0NpT\GaRDm!^aoeo.I
%19b@A*1`C7pC75gIA:H]JX!6FIfG!@fNa3S&`E'jKEuFe5XS@:K#'O[9:B7^%1Ne$X<4rmi!u^l5W0oV;aa)-#TD[`@Ef"ND^g-'
%BOKjW@Q=+Yj9[S9Rc&FC`s=LG)u9)8oA#Pb^5L/qUPo0WK-9gV,O2@kJ^?u7GhmNDc%>!q8Aro/]_;&IoaqW-62DAp-E[YKnMcXl
%e9%9%V7)&1&Wf3B"9@eHT1iEq&^fMIb*$Ck"HZ8:"e#)2d-cQZ!e[k$9lTR:"-E%u"Z/bgJMd%>9m!;1j`;)El'-SQ9)!bcEk*?:
%'6#>K#ZZdqZJY3bha)WE4!n?2$Mf5Am$TD9F%Z<1HZ<_>KKIk>$GeT5.SDTHcO+<C?l&d/aPj:7$u%B]*&o918I2XPce8">+rP"u
%GX1Z.4WFbQYlu==,%7L@I$u#g?LI\+iPnCJ>EEJ0qh,rF)ahf8i@H4OAk?JN'lqF*F)&O_"b#dSfh'p,`WM/dY'\HP`_InU4sDW]
%GKQu-:H&X!:K6F:eUZ'/>pSGcU>^6iCKrdS:*9^(ktd:P7d9cF$W-VZ_j/+UYR#M[#p`@-Mj7TFAQ7ASmr3to,("`bj:8T>AO#:m
%_BY/S9G_lgVPK0E3>NkHM*NZ7lVLrZR*$>CW:>YIl4;5QZIGHB]PWHHbK$DrR:Ia4$6$$jbc0:VAj`k!%R-^3)Y9eC>]u$,7WF[Y
%A/"d@ouWtG>Z4A_.t+l6\r?Li,K5ak."*#s)7/6IJXm,#5h1h8iZt^YKLjpu?<r_Oi:6Tj3Z`+ML;>S)USjW%EcZ6hcuuhfEB$(a
%&"F=kYF(DS4Job`-P]\H?tSG1n;C=.#Ye=&T'@\(j'l-GC)%f*9!b--=rW:7d_f&S7M;YVqJDqcbr&JC*1[nU29p()rT5ETH<7Ou
%)P*-PaM^#^ONIJP\u0jWlQLgN5EU#-mUH'ML%Za6&?[3/=:5"#*CP"U==N=^6-=p@O0NW:-0#4E_hGW#$MicY>,I^tbA=T[pU2)j
%JXiqmoL1W74FM_^UhmepT9*=:Lo:<XMD:XnaA^!#$oC3U/V.l0R]1m>pSl./Y#%)m?i/BrA>p2<WW#aZaT+uAK`1bQY?Qd+C;]t*
%B*F6._P)'4%JM%bIgiBX>cb+F<oYYqU,Ir7[4HGh;I/<rW7)%G]Y"#+HD#Vj/uI@K:E)#MgE"$9.sa]1-Et+m]_.qsebl[t;+LdJ
%GF^O&?=J;k@U,E<YAGdrEtA%(hcn(]*VEoI.<,*H9&Hi>Vl*1@qi=jVq&%p_llWsS\G#T[!Ze.5b`C3Ue00O#n%@C78b?hJ#^]Eh
%^boeD$A7*9FkRfF2.n?/qq3b_ha-Xo;:F1\U38]0T=RQ5>aIZ\$mddEF)n_m'lPlhaVTu/7e*_V%_C=4#jJCgmd";"I4Wmqn/Cr7
%6$#"4Ras,7^&f2iE8)n>@J6PD=4003CT5)hT-1V0FrKDX]2?-hhr-i)S)%t'p1%8/MN3j+XIc#2dG&iJ0e4mJ?9?JmK:oGV?d+^&
%IoQ?_N<R:'[45(fkdrPU2PH]^+9k")mD4f!g,l_hh[>;>];H)RjIF<uSEk:Z-N\8Y!DbWF025NDa($WB=\FpaBtQ1$Ub(3TN&/!N
%-CF.Lp0-%um7u@Mkuo+SCc1P)Y:.qp6f=ZGkCh<R4W+KS_<d]\b7hG-R:MnM`I!^>jY31V:`=o\8)O0iRZupdVhW[VgGbb,S]4Og
%/\QRJY6:NG+b<BLkS5k+mr$u27g+'E0R)5jle/:#We(`LGH?,j4AQRu-'fp-K=_<QUia3/PFu6ko-G7O%[OFS>kc?TPcR>tZZeGg
%jL"H=XVTX\W@Z2[>^]iPJEX!dWPbjECSR+iUGM0p&?t6aY,;LrI;BTM\":$4cWUDbJ$T_\H0F1n[fo6bhgh6Yn]H=6Bl6XT(%sjR
%T]W^3$LRGX>5+)Ob/T0:l+a(iU[(We+)"h./Uo,7oq!4s3l"hf3PbsYNOMIK=jh,1\-C@*fuLe3^O:QthWa>gbFI%GZr=AjhT#I?
%gU15HF/fQ>S,9##l1\t:VQP:`-*,7ZD(VW)_WGJ]]mY@WFtC]@2N05M`Kn4&m/o>/F_Y0Id[sGB6IE`+RF^6Z0YM>,Pa)@4p+UQR
%\N]L<8&m0(>L`s/=1p/PdZ#qi[/V,(_FVOLf^$Q_H2ZsS*]_oY2r206!cpG#G#"?_L@l=/P18lJ.KaroCP.2hW;"[.*d6Se.kbSs
%]@k?XI=H:BKbC8J<gSa<95G=nBj`^dR!jE*<QRWY/,7"Z[UO-UDkAAp#GY7%NDA-L6-b+PGNRNtgW7k%iGipEH^nLm7km)84@/h2
%cJ@4*AkD].4Xn)@LQO/+Wdac@9<Vq4fJL.C-6uTH<]Dq#Z'L7p]:1*"D;,_tN&p`)n*]pgb]]=W%=qA85Lr<EVKB:hFgUlkXbH<1
%E&5>5PQ+>W>#.;Mm>p$?e0`jTciKDR&')_#EiLOtYo&,aiEl6ZD"Cj&%#;7c?"%96h!qe&OS;MqC0%I3DbeZf%RL-mj3<Y)1aMg%
%RrZ;U]qlPaHP:&*G7rBsj0ht@BW^Lof>4V,[(AtA<d2](aSOuk=_@!I3]YmLU'[?/;,#\H^9MQo)ja4#8oN9h+=M(UHa^1t.P#q8
%X@AK0.nhd7(ZHR1Vb7H".I/7gPaQQeh9Bruc;&GU(JoLg@Ri@8H)PefY_Oi]#DoYBN!GfDfoXp#@m*Qp:pm)_]*iZDQ&pO,A$>&V
%L>I;?MqM.iZtQZ8-&=?9os_;AhFkR]3iN]KBKu/699Y*6N+EEB+/O1FWH\[eCpJACF5Du),V-0l(Afe]Fn7)p5--kT5iF(kE@G8M
%E:][b!Lu,p2Zlc/D[Q#(M83L#`S,;@$gSJ$f0%q5V3P]?P?p?4Z?)Oa_YUrWKEnfUJbg"\Eq/W2$]gRj-OoG)@iT/Hb1f^"!pO9Z
%U,\(79)@%0SMt`p`k/Ejp?[e6V?3`ZZiZL^\kSJeGNsMIg0%HUNisdf_MRN7"2WjI>RDqQfl=Z3CY7r#LO)eA`*P)<@sFY@P1rUD
%6#0(Y=aDkc9A4_8JP%$W*EVmR)hR3Agb#Qg(Ztss35-$X$q).=\P?oGK:%L.QNEFh`I9sUd:[(qkM*V8RF>>'(9V^;dEqOB<]++G
%*@7W;H%+d4/ZmklA]q9f-*re;%2lLcK]M(X(=_.IS<bi4b4e(f_m#%$9]H:uH*m)J)0tX$&4taaCUa$&\6h1kYmJAT']ahnSM]T4
%CCj6>fs^_U?:\;2g'+'UC`T^_gUP+iUMF:-]A+PI;g,O:Mn5iSo@eRoEpI8GK3/SbDpu5KGc>/*c;ZlQ0K:/87pPK@E&Yus+Dn*D
%[a1NqA,Gq%kb+c/hPgSN6#52TRsm:]6TgqI@tjf)JDoL2h.j%bA'4"GZtI.\;d08ZXlmqfd)^/nh0r*5EIfVpXW'"O'd6/1b(d:3
%f$jGa'.c6Sm;P&%1F"$obE["p_t`V^F`REPC"7F"QR7sj.`%M.kX-V@getR2kGsO7V$YYP%L(M4Oo7%]9%rO;H>.DZd8/0FU7hR^
%FZS4*!9*)!iOr9<bZ7?UNV+X%[er\Y8$JtW_[Ba,C,p%N&ri!<eP,RCpX;#-l2LD@E86qQ8lV$N?GEkIRIZ-@dFtV#]4/4?]l2u;
%BEIUd->?H_h_3\C>a=,<!$2Va&DL7npM/scBZmj(#$GfVJ2CdgC"ZeP'LpSMh#,gX9fb;X"?\Hkq$-Al3%ibZdo.UO?7_Lbgtp3)
%[]R#(k]DiN@ZHfrnQd$!^&4q:ru(k+D1g'cTVTi?h0aD;ac&Q1U#W?C&p_<Dr7HUm)ol"@[XJO#[srLEpX4O;!Rl+b)5;=M)'Pc6
%1V("#&NsjKPek>d!TZWR&?nqoc!\57Ys(LTg/Y9_[4Q@NX%dqp?\dqCic<L/N]&l*E?@\Hjnc;lO?p`iafF1&J<0*JqmW`YkWL65
%6rW<f[hJR3%B#F`LZ;A6ff6O'CD/%F-TS8>X5g$hmJKL+l/LjqNr?8/]fgqn"'!G:QuP4ojYcY\[+B7gT:cLEd8pg;hWJhc:LZ>n
%Sm$?CJA/ZmY^Kcj55"`D.(1cO0g<"s%Ti!A*,iL$#qDmCjcjnXLrhs4mEos_>1ouc<HI*blR]04p0TM3gRX]SIo=`WccNFhb,?si
%RF\#<h]gZV)*Oa4qZKe^ijuCYhKc[feS_P.>>K05Jl-?^[p3SX2[VE]`7?Op4HZ@MaTY`ER9-BOWfH7_0\9<ICZT.+m:H@j*j(q!
%]#eSgd>,,G@\`d6EQcHV)=lm&AqPkbTsFm@^fBJ-Vd!5IEUo(/i#.,tP9%ELjHEj(ls/"sV_<A*%8l?V.*+9K>U7p=O3)gVH@lL:
%ai2$T`ZnoYFQ/"?"j;?D37kqN.*:%D,645_pWJh&)nsoO/n^d_lEo11<L\VIVf)2,m*_Ap13]#l]n6302dHpZ/g(2Xj&(:gK#@9L
%a>rK!V,6B`>BB7%j"c_4>HsUqXk;dXc+B!^5$UEUBi+6llgsNS">(p9l/%/4hT]>2$:r)4`-nFn;Hk'H3i@3ESHYfk*0n?i#)gr<
%IW`+_?bZ.J&&r#<TA[mS(NtEipm6L]Eo7E[o&S?X[%ZR<hM'_iB%iRs_.c?RER^Vb#Ot::4c)-nW3GUoKh_';^>l2UF6,E2=(l5_
%UT+o]0[BE4n+JNLkMP1fknLMa^E>ii\DiP8a;+9/'EI4L#)=2nR_I%&F(61[MM,Gq>`Kn&L;Z0jEA,:t>q%hOOPIj,!%2dS`V]'D
%HT7@,`9j/EmF!6d^31p;#mIpJF`.@M\qgA+OW4PJ5r7/PpudW8X)SF;YS/W;?'0Za-(h_U;aM>[7s(!,&5e<%RCice#M2n+X""Vo
%(SCh5jLSB_P)6ZY,AJJ$\0DB!h)cr;$4Y]f:o?_'o;k-S(sbn+E:420WMaE_+UM)Q,Sli;0mpMdaJocOK3&#Q]7`q4U!#*,&*>da
%XM4p+iOl$G$q*&Ib&scakJCbok2$cm)g9DCopgL:WHh@)`qbpE0*_M/Dg(Ha62@\shK<5c@Z.JQ8moTVHON?a9no%IUkBm?N[r$D
%aR41@Q[$]m"dhQ\r2ehPeX^pAdA_5\kM1/(E)3444)P3l)5)k_/q5Gu1G\Ao$#L_>@>Ra0V&;5j_0b1g%)oc49^?V;^WMYMmtT\`
%B7eht)-5sloXqPbgqV;Bg0kQlZT%Y]Gjn03B)I!4?&Zr-q9J1@VT!!-9l@h"J<Rk3\lFRMJ8uipRiak,A:d#k+lAss@7Kf+VO&:Z
%bKd'Yk2*%O3X[mHK3kB:b*W..HWd;SO<k*1'/7E$'MgdO[g4>)c8:;FP`t?SCZGu6\JclqeS'5PT_Y1*Jmj/Cj%Qa?o:FQTCj=5=
%AA4!Ui<oE?hpK^ga=%F8SDFT%=<,I>UD:J?q#"5OGEAT/[D^J$oN0p=.*Ya)>4hQ+;@&'rDbJ-(Mso=uri<ZF\gT5rIBWZSYh5NS
%&HOt\`tp!g:lc:cIj5(#H@:&LdM\Y@Wd)Nh\u1J0S,24EJeoG"^(ph<Ke?IKeP"/,Vp[0+g0\B0KVPSVSQK;LG\>dA.3J5I'&GOY
%?QR_/e\JMiTE4_XN&T!:FgK.",?H9(5i,oC_jb8=g2r(AM8rQ"9s^B_]uDnb$(4r5M_Mq,?aALVpH5PJ#\Vmm?rsTs)YZf2q8EKs
%m#n('pYY`OI<"bnXWYe!<QBSA,3-srjnIZ`M][I0h^&q@i!NnR(qIdlOmNEk8a"1)(MJ-V4WQfH4^T]M7QFPV8G:6q^Mshf5ApM>
%cZAkPn[b_n&MD$O1(RM+I,PfC-'Y9+9bM_6W%!<*iK-^s,5t#KbLiGm"47%a?cV['*VTFLJXCj(H$J<m[GUf$mH*fO-"Tf.n?Thu
%3kt]lb6%X6Vr*\iV!9C7f2^TnRYL0LHSf=@7tPbr2W&f/;$uNCW$If/;G3aZ+k0Lg9BP2b9#?<=FJLOdUG"#hne"HP5S5R+*ip5!
%');\[I/0,M^W[g`?];q.CIqnSntH?)CEfbpPcooN)?m<9.?<FF\tf6$D[ND=GS!"5:!?#W<9U+IoG>iSE_=b[+]<I-LmNVn%Us#(
%h'37F5Qur4T_X?(A+]LqK9Z2D!?V0uVBIprl61.rHXp)]C\DIZ]=U1;I)*heUg*nM=[AU^]8ml8>O?S:P`%lZ#T6g]*:VF)6`9'+
%=V^T8Y=PD*XXrF;$)f1@7?u6#i-1ep20.Fph$$O3Ukm%V'%!a0F1R8R8<E!K'jF$&0WRElhu"7=)1`IKiAV#BLqSAJB:?0eKJ:`V
%;k1kL+B:728G!#nIi.n_?/c%cU0oO*08coP^`l67INfEI5RStna_Ro>Ou/TZ\#9D^3nf1_n8MVDJUTd/au\sR1";A].LF%.E$q*:
%TP5iTjb8Q2U+QLpKeuiKPfdtImaP.?,SNio;b^9B8-U2-ZB>h7'k;t&EYC=g0e%YgC;fm4dQBbp;,?N]&iGq!N\ReGO]+An^]P$.
%-OQY(*#BmU.7ksceG8#tKV7ia?6l98G)NYn!Xg-4A0E8_^fYQJ."FFY.g1$JFef/15>qa$:3kAf+='.f8j>+Mcqrj.i\@\COJ%WO
%,05=r&Gsfha!`pO!AZc8>C\A?*-0-iR,g[GeI.9!GeXrX$u&6_o*\db-i2(.r04aE51lIBOn"p)G\Xt^L%'e4BUU',_-Oq4F*P]b
%>QB5Ei_Kln,!*[66#pO",mg(_ga-\89@Ls7LpEb6?U9sG+qkpI;_eED#!QBmnluY.9i?5c&$J5P64O/I^;4n_*[<pbKDJF[8`_YJ
%;$j;QGpgWaPW/eV9an$p!F(^4JaC5^M0^A-XU<.Z.R:5b#a\MUM@Mg";U8kF)2(1\WR?0[AXR.CTIrOG0;?[#4<uK$W'lSC,`0Dl
%TO^>![7qP37@[H\-NhPR.GFp.X[j,Zep5WN1nj;uhXfEhQ`+mQTGCu^&1h7k7CH_5UlO^BJoj:*H`3c51>"3;O^O,JAB/4nYle1W
%Ge.5o;R/Qp#j*W>7q<tm#nghQ;iGAg.E:P14<%e;7I0+N$^C6"Z#gW+h,jc3W'lTn1I;B@]Z_h@?%ND1/#Z4`4:<Zef,S\k-'063
%0hA&j#&-p[k*JShf8o_bLD4WD/o)'t.cA16&0qUG0lV7u8.,hU,,`T"?''gjW]WT-,cnPP5lra\-E^tTe)p:ldr!rdVao=uOkUi9
%!(+%figh\m.:(M]6m*FF<Im[\!hLs[prs0JN#rZQX6#QSOY7o93'(!_\GK\3L857_A4[*q<d=t8]L8hr<)PI[6nkL%%#3g\TE,qJ
%3d@;EkU@+q&R`'X5-"ZX)MDLT-BL?c<?g#._0nA'a=9ukLVRdn5aR8u7)XVKT^N6i.1j;6?lXaV!](+3+-m'aN^:N*"F!37.]*oC
%_h13P49Ub&IA.!rX!g^`i9UY3!P<k2StPX'796@OJN8_N/Ze#GPQ=)jI35Kr/u"PO'qupW$Uc+m<`KD>+D+0AJ6t9&Eb@uk-U7m6
%6HMMkrs010K(aj8bot]f8[K4GVS=g,F!9a.k[*6kE\*BpbO]eHT,gFP'NN$r"uIs.'\%"*lV]PMgl(2W=?3T<ngR_mFkk#)9.49m
%gB).Y],!@p!b7Ke%P?VfG=[f15`X2(@#>pnE)KhZa?A0R7-"q(:B\aS.0VJTOo^3AW="Yh!YhddL#^)WAB[<Git_u659b3)pd9cc
%W1?g!"t.i'!H0(i2<5T:&IP%m-B\s:LBJNY6o?0'=I,n-T7EL<$;"s1'Y6edYti6KaS?,_<TMhO%ik0t)a[5m"<nVTG`_FZ5e%>1
%8Ws0:A;$>\,3cl\%'eG*C*G>\SM8CKr"M+BQ9)%I&]&H:\0!!&,*jr=L)pm=\;Eh^M^m*Yfo9J[<-(l55eS@UW$+of8k`9jb0[t9
%FTPH.'e,qL!Nfdf:C;AD#8e^q!aWo9Rnu4U["j&:VR%JO%Z0,_nA\+YZNkPT&^)c`H9r$TDT43QcZj_S!)Xkf&(6]!($e\hOXpO5
%6nDgG,QT0FHUu0"nX+5j>;jgN+Ch!t1Iu[31duAr#<EP3@*q&H1(sln9HYqf-3Z;$bR9KtS4)?hY@:rT_.aF6e,dKB?nB92(CcT]
%U:Kk8NZB;U4'2Z6Vcj0Yjs1G+lKADigd0P"Eo:`[:(jNQ<R@naaXBR0i8?k:#5#)dC).CLS?A+U5Mk768![]-%XT#-J#Gl#5aD7r
%Oe12gP!EFh!^oQr5S+,tc9S%Ac4HXj5k4;SCRKI$HY/LDmbD+Hd(;*8,5c1nDKd=!#eb%b(RU_O!%E+TQXJ]Cn:i$q$L8a$H57?)
%KmH&;-m#flfio4eIceEtN*`Y9mtaTA+tgqda_6@s6p&qNhf?#q.$D"FPKr8>:rEs;aq3-6S20.RpT$jF,RVtEa)VPJ_oR_+!>.ip
%=Nb,k0lp%@c%Mi8oV6P?juPmHR:_]N%:*Og3GgChY+H(fY')L1l;"bqPTm-15\*6UQ5l%B:h5q(RUShF\K(bFf^-].&s[)kBM+Ud
%]IsqXO;"+K"!nN[6Q/#?Oo;>t9+.;QXY*5M"q4k9qN8BfUBY^C=GA65F7BsE5[B%aQOSI;KKI!Fp8Sq>XHXj%$V"EbbZlc,h@Tks
%QQW&OK0*1Z?8j"Ji2b.)0KODH$JCbL8D8#(]"TX!/V!oG@O+Aug^$c"M`T'An0Ia38-DA-+AB3F=)!>p=aW.8ejDR`@eYTTLk&bl
%G"U&Si"o`P@*)qm6MY1&<,=Tl=BDFG'lHa#<.ga3:]`U6>XF_9'QbuP3YNj7;7WT_!g[Uf_&^Ha3iWaJ3$?$DdZGs;ENa\IA^O/1
%6ZqEp*iHUc@9W/CN_3IXDZ`!i).Up;]*aE3aCY9S:'4LF5ba=ldCEWi)($LnEqV"[<#3RFEqSKYU\5/.'hF0mn`6"P*0XW9g'oYU
%gd*oiK(<V"k]2JgA:&iO*5B_N*`V`gP3tp<?D;YL0S)h)hdjDc[TdEO[?7uW8EN4c,;^Cn"/Ice5flrjqZ\l_:8%?dcg6N?R%.NS
%]a"ckW$2o`$<4thTX3[U#FkkS;M]A!*tU4o*5$$tSOf&eBRrYc/+7,n7\#TBUMd[T1r0INUkC$mEeP/@E."?6O*2j#/f4I+3a]Lm
%EE,!bE=@p7Z5m9qS+:h-je3TSe.)lhH^?VU71"K`h`)N0+D6Xi@%+uXj<t2)koF2*\A)N;\0[Q5L_&F0l:fkD.'7PHpELZ]:mEk7
%2F4g\;Dsq;:QL_LU.8Mq>6,+pqa&kb]EOd*_bA^3f/"1?)_4:m#$.ZN)%se5(LSD+&cOX-Uo=d*7g@)9$24Q=9+W78]bKR78l]bN
%3Nk3-X:u'OOPYKFWJh18,=pT<dMRERE<:4?k(QVHFWa5%jk/VoG@UF/@-0)_LHQC-?q8_KJ-j/@=l5FJ8ZuDa#EM33%JRLX=QBWF
%0(0_/:(d``6WFsp[atluGA5Ac,-l*;`'EJ>!a,aJHd)-lb]bs+6<:;__,][LQ+Y2dJqq0uRcd*M$V#gR,>p;<'6t2D+m`)Kj@+d=
%^6"\>6bOj#43cKornAM<(#>o`H*(&ZrFF5:DEZW6P,ni;ALA=-.X/SkTEQ'&:RI760_co8_kWhg>ZH.S'49in_1a$k75?E0%STUV
%XgGlg@E;n-j*85Yit9lY@8Ti7i6o.UcQR*Ej5^r>niED`WSaj[j=f7ngSk?"I!+qRTE'QG_Wt][L"rZC1kCjK&?3i\`j/8W0O`f8
%6,uq@")q:fP+91G+P.%D>OHbjD?3o]@Da6\/22H(7g\q=r2,uD)s5Nj%Um]X>miLMd+;.;-_](52NJNd?*D:tFa%RkciddA#=S\U
%#NUSX*U=+;Q%7]<Uk&SR'sNeb\-_8-q*@hFf$sYZcuo]$6^*;J+s;J?AUIp>l3&:m0'm;FT':VWlRL0H#qQrA3Hm&_?[Z'H.CZB[
%9uNFBj.pU[9<hjUSPGH-m*K`<lh]Q3aY!<i5\5nW:;?k_0C+5+"pbkc,d$!H-?>Jb7%>C-*D,EG7pgp>]UC!5ElmD+JZ&anY9k_:
%#Tl!E1O=erMo,=;YMC2c2-arUS>g;C[^:u+#4/5RmP1,b8`).e@_9-aV\OBd\E"'SO9IDEN0:4l>?>rm#8dj0m)gt]%3'hOk4E^s
%L3(jaB!>WgQY)VZTjarCq+tY5/h;ouBXTu)7a)CC>FE:S61Lpf5$A(?;=Uu7%PZ.ldl;>?qV(g-T?!qgY#f/Ka?(+t0c35C5HkSu
%!iSIK7rM3Z41u0K&fIkaQBS!Xp]VZa^bcK%/9CQk02[aK<-CX+0/OtPghttf<C&S*PbM$Kj$doO\mn6W!Bdf.mbDrXqa+CS.I;?f
%MSWdX&!O_5Xi,[&p\mm:Vil/e.e2Q72;uQZ\/!V;>/4NUjYe2>#-@6G[;><Rea/7q6EAn^/X/E5:;Y\OmQj7NfI>V!IpiEK>>Y8c
%)9Nblktkhog&l779G92U4LCFG+D%`*1<u)/SG2Ds3VFu9;gq(HNbVRV6W'<##%<`=K;BFoc"P8RYFK[%9dZsAoh).h6l@aK=W)QO
%"Uh#[5_Hc6[4Qd/E8I/6M9'UTL/Ga:d+RFTWpG['\SX0+U(C[Yn*I\`ILF=IMdV7fI6D670^mcXC@%:1VfrRR&s0-UAHX10XX4`P
%Y-9s>6cDq?h1Z=fLnJ%H5qMjmjI2`n2B2p!*!EZWJg-J3`QL_21UJ/h.YTM/HNrNnTU`-cYDVgNojj[h681-/3qj+;S%EZ,%;s++
%bi`I#\*Fd^YO>3mU3'I=+5q0!::V&W$lsgtM;DmACBG!^j?k!2]37eUKPNF`lQBE#)C[qJjG*e:(aW0tL2*p/r/W?9p70JFfM1VE
%?uT@Xbq]^@nW"riA4X;QF70/?4Y5V-\mLEd3TbB;p"T.slkapp$GttFgpBDC,..>7@VBh"j9$BpqmK^/W+(Fo&$TL_(W^(Dq>crm
%%nIOG9pHKbRS=fiI<[@IBG0]7%%,_fT^>oh9lfZ=H&j9UerhZ>e9M,1TmEDBQmmQo/[N!Tq!EAjp8be=fn(pThO#_$&4E?+YbDjq
%Ns:<'YU*KoWhgqK6Ip5n1H7fdU+e"\>bInp%fi(h[ja6R1q4g`VF+8P119kqH>09^iUNq'5!q:&B[Xf6B^7g(m\>%\:?."N[+;TX
%k@*5VbLP5umG@=,mo1ediXHX9_S3CWe3V_i@CUPM%WJ))YIuDU'aeOAr3_pW\AAhQ0aPJtWqV8,:U%4T##nQQk!:ER4;?kRp8Wg-
%?rWCP+YIL45$es2mS,W^1^VGcWg.Gh?,/l>auN:smm?QfKJ)D9]3^[!.Xrn\6/c1aEXVC7N4gYLY0_nU?r4ZRp!/><cPpHf?.l#K
%QT8Q*'1e(f&RI,m8C%f2'Ug(2!,>Ze$_9!:<^\(rXt?h(aDf9/*_eu;DkihLVg?`i&n@T=ad9TakAfdrlP8)*Er9*u$]oFSMVp>U
%iJ^)i/7Y]&L6B,;HaBbV4`HC+K]."oTq<MPL?"*L&r8#\"tb/aoMmpH4RKLA.4PfE4qI/,+C.!7Kbm([=%AGq13<s!^&&;q:g=23
%0-U0+9G>")qX&Stp5?SIi^.f<#endWFK@.>*@fJIBZTg.+Z0uMdpk:dGuGOck9uPFZO4-"OD;ZF.Iq8J1TE6]&m<fpJs*Zu$lJFO
%Ob/jTR9mkgV\egLUql>WSbn]nYm^(=A`=/I2k.j5hl`;U^UQ?c:6dq<O]:uX!#o(3XtUP@^4dFU(XknA8pH'eFJNmXb?9s%=O&VA
%@=ibif<^R@&8IZLSa[8e5HY5$Ap9bq!TQ:^o6\6dRUF$8S'96RQA==J*kABTV:S@Gk'8iYg\$`r=*Z1:+XE_-\d*Ir+3"T0Sd6=4
%U]l^f(0_q"6\>:;Yh4(N))_V'+b5!lRENem^P6@;hFrb(no'IW:_)T;d2NRuqCSeP6AZ<6ggZ!932QMd"l((l*To+,r5@sP0qF5j
%hl[c+^V!cr:=p5X>UrK2ZD(cHCK9K'!t66PWa4HhOXjfT!6a6%I0\`R%sBP'n-'=okGtn(cJF6Q&,><Y@+#H>G"i,#"\bt619ST"
%KLs;*3;5#_Y5IrQ9IS^s4IrA@3:kntK'\hJ-dDn"o#C$?pb<_k-B+5#;]aisc9&"N:[[`Y-VV<L=knXE-B6boK.b&r%*i1hrhR!^
%Sfg23PnW$&.dmh60m_-1ZG$Y\WHC%$":)$KGj/JKfrHBA$r`U2-G(8H\X<3[H9q8J]+a75I12u"PVGRb!DH[Qd&?[V%&I?5(=CME
%TW7ReoJet71)+K4@8So&Wre?'Hk,17*$ReI5?!:Q7@6=eA`p4*o'rHITf6-5BWo;rSaX1FM!kiB',r5;JU1X8o/Q9pom5t+G:1JZ
%?s+0gTgL<<\d@mOC7H8O^k1D#L!3@@bU(`ROD-1sNGR_c,M,;Z4\%,O3S^XM5q!OdRj.cR^VF`!CcCtFq.`8b='nJi3;D8$SG"K*
%V*"t*Gc^=@6_QF7X8/5C]o<45gFLG[NK;TVNGo>@#A]dQYDig^N*q83B*m@9VfKAHZNRp*J?5c>5%*LgfA#,^nC(=2o[tMG\<Jbo
%]u(?CP^jhXotp?f]*VcerH>k"qc3W!*Xhr)i.ZYp3O`L`;dR79l8P`Aao4,j[Y3aWIL:%#;9*d/UEUbr@mZh=</0!8?`i7ibU=U#
%H_"Sg>Qr"]0O8djYs5#*#WF8>q765*&(%nH1LdcZc!rqu;nlVAaEE]`:*,<'_N_?rnB\(Km"+3E@"8puL[FMPH%aS=1eT36("h_b
%gs$H?G$F,r`u4Xl^d_As9tB^TmE"@YAe70Z6[q228[%To2V<`sC$iMC"n"3>aR8?EE_PV(f!ii1fIuSl#4%6<?t7(+e8?g&a'aj#
%0egh4.I*R?*XC^7Ha2F)E$F_hGbbfj?'dn'WWsB\cd?2kW+hp,YShm#fZfq)PdVW@Qlk:\4>dC@1q@boRl3u.]J3*e3"F1nS]@/U
%XqtW`]K7PNMAG/mRdk/&c3%[TF@PR#R%D=CB&2G=U_LB)4U`[CG9^K-mY,efTEl(j+neKg/&F=SM)W:dGhX;o;g+M$,Wf=dnKlsJ
%$(GdXls3A0.<blj^M$h!oJlU"FsV?qegB*#lpQZE=V?D&HO-\](=]'&Z*UAM"GGH\D[[JhpXU^?nLF)W,4`d.*Z=bU(T%K<:gjMK
%_LECT07W_766HAHOk;o'">f+,/T%d^/JO3DJ(N=\+nZSqM-c;(rYm8,n6p8)/.c:9E1NWelF5rfMRkE*g[J0=;#%oFp;L_5pRi"_
%J[C?@)'=;I%jDhh38[r4oYh8CmWeX=<pl@,,FD9Sdh".o#o.Hh_,U;!j"HQb#II6<1+5+H]U5gl+*41r9H?Y2M>e1dXF_"V(uFpE
%mg1-M3*@*U7j&tH#E&A8R(9[qBbgDmnJP\#a;Pm\J`[85J"k!@T'e=8mZ+Q*cfLo->6at9N"&OW%?:(+gW/*4m48m3BL[jhCM(04
%nFOV8mJN=jh;e*eS,F>!rJj+3nQA6E%@QTl`_i+DQjmOok2m^kF=7'ZNIE*-f63.tE+rsrPAA[")aF;t"IVXW.:cb3r9`_ilV#=c
%GF[UWaR!+kOkCdf*,WTUG=CY(_p9.TM8*\u>@cUQC>'g%Nn%6n\PACB*bHBDf9Eg.;!'N1k-NHR7-=%HAJSTS:of%7-OVAE,Vo7h
%UWhg5b5>8#Y>JoH&&<Q1R;Hlj]&<mS,3Io*m=ELC!UIp^^Ls<gADXR])e@e[-jqfnR53q1b+)%k+-8KI;!'l=k56T'k&a=c*Gd)4
%etHm/8u0\HAQ\AL#+*dr@K*RM(CB[L=g)/NA_WZ\me;:,GpHNsEB-7f,C*`Lc:7Q<]ORHi\@c<H(0jTj@87>d3F3B]pct5,9UO;$
%5a^Rh@<P(q7.]Y!1)WBF)9_/Iq`2M5Y6jfe4haCQh:AjjF_"6'@87>d3AujB]0k`U5a^S*R+"ueftE]t`BBL4"iqZq_AjU&ZcM8(
%*g=JD<=Ufb%Y"O[p7G/m."W?m)dVKh#?@X6YsV4CcX='YKIhW'j(i2YI?D#+<D3lY=UksQ3H,nu*g=JD=Um5j%Sr3u\)Wo8R(VHQ
%(/4FA_IS(^E>5*I(W)dp%kj4TR?'hP&Xh2"r=PIVG1<2b]LFK>n<3>Z3WBdKY<DmYFH>rLADS\WHPr7M9U>VZ=`u(6&'4)YaKh;W
%Z@@lcn(=KH1@J>/)4<(3-?31<:DbRu\R9Hh_rU7S?h5Z1*pn@t)JcdBHRpci8OSZJi#8MT1SSi11*cNL8A+ZjgU$jdf2-^].ILa]
%mLqVKpXH][''"F:Mu,o"q_OHRm`$n&0AKa'6f'^5ic\+QlQmFOpJeXt7(@Y0%Bc$C\9)sV2V1/:L^5.S?.k)(;\Z`J'&YG?H\q_G
%bKP/QDk"gd];NBCF1G@Qe9fnR-dpb@TtIZ!326rRm^S;qH-8U$b<=rUDQ#Y@/b`eb9OtV[5M=;ROBiqr_K,;_171XVQ$;^^7<\8M
%AG;#]?6["dIui-_9OtWfP?l_Cg`&N$4kVD#fe(O4h3Y3gYs3$Kb7iRRpLH3gP214UG1/j&oCnI)FA6otD"l2>:WQp9I-9l;=l+W4
%GLJG"rMmIGWUBN5mqc(RZHE>!;nldedliSd$"&bep:1!_jUN0dT#9AD;;HImFlOd_)t+)OS-X'2I_m&,$#`I-5`7>o94WWm>!Y'D
%c=B\rj)2B(]3f^T)Vo8fA$3.D8]r^sUsuC"e(o8p=N$%h383-HDL9K%LQin,iGP%HDKnu>oLJl5K>q=D]&?H32gdr64c!MD9_KjY
%7Ca-IH2&7__^@9bhqMol[sa<G/kdNLgll!C4r4C?K2ui`[c&ZMgKq2*+]$jV!nnolh(o%t[YoKcSRf'F8(Vs7M67R2XW"Ln?"2/B
%1)L6AB,-BM5=K;<%Y&i66[c+%NO.MPJ=@tS4e]QbZhJ!RU9`)Wfp@Y8YrulEHS6bl^>BUNpWb$5pLsI'TEK_9e[b/1:Vbe6NP%gV
%gRRl-i=`HR"l_/?7f3\_k%j&VW^D6^IMR4ppDD]B-i*--St*Nq]R%obSst/B3"ap>VaRogP-kb<\"CUui$U>kpN6'kOSms.C%(#P
%8fP_<3;Dr4jQN`Y)(AUJaRU"W6Egr@jiX\&:Ef;_iG[%cW#We&,P(T]gYTiD,I<.C6W)"bdA?$]n+4MT#bR+EEVUo-)c?u)M9Blc
%amjp/7qs%A4YEW;R[duY*<-/9S?@]h5uADDS6r$,;j'Jgm+qU[;,5_2q9'7T,g,"SDL7F#<K7T#3ScL.k>n5DbS3'$8!75b[%YFT
%PA$J!P+3UbE_[h[gOdH@JL'EH,j.CC,aW;0>RCh&k0F<D#"9kCh"o>ojDmtW^Z_l68<CU,i:`aTJt*ngEkWmAq10[OR3:[j#]b48
%lrK]8]=jPb7t)T%j\c9[?69Gn?'s\;JKWQ?#]fQ+:b-r`+"IY<A_#;&,KTNkK)AW(Y7]i41!*e<jhoDgg$]#3e\UM,/a`MQZ1r`j
%&Up@CLGua@RMB^EXDu)<2H/`25aC(]UYHohEgs%Kq\,oKs+Dl^WV5g!R;="hUrqf^W,hok.Y#iQIuQ"/;0qeE<,PW2d^e0=L2-No
%Iuhb>JI-$(:N8;(8*/@HEnd=J$S(n=/GDZj`ALe1T&)QjKprBis"i.@m[>nDR,;ZQT;iQd_([4UJu5/>@(:"+r,n>Z''J^<duE`d
%l`M=cg+WCLhS"9/c3?%oma%$Yf?ABlU6>s[Hg`;W[\j:1rM/EB]D)(!`<0X1I5^tn8F<T4G8]fQ[IsA6L*;dD_Es9iniqoZrn;\m
%FdN%QUu#,Qr<8ud^;L\cm:eje[G9PQQ`$CH?Cbg'g%#o`[rk;%M#FD,n(ia],BgR-g3?--c3k<-]0@j3PHm3m\/k.4JD9VJ\;+Ng
%[C,KAT#CubmQbVrIh&mH[=Rei*n+nlrB2JkP]iWQ4$4'jMm%QIlj!pkZ1"GGnl$f\>68Vng!ACMhL/QuG'YFe$2*]rmu\9idj*C<
%$e8"%#1ZK#<'+*B7;=?FP#,\ZN0)CtgOGB$Ve`=2FdFaZmI)b5^AG96mIWrWe]$e#V"3G(FR8p&0`3BTIa'j^/L@a_G$_+jI\b].
%?)mFBH)0/*U"]=gT\ALrC+%M]W\&]m6r=[",k8S"p60%!>a+QY]6oTUmjm#f!cI1TDWaO$SM-c0VO]qY/IUC[:XSQH[@#9[HWpef
%`U17`mJ9A_lXa6-JNqTM]$Tj@B@-&B$/P:e$pslVLfVr@YU$XU,i,Vqd-WKuI#W#^CTdRBDHAdWG.l4*nW&"/QZW,@c[LBKDHHQH
%DSKdMg_TH_EP!fE]04U0p'J4a+6drUk]ZhZk]X_<gC`\oC($XHd2jltIBWGol#sh=gL#1#,2N5FA)c.5FLUih_R=X4Da+@i%FDoX
%QCl%]fBeCL1)-diLR[P:4Y8i;m[E#CmX]6pB_Zqa5Cm\WG>5OkMLsFA4sQfC?/;1;(YhbM8%7rur9a;4?_lH6A7HVVPO<Vno]C,E
%F?;V'V@LuBr,>HZm;7E2cZ+;91?$N<Br9YYZlgp"@QtuYGTb]E3ZORe"JQpR-U\mkc"+jZUS&clBHul>L7]^EG?t4AI$_#Km;7-'
%?U8Km'CBkq:Mf\7I!0a**\]h]Vu9QdH<UedK@<V#*5dT:0OLs]J?)@Or5`N+8)L3u].m#3Ij\E\OI&&9%]J'>ZGrNq=@C7LUakYp
%opgI4Xk,1THbR\s)HqVl%aVZ3lhF#Sj!XKq+iVX0o7l#i3I:Xm$$)N2I`:[dq5,stVq(=E?I8".Dl>?O2GMGF-Xr,r`-]GJ0F65B
%5JscHJCq**Qem0$Z.CUXHbR\u)Ie2[%5O`5?Dg;>S[^A7M#EEkle$JMm.;:FIa&A59ut$mG$]uJIO*Vq0RDhYrTG=<b!NK,T0]j-
%-U\mWV/&et;U@b)%G.N+IZeB2:Pe_2?+re8[lNAr"h2ZA[*']A?F)_b\GbV?(!8kMb>UfURsf^;gJ=:_6X>LkI3dOS?8Ejfr_fFA
%FM%MiFLti-D(kWsXmo=.MDE4[/:&a08[[;1ec)klf80,Yp\V-:G$ToII3dP>Oi`&oR0mf)fC^S=^!2_S_<IkVOIP^2@UqCS5HC#7
%55pV)?0sn-P%s^cOh*n0J(^XMCVc&M:hp2F3^!?)NusfVRjYB6O'8sT)N;/P*X`+mFaaaT#`<l2FQi>6nb%>mp'M/q,:\2RO,OFU
%5cE>2q/!QHnH4T4n0=\b83_UJ1I9D?X3[^918*]oA(^m:lt0^6DeH@MiVfsj/ZD48Q'26S-8ftCqi%qLbK2X@`Q;9&O5t%Knbg5F
%W..7d3c07XWGnN;^b64.$4+GpD"%ZTT+@Felu'50E`'5r)i_A$.10P!J$?(PnKKk#M)ZVRNTA8\N)?o;g2JlTfm.bWR4f)GF&[sr
%I9MQ8Q2P[1p#e2,]T#<hK:JMLkO'E]^F6-]kB/d'fahUdSlqen9r$*k(,Q<3L&6XV*_ieu(=E80C,js_GU6$..G?eK+u$@rnhBnl
%-m^b>d+QQj,l7r,E>f-*E#J[`-11Sbd;On<ot)I>T@[2%gN:05hm4_Q:^VEP_$8@TS4Iou.)8kZ;@_]H\1].U..0HfHp]&QXN$=e
%(AB>b-gs>LQM72)%Rm/r&o`&7DKV'4.^te_,u>9)/u407BQ6o]^&AUK/l,7P"V4U=.DnY/KO-LFSXJ5:qgXm\HPs)$KhGS5p`Z/:
%T-bskZ#h[*_t0,SU6L@C,3]<X!*:aHa((&))=B,-^Pt>BjbskMI<8YXGWbm`*\:GbG^QaIk(h24^96LsmX;6OndDR<UXVi",g1f`
%dIGJqo@JjP`GHf%/[pC2aY;7rDp,73-RX6V\-F&^(P1dr"8`_Zqr.ji6?@V"o3Q%<b^3KT-g1FHPJ,583]"=(HG8N,<n>GlKYegO
%E@LQo69JG^pq\LERN5Fk0?/)X;N-gp(u=5)]f&)kemWbG.-G&gj\!8Z6'jV^IP25CmcQP+c?Hb?%f*Oiq[Z$-Fl(=.Q?b,6o$k=i
%CUl[IF1FLoh`pGpo]tL>+bcH*1R8,J`&!)abG$(0%o8$p@@N/F%hR(,=AJB[a$#>n?dId>nLSL_@tL:s`U$sF\4[gYf3cRNM.J!q
%qhHneR"_[-o/,JQ_JLX-2&B[f3D=h05+$/Pbo^bJYl<]@6.),;aA^"0dI3SP=[X?*/Bb+.YWRknP=+TV3^]L$7D^sXA3OtrYN*I;
%Z<Z2`_rs%''V-lbjJe:.W%`3D[n1hp#F!=d^&41Od5c4Uk;J1CB.Nl<HqE,bJVS^q%jmfXF]+\N7d%I5KQWo!D#SfAg['c%S[6k]
%NX(cp$BrUa&**<Wk;qKtr6I%;Yg'Uh(Zanp8V,Aa`Q0U;AQl<M2W#X@A5e09&'1i\$>gRgm[*$^Hp%j"n8g1*,24meb8!&hrU^fW
%Xr?(kCp2.`A]eAKlm"AoZcHb-R7+L(.19]Q?/0ZPZ<alJTAf3%ptKi8]ptVC.NLO_:r^D6j2!M:k/R^RD1:,2Aa>UQ6=gp;73d47
%g8*+fbCa6On]ef>f+^5RRj.82i0r7H0,%Qe]I_'d;guiK*Ob4[mR=Qk7(j3\WQjiQ_l<GeZIbBII;O9)HmuKQdYN3<P>umkApYr[
%KaNRXK@e"gI'`9hGI_Ndmu-gE^PmIsI&C--/TP2S^q5GI[+CTKI;Le%Q[J;?F(r9Fh`n/Yp]KTIUe0=^If&W^^rDsi""n9UbBZ#T
%42>ZA1I^3nmT$%ZL#/!#5K#sTg;L/Y6d;'CQ/(Zq?o+"uA3KMkH%pn)B#'9]SKlMelTA(P=WYR$U\mMc9N3l423K!Q9]g65/_>dC
%X6uXqJ*8?dEGq<mY9/ktiU`1J;_TNdVigJBC9dHMU-Qo>kgt17*FBT';^9s6&Gm`>l9e:G>%8$,j^ILE%j.Xn@SlDeaedbY7(ea^
%T!sLd@kAN@]0)$`5UuWak=s.GD:+ACV_SRVqI"*$kgm+'N8mg-&k0:/M)JGY2C$N)%Zs9N[jbVH,0PL-k#;rE+LFM_P1289Jg7J?
%,o#j+i"GZfRQ@!#JP*(*WT[R._PCbhB5?T(c$ne:;ZCNUN"flUB+IhV[AF&%`/<nF:8rE,C"q`[_E$f@@I//spCCrP+aXdb7(aJV
%J-:5oE5bUP9a30cgh^RckB-a.=lQVbh&Z7Q[)L`QjIN5SO[<kCQe*m^2ac8($b@0b#eDe_&5!0OLC*d:&,)R^DLg!jg*WWKI.hA!
%$P2EBRtqn5bTI(FPT26+@=kB+5,)A6OA@;`bci-Q$3C]Tq"b!6WK;0GVe'VJGp`kGGW,5C_!nlNlD`V_kGrXRW4i4InGk.hT?q)4
%B7%[0*bToUD;dDEareDccf9S?"UHW@YbLMIK2[YZlqU9e7;b9'J<k%3^s0tD6+!L)Rk#Q][5R2b(bg=YjA(]GA&kWV(98tE3gr0>
%lUIE&1![,EF#k*nhf$J,TeKoE3b;me?S:i!bSNrX/f0jU"dH<8+#2-]Z8s-P[AiXILg$<h^>j'Nq/C+LY,;tqmPpTJd>0>i<Rk^*
%nO)oMbjSkt@nWK'fiNXEQo^3Pf8g%j^iM"]hS*>/R8-Z)dBXt%$t^]R<oeZ&C)m*cfa%NUW[JRFaCHUu$)p=P])-%F+$jdF?'b=a
%eb4!q9sC.qS/$P57qf'\0?^`20bpC5%rYe`AA9`M`=7T>$Buq!n`OqdI/a(&s2HkP5BWh%J@kHgq7$/Ark![Z`uk?%J,-#Bo`"gr
%OFZ6fl2USjs%F!6+@#[i,Br5g-l0nN>6aT;s7n>IX+0sB?iK*Crpg$a=)U>&q6Q4_f73hhIf(l!p@$l;S%%G>s7YhergSE'h*9!8
%neW6kft).6[ss$[rr,,$#Q49[OY"N+*H=2RjLoS+&]pp1fN/<Y'-P1-CWo><qCcOEJ!==?\%r"7Rs/fNmd5N$hqd$OrX8c"p]%Q(
%6K5:[g,HQZUkri+Q<!>]?Kaq#fO<DX0J[,SJM'4S6jo\eYGB^"COQ)N/L8t"=_5!"3LI+A!gI1mQkIH]V*tI+R.Q^29`s5hGjIX]
%V0VTYg%R,30niuddmnLl[Y;Pce`+278?N8Z6"kfT3+P=F>_]d<4.GaX%^oV&+$q!p1TE!<P,\V?1&-]2g0C97jW$HnZ^9E:.23Fn
%Kf^9Pemu7c2&ucS>SSl[gh\'!#4OCjgXCiA5SbPJQ.>P"/IrtZ+S7[memj#/2TpH$-!:$5$iU5h0=dAgNXl=:$^.69Zhk#%0nW?X
%8&CYsb-":MdoRBt(K)QT0J9Oul-efM:kq4I3Fqbf@EH]Aau-;*+;ddj<p0"Q?q:&AN!_g!4]r:u#3hmZ!]hG_>X0CDlq\b*C$I\F
%KF97un/ZYF>#CC.m\5UllR]^m]JRgc'd:0FbNq"RPlV7u:-"M$Y`e8P]"t!gHrMFU4eU6'S-;q_OkE-i`IhQ^X8iG0D@_*j3uf."
%c]%2S$%m6gXWXd)Cee"Wj&=m9IB&AJ*M#Dm@WDq\8is7<0d[&.2S&Q,l="g+>eMI%]'oj;_Zr^$Nc)?TmZrQ@O;I$5XI8`"N\S9@
%3#4%j+Ia0h^_(Go0!R/OGXYc^L^;"h[5]q%]9'+Mi5<G/9$Y).5&8J8m[Y(IARPY#5npcAX!8b\gEZMiPQU(^BupB#VqP[6)*`1m
%';BRfH"USjQYSG"MGRFV"IAdC4&=L=`H=2"=V*7&TN@!`!MP9S7[\oKO^#@7`G2>/NfW.E=Xd:D@Q3g=K/?U!3s#Q.q*rZ.n59Mj
%,amrdY^Jk:9V\b\5ce==PF"HIVa6fJ+!EHsN%%YhX=[hJU/8,(W$sYsKs?ffKYolN\?[g+Uj!maa#"qI_8u0rCTcoWI$EknAsXT:
%Nu]^N8(bXs)Wfo.7%#(RKP65bs+4f<H6`M,rX,BQB-E)rXT_"&k1;^e_uTss&/qOuh9S%=bEQJ?(5:@+<dl2aroh>=(etFsa>"b)
%=us8D6_`0W)O8:7nc]l:!muK#;YIW7S:\CYMlpb-api[$!#&+\dC9K6PbhiL3#jq7!*^lG7fkucq_D1S3i!&VrKDU#a62s<MnEsc
%kfDp9pF"$aP8bdgUbn?r%(1B94`W'p;SWkKOmko=o\L^Gdu.,f=Q&a-;WXPf<2:j7R]JhgKp7?O7!_=1qn!h:*$esN.XHUU<0JJe
%[/I->)]hng5\1*<#YbBJ!'+f(-)u&BK4HC0&Si_,!_QPY[t9/9L:!JUrV]G-A<FG_k"P)'a,IZu%Fu<q4o!e:@m9+-n3^<Op4bBI
%nRg.[*d*t5![IiB"-IIN1"Fs88/b4>LH\!fnQ&8b)`n+"KPT.S7naHQpuHb;f*MpG#SWV75XqU>1H7_o!KS)e82<hS'!@eL>VqLG
%r;604n*t)3];tX$A@B;GKQ<qR'&7Z[o+M6H3!*[q8T92O9Yh!9Nsn^^Z7@%UpbX,^.]6B!W!g<C-7.^YXPf?$jrkl3"%bH`'No)N
%LY<s(9$1+a/E#fHfp+5[*qGk$jS",a8TI@s-HP#1qj$D=iqV#5oY>^F`f-4-@#6iS\U(iorDputlF@Hd*q!_&'84E!.p]8D9=sPI
%>[kR^_)\DO#h<r8MTdt(Ft8&YA8dC=T7G&P(!_iL%SD?8"]uphOtYpQPR-e4Z$i#jRf-OJA4gKKLC3uZPcI,I:HrF98<8qcZ9&Q*
%=j8o_?FpA8Jq3\-qdP,WWnpsM^T\+YgQUil6]`9I$F.,5^u@DJ?"H!2QJ5FmE8!r7l3tL3,p@=j`X>fZ%^>^^_;5;Y*8?=H`\lRu
%iHSpNK`@a?0i1T&=a:.pi`"MbcU3_LaYba'["uc,WP:f!J?#sg+Y4n<d&*V9pUa**)Dc1HUZnP8&b7[o#/"pEV'&KCA1G%6)_-Ce
%2+/=$#<<*9P/U&L&-Ad_//VjRJmqtd?5_uH4=(R^=='l#0GLD4"pRF-Qm!Iu8oEdE6<!0UXCXYJ&B8qPJ2Ic(ilqA842kFYiTE8g
%['fP>+rdF'(up+PE;]2)_a".LZa-jLqh]"!%Gs07j1e;(/sVNP)cGkd%Za-XO;k%F79^VFU(L&\]H)`1.%G#qpUn/oaTG(XM"7I>
%9\Jlfr(r2?LboIurV?3ak3!)DIAY;F5r9.IV.i2d)oP`)If!2K4!A4gH^9V.=L3rDI#,oMbFYD!`d8ut&48M2lf9%K8]_,`#7Q7n
%dXKXBg_QG6`uQOedX`AIA3%C%*^pnWie?i445oJ@&H.rBs6XHF(E/dcq71H,:ION(D2q@KEb6JTN&Qh+!iZkR7%HfnQ7??GUuDVg
%0T@"?BCY-q+>8sCGK9d9WtcKTEZfl?bO>,K8&tm)GH1V1qVAC6MR,2Ma;>9@T7>b5Gn8R:CSt0fkP!_HL&:HLa;>9@T79'gLokrL
%U[d,Pj%^($9"fGJ6l*<[8a(PFJQ@sC.ff8!_G*?M(^h`4EM\Ee9dpV6TM39*n'Ab@T)Da<Z]s)#KHOMUK2%Pg2QC68a%FC*2EVWk
%SG/IH+?iKWITV,jK9".DV^Lt&OK=':$P-jGg!TQ6CJbRYa)^c6Qc'?4oD7@:<A:)K4R<)hTR[Q!%q'"&i2K4p(HF]F,8R4dKFSY/
%"*;r@lQAKSU/'ia>!o1Gb8f#P-/o;#)aG&ri\Xgc'rCOGZ>tMFJN$^JE^U49KQ>=ND<$_LJgoMrYX8al$</TrOqpfs.hIk-384l/
%?+(>4f`XNZ.'HJ&?(7YtUEH/]?:uuTeMh#t9"rsF$>$Ktl%McSNX/d)hrIGH+SDWcaA1S\J1*.NL>$5h;H.mVcmlFa?EAsVp.kD[
%*lh.bm`6Csr9F>BaB]J($=Wc//9YkdAa6B?$o2u)0a.suL@+DR)WWAu`b;Z"jUmHBEH:W($%SAVqDX;Q+Dd3(F7'Kk]-*dBK0P`P
%Ic\AT:#Gci"Nrr%6PC+JnFVSp+Niqt]_:K:jBq#LI$I6ro?]AIN5'i*YBM!!LO&k-?[/hl;c(2'MDtr'I%dL^6\dtE1F8=dE(QfF
%!*#eUcQ=I3HY/$FL`DbCKT\A*R]QXnW1t)!#D;/mR=t%3]O,)#+Uke#bq(Cnhe?=3HlBSKlpP-Q-5."5N:]H8R^)obYXnqUA87QU
%MPh?FRV7-=7Rp&dg6e<";5VbUc_Il&dI60L*)!QoMq?aY[j`S(+,KAFp`V1Y^Dc/qr7K.GSb]mQ01iqq7f,E=":10TK*ph[+9Z2Y
%bK/"Jp=&f:&B_3'".2j^+:7luW'Ub')QjVEg1JQU7dHCs6O7ub-L*kGH)(rX#),TbU(@GXN<g2W./%flb.\^X@#kh?U=hN;;as2)
%"\`q,12)AIbt9KKhk%rD%LiQYY'MB2*.sC_5EUn8,F8.jPA'ai-B2TjDq&R-4O<,bgjK./:Z=#X;;Uok3'aX$n)e#;pos<YI/*h#
%55BRL[g<Vt0k@gGN\TJNkJm"V?=^5S;72'hr6*db]g`CeWE#&J*7PT8c7Ni1hc!F-?;hUN%[T=cIbL;ffHD!rO`OCm+g:V:gQVTu
%'VGd&j4!R`,%R0mndeWO]]5Q(o-_qN&,/.++)s&23'0?@Y]7\p]Z903'2^,n`5>mLGkhD_IPO'&#..kthI64C#*e[8h39"IK4a+5
%ckBo6;>7=iaS<r+`&m7J*g9)JlS3\In@W!%o!fY#W=AVTe]0bGc-GkR#rV3k5M5m!gQ(asj8U1Fa#a'Q8u>G[T@aT^!ga9:1DCne
%)n<^[!-qWJ'crf92T@ATHP%F8;;Y4Z)Q<.uoe/5J5oUJ"fnInr&aGD(0"dgM/.S*%%U1+8-n7UtPlo[NOB?`Tjg2AMW,h0"+-^B^
%d@1M=#OoQ%e_1[G>[Rha0.]^.c.R\ldhIMcehJ7m&OUk2-'MlPWa)'^"$g!C.Qbd-Y"fc:T,[GDj7Nm\2MJA1Pt+#M>J-kcaN_Wr
%n>cVb^gh.jD1s&l>jn?\8E[k@#<Tul8@CDKI"r][MnRX#lpD74"R(.meU`tG%Q7_j?,)iTT;VqPLh\E*I(]%E&,SMe1l_?VIm8SS
%dY:lu[e*"<s01BLq.q!fR>1UhJq&h^6jM-b8;8a9L1C:t#TO+r2Qn/eW>H4*kp+?%="*uKTG`;I0kS[[oUb#"!_rdbqJ*A`AU#B6
%h#O<s4c]nU4OB'q"O9sd!Y#]diZ#80?;A."6`5+'oJef;<K@iaI$9lgjFb.@f!LE1gqB_>"QSjc#hj_M@SI-hB:EqCbC4)1dueHF
%Q%#co7-+E0goUs,:s_NN:d@"4ZGZX)s$FW-9nN3^<8sJ"JjCdVl,W<NVRMM5qJJNan'[M\!Mk*>%"7tl4@Rd=Ne&iZp?#uFhkMqE
%h04@I<!VgKas4l>ZKpAGLViq^=<7%/Z(64)<X/fmp3qYZHD2SZIN+^h,9t^&@Q6`sC4q7hQ9e&=KB,4Y&iOYb8#]),QG]CZ0mXJB
%lMf/%(dY,Zm\+YYMA!\XZ*@j:D0o!.ZHW^QKE>_SEV5agT1VEEMF5\JN-"HLo6:4VqiCdA8V\:4pY$d'0+'g&jNn]5"<^h8kR6OP
%IYc'fXpPi,AriBQYp6"Ef[;!Xm3fPc.\nl)mshb&;)Q&VYZcM9SKH>X>85hiL-:a^q!<">#a8S;Jf[M6)3ec5q4JE*<XkT@]])>j
%aqu8^$,(4OW8(r+Jb:j>q'TE4W?[p&BJlg1#$,%j5W?4JG_FSS#n"pmTV(f&g^-%<]r?liToaf?gRkVDNpt1PGC+kuj`ugRJ=a(a
%X^00EG.@g,g$ZqJ8U',Jk`bU^X*R#C\rj$%()l287U!=b_,L0"h>tKn+thQf4@-SHN#lSY1j=P;<B["3Ap_@FZaiK];.6)oh&N)W
%Wj$Vr#P=P+dG2]g[o'cl[(dPcbVnqYF;A1ImU,A:F<6,*VO-+a*Z,L[GTNSeE;?8hK/IhDL835j1lThQVr>S.E>gHRm/jj`%9o-V
%VkGGj`hp@*4eN&V_Q=n7=S$5dVRN-$R6bEFhL$4[ZK/-c5sb7C6(ubA(sSVLiS;W@1n4Y1:W"oHo/&STGCLN;bJ,%*q3U9nJC6qM
%%6Yo&$Vl=/1LAlt+Uh=gO'GZGaA/"?4S2HL@2!^o^Ea<QJ]>b>d#_dH4qrTDq=.:sm6:A2l;W_nVIM?lSWC`M^@PGHZT*uaj(rY#
%CTol9I[aSGNs1bY%=V7!WZKOY=<Q%t/8*n2hJt0/14_%hkG^`1+$D:';_^Q'W>O"R</fD*6ZMJSHmk$6SVQ3l`-EaPB=g5>I[apG
%o0_KGfsPfJ3n1,m[<:.uk_[Lmd`B;H>Z5n&OkD=fOTlE!(WHJZWU53Wk]aE-"cYaeG<jJWN7KUnHb3O84YlJN:f<_L+ce3Forg1D
%7-94tbmPcf$&s.[RA)$AXje:A%+G;]&*nb;fR,OM'obE^GX0Sh*6hd5GE:%QV:>(j`81Iibc17ra7Ij,S``:Va^3oPq1Ss%L_LF]
%iZE:a7Vc@%!9a.&o5N^H3"MAQFogEkLE.J:k5fQbooA,oJELVX<[%>12>cjLoZc3#n1Ks;_k<\"_k>B@0T>/.@/l;XSS)BTiB.GX
%;r+(!f2Cc-D1;-A,ePH/G<#<GddK,25c7NljAnstXahP9\qgD7OCfh<pg[(8BPfd6UYGGUN:EI:i0_K'$6Ei,]3L!e.JPZaZQV4Y
%hfJcEoK3?^oqGJ&kEt+R&9'_>[YP3FF=_<lK29k*WWRQf,tE%*5ra%/4p]1/cPMXVSEK0W^>#uuc"b!R$ep@,U[h#i"t1<8>"P/p
%[PfVFiP*XDT5e*EEO`5@<?gHo[)h#PbgFAd?7gA\oo>s-5r7L@n*eb/I\.8q40"!0Hii,DG(6@06esR*,XSF?Z\`hj*etWahg">)
%o_s<,0BEr?gW]23eMh2"&rQ!XfIZ,R)(dcoYXbKXK6\/iN4H?e8YjX:R&[9s+R/WV/1BY.W"7`\#33<CHZ?@t?Xs4bM:,^u\XJpd
%Qt*Un<CIShH?2ldn]t"u$_rU:VM<uEij6&R[73rqNlJ8Q9VqM-lN,_!A1ue<bcWY(ZB!7nf/,h,^9WhH`3(dsF6a)g.Cuo'i4fhn
%1rSGX$]L,P>&O:`C`</q]Fmt<D.LS](MfpPk)\N[=b!mGOk"u<2iZc!hNkF;E,?;lE%*E!`86fO`j6,/_34j>,Q>jm3N"\PSnJ#+
%5^V4s\%%]n$V=&F3A<C/Jo<;6;ltoR)r^0_BC\'"lT7GPH\,</r.1Bl"XYYm-ICm6g9iCYkBf_=)$Cp6a&NYk25JXf#(_\pYRQ)M
%!R4K1B+a2*PGJaoPNgK'C4bXrAXqAan+ti3nVF?UPs11&X`[XM5FbYC!?)X('@3)<Yd#ODkN%09'jWuA%bGZb>$?j(*(_.JnYhfV
%"(n%=o=?$G4mp912tlZO3OV<r=d!8]1VR\:+9anm@oK`p9`=#<B9Bde5TR?H9'(;tYT(+paJ%OP=L:b&^-]BL6qRLE)_%2dq=43a
%YGhD^&"b5>![\dH^iQu]W<r95.,2/_(392?W,?Asgf6N7<JpW*aMoKaG;SpnN"_9tb3Ca#b<\kdLjKaSH^nb_[_+d;%3;*-g!4ag
%nop+&V4gt02B%r=XkYdset25RU7h]A1t3YgP`CKr=[+Oc*Z+Oo*$Ri$Gs<&)*C6E!LU93`^n?IDUVe>jiVLCOfai.q7b0>mVaDQ#
%e!acrR3BeFn]m@J(QWrN(F<a9,[#H=V?\YRF./AB5f3.i4VF<.-(>7(#mB*UA4Z,1m=!DB6:Q$uh*4lYRT43O5U*j)hN;C1lB1PA
%D*g^5^"kn(D>0lD358]]*c3FGR`iiGbR\dL#K.PPiUZMTRul$fYP/Q#gO=!$KZhEBm4c!ib5K6+p4-7ToRqX?4PM2n1^AWF4tLO]
%Lc$LfpsnEX2Bej+Pj]][[aWrRG*e8&gNdZuVu)7Gm/\)aoukCTmHM.AP3sEX[`dBJl'IHDgLY97`qtPe>T.,m6tZ:CGb!'U6B:3r
%*sR-Q#gl]2f[eX,gl4NA2'NK7MA-qd09,d^9Cs]P#sop6+<hRP0IBCtf^NC6)1`%K4:;TIbbltF]8&QinA[Ea"kZJ,;47n5?PVFV
%(V7u)TL*-siDTRj\RW`]LLn]oC<Yr1!O)Hh^Y+\D2(<NL,A1S$rdZ#A%eeO0?`".AG5#tBf_B&Cqn3j=.m'X,Vi*9VGP?(Cf_B&C
%k*NaKr&/?@f3WNIS%\)+NbS'KZIIo=+.TlDC<"p%+V]:ea2@'J\?0iD9:KhtkGp>XqhH=VNc4W$IZ:dRCYAX5a-9S[`fB;9)aSQ@
%rkWdEpgubfD^2@7J%chB]mglm4$>d6A$6KqD1S'eNp3aDQhT59/Pgc//_'>V-@Sqq%'*rte:&WF+b'F;T35+9i.^En^$tj#D%"A]
%0hPf5,6U`U(&@HVrlf!\qt/?DfSk)GcSdkm,:VNPkcN&Y/+:t+5&`4+Vs5>u(BB*Q@Lli]NY0r,4jGo,8s_-/aZPjF1*YmZ9)<gF
%Qm)#^*_k`EP.iIFmHF(jgnnL"5dXIY.UCA=KdIlnj7hb;h$D>(rPb@h+ciLt);S)9X*E:JDtsL"[l%/6/[2`U-LM=E#7ua4i?_Qf
%N>`DG20E%7Qua.p"t]liNUf*NB>B_GSBnTQnteZ_X,rK2k5m@GhuVeKg]RSNhNJC++K'/4e?hBC?aeA-ET+"lJo%@P*-b7U_8^2,
%#@o@dc*%4?_^Y,RWh-YEV@'Kh,Rt+-+fV40I-k%\UT'#;hrDNO9)N6H/VZX3.#-2%ji@`Z,+q7__NZ+gcN4tVl>Rm<kJQcRoA=qi
%Z_dNs,?L915(I:H]ci6ngLK.<V0MC)h:?N?iu)%]5=[HQ^Y2Jc'Sk>Tq<(<3eAon[[(f7WdGE?i8E97sVfSY@81`MY24ng6F-UM>
%R,(&C<neYoXHjm)/3e8M`k0tcDp.5>b3gCmZL&-ONoBZmVf'V$G<aO-fS=;beL)3QD5P`GrqO;j=-MKOpo.,2_SIcf/^'Qq]3i#8
%P"E%Tpb:.#r7!^Bna:k%YL1C-g=&:]pf6/n\i]#DBMQ`HgDtWb5NhJZNnSi-(hm-%g?t3p`9t9-*4P_nT/_;S*0JQps&9Qkk5/L2
%+5=/Pc[>alD#5_KT]Lt0]dm7Zn,HbZl6$"\s7@E5p<Wd6CiX]Jo)IhOrqPiDYg=u5hhQn<_4a'BaQf8r[4-t"XWWt#HTN]<3Y]u9
%5SoTRM>jidU$pD7Osf&JGt)(p9K.b(AF0I=l&RH%ECQW)9rT0j+`*ZW*W[&%Z$;6uV$.X9$*4gFlT;+'0uo3&:^.#U'1,*0XPWD0
%Qbfus;.n<G@6faKYP"jE'G.SkktZ4UX^1/ks$^*\iCV;_:K[/@/]PJ,?7g6qK.A1PS$@2^,hfWf.Rs)!kH0]dZE?NM&XoP1Xo^)X
%['q;2e!X]&,_Wrp&"'G%i=_t\#t\o"+m"<`$@`^?!W6T?(BP7Yau@0[dV*7_KWU&2au4XWVQZ`4'tdW4$-X*</?]KPLCs&BdsA?d
%;WPm(=&^.H0[c'^L.5(j9Vr:W+(X<7+Gg<m8`j3.<jfcaND:OH:E="6o[Qi!RRdOK<Sl(BA.aMMi%B>^8fO9pbg?+fYI/g:7jfeK
%=HO*i,?2NVi(?^[W8/Up/mjT'+a,*.M:`hF-4@dY:d@Y9Jq@IWKO963ZN^P5b@lKaBJ='/7s;EdUBuh4MJ,Y9("'I!OmQrA21]3A
%6HBj<j%7QnqiK>DLdul&VWgK#S5LbZE^A*[J.&CPo^EV"P9Q4(b3ig8as;P3"<\Ao#LjYXrL]RRV/uJn[KN:G=OQ!so-d_g=qhgZ
%861-LV*q`cL`?bj'/`$]QA(XT7W9D16<.MC6Pf=58`nZ&nKt9[N!a6%#=UT]A=\me@V5Hc2CXHEi'#'\Z"U)K-SUe_iTJSDnP#^b
%PmGK8Inc$;)N<^8Z3HH!<Cf7kMCRB5OX13g6G%&&DB,S+r0SU$NLchBR^H6\dWKc9h?MAuH/AT;*_b-EHXTLGILZN+eif^;M2o9D
%SoPt<MCD]m3.`rD[NSK^AS@$d:;l*cF+)_hVQh?JQYqRR'0XJ:3@tn`/r/e#$)A*Tb!g+Tcd0/C$+6G9nE4C/(/0,.2\]lHRb75a
%@QEJ_1DS]%$Aq^Z*bba^X)@HY?T9R;Tf1jQ8j\9(mnktf;&P5FK\ZrgO5"[^:l7e:+3Xs:2AD;`o>ul/2N$4N*P^60-dLTk<"rQ3
%j3`.LnTA@#LZ@Hj-BHW-))ID2XBhdCkb';B#Ak.!!Te5^jpQ/q<jnm$B[AJmd>l@8n*"'A6GB4ROa8k_gh8)?,7*(:;N'-DTJ4i*
%!.?5O(t9M^<lNpJaMX'7X!,`s!LiGj/b]Ij;fd7$O6_LR%p9>2]STb1#dko/9.RH&,b9CuggWY6&,2a$9BIUF?C='DjMQAO?JWkQ
%k$TQU+eGO5\_Z>@%ogBrqil"%>7h((JuZ\OU-Ml/N08lpT+YS(7@=8_6@MtilqCh$R*DKO-Qf&dRCO+aer]A,+AG(Zqkr."O#'eK
%IZ,KVh@7BEb%Ms%9n^8u@#7Vk7?g.-.)TVg97Mg$ZD>8XSFVs[;c'5S&5l7@1GJpT"?/DWFPppKgX<tW;*[b;*a]Xk^uHS2`8#ie
%cTAjA5on"tn=aHi:dfF1q"Y+:@T/Yq77,l#+SaZ[p4DWrk"HF.Z:\e##n+pX_$WWErIoh/H3UKZb4?@!8F#>iC:Tn3+TbOJ3m?$I
%.U(5&#'creX.\E71+bRc,9ecp5Hc2@qC:'u,LpN0mIf.G#RRNWZ;k(9"JeL!>-8`OB/K("`smX7"/o9uSq=AVKSfC?L&H7MbL"bj
%;UuHQ3/\BeL:@>HRWQ@V+rQL_$'fVEB96%Wocc!#M+XC,[5H]a&u9qC(8T0iVbiN,(@'rN_)`82+\ka&KIZ"H\den_![3U_KRK#M
%a=n5bBU1k<Zb";rU:)8J!A&mi<g!N7gm;psVc`hT85Th.Y^mc,'MtU8(M/0ZYPKiFSfB5naWH_D`5]%pWfjZR?,cI@%a5`c)B[2U
%N/Nd3*,u1%GcP,F/d`ni7EWa:A^-*a;)\b4o%Vl_Jae9Ubr9,H)Q9(E("=f5\tEeJGsrEC_[0?lW8]lG-aA!%J<3]e<&gX$F"pc!
%r_OAf[\iUZMPRMA,"//Q%#/:0ag6eOo<@+TM6bJ!HcIF=GnD(?!.-ukBq3eU_m!(*KmcJ=B)Qs*58[bYD-aTl,EjMZ^gfSp)>"mj
%]8f^sUg#dO#P*Mq7INX>LbdJ;blcQo8iT\>S8hGOLsh]Fj1nq[iF`s%r'm,fjo_086*!Lsj1H)%T(.FfDhcQ:.u#.dYAnFME_K?r
%^2%NIE=Q`R>g>LBX$ZZ4&r;4*6OGm\M%GZ4Q*SXk#Fof\*hD?uM'?%1HR<7,&SpchRGp(`Cb'cdg?9,SfQEF2KR+>oABik_g</f$
%-"0Tdlre<t@=s(Db8s6g@i<BF?OC=T.gq4TQNpp3ns5a5)6gCqCG+c08oe<#'R&8:pnQHqCqet,_ccg%j$**CZ.aMB@Qr47]XqW9
%_EM'ar4Iun`g.;#\?gHC)0iGlmm;Xa3-4'^I)c\X(67@*j4L[k?\KnhKIe/KC8`k?CLrH:m@E)J:=cLDgGDeX*[]$KH;f3g9_'SC
%qj7p2E<3n_&[L&Z/rCm?k(o-JJ4ouG%U>ZCN(Vo#K3-raJIK[ETakteo$jHa.K\OceQV[&7nJ#"+Z412)Mrt_eU^`V"1C?Q/\-j'
%Kioih(ots/0\LTN[t6+;Z3i!6`5o#.#g-C$9Z`3fFrgdrXJ2BWW)Y]ZGP\BD*Lbii6_>Z_nPQ^@fN7@>9DDPc]reB/l!GRr\C0g=
%0F(RII4.f49K3Bq7N620p=*>0ZTR^_2k9%$Q?f],>W4C2^8Fk,E;!+OA_>t".O\h7)jHj1ALtFDdtg`!$K&3A3JD'M3XMXk;8GAh
%\@/CS$;3(c0kO7I0XrW3=,B+.fX7G%[HV7,5_4^I;IK"kA0T^ho%iG.#]<XB2Il2J"_lJ&ojdHneoQ1A[oFt;_:RH,'j<I;V;ROe
%NN(05+;Wd/MHh$eJ_&jdqf1%)@^3=U`@&/mTI]O1Te79tCc>c-V.\mW0!KAFfW'`GcI+Me8#;:^2;?1\E_Eb(.V13:rroqlCK=H=
%>^-*,J18n^;'.h90,\^t3k[>Let5E%66^YY[\/jIiuVfpADTui)\%5sb*T-N]Yo]bnL[,Q<gsEt&?<R=+tFP=+OT^kd]W`S$[W]r
%Mra1P"lUIt8cY"6WJF(TBM;<)]]\H+_lU%&-;/mP'O?@4'?M.R=R6YuO<bUU_q!-WD?@'fZ8<tRQb1\HN.Q/JBG#+W$>##K'^#J3
%<N<@gEM7P"%eUt;a/Ig!K3&$I!i`B=>B7*Q:Vp?#ZTCT(Fi9PbO*&$7j>Y+%(Is3UeiSPQSFif^/M9`cN^2!bg4BHEQLY%ELgNf$
%#>hr?G1AreV>=Nf$Pb+G"c2`".Qr+]Hkp4p7J',#Iga9XN.`),hW./t#&Jk.6=K(e9MEi;?>L`*g9Cq6T&pO`O&]08>u;T4otqD!
%1hnhoW]YSh@VDalTg,Qi><*#PWJ.bk39#&nM:&`R<gFmP,Uc5E3>?u:M(*?Nr.%b3-QHRaN$8BpXg_MB:)DG`^8m]&iMa-9oQKRE
%%2E6Dp<t8dL%56U'iORF6)0g\-SKuW8;oEBd!i#X$rH,PMggO5#TYd,ej&G+X3)2JVGWlgN]AK;rB][J'I[V#R`;j(i983NdR^N%
%@hML8&WgckFTYY[65!<$$,q2-_p>E"h/aH$*Ll1oh4,IA]TMjGJiq?TnPFs.di1gRYsoDu:tSuP[ns$&^,Ro-EIER3fGqVB#1q*g
%Zcs@VG#J+QaT@m'JkW'7'QVh`/HkNW/U2JiE<4/O/)>np!piZ<N!1G*766'@Pmb9rRnTd<%Xl1CqgdXHfFj*FKuU/;d0Oa[99V/J
%l?rktJPJo\'=sS.m<VA'ZJDUa;[Y!b"Qu2[G=H:n&kX!CS/Qth0M"Nkb%7?P\r+oL$p*7F6MClu0M&U\V+Ikd@HlTUB(Br\lt#-V
%3S2,RKVcd.2YB7da$Af7a+Q)-I_/pLr@79;^ee^VC36>P3<s6a@@U<Q`rJJ"T$/SecF:r8(Ka^B!faAs)#T:s85#.+e^E^1]>8/Q
%9FrtF2aLTS*q%_@%%B;M_.0!6Mdnda1V[3KaF8DYH?:h\-(8.o3S@DpNp(MiN#IpLkIfJik\+o?PFk92Wu!IO5t3rFkd:!Md^R&k
%o1l52&=6HS$O-:$`>LRV5(gm8k9e5s/nTRE?BG-Vmc8b9;ejD$gS@(P)Pa#\'Q,]\6#EF$5lh3hp'H:*^+8oJ5]FJ)%aV#fB;)uY
%guj3UXeq>q^']dtC,V(V(YIF4!k'8t9ob'8c1lIq&Grm6;K0XdMUD(;_L^_UrDh)Ic)[^bJFTB=e`h7TDV?nJ+ULV9D;#DQVZde.
%;j.Zi:L/=:HQOs"ODIG1`@nFkVCpk,P7-aDI0Pa`c:s<*?-W=k]d2?4hNg3S[NlVG`d6^FlZ@Ocd#.-+%kt5cWYuFKTj3=PCkbC2
%692t%)PF@#"e&X`RP-5Ggpt8j3V9&`\hdY]SX?9ZrR'[74$0(.A!h=q@lbD^^KiM6IX-,e!YPdk_j`,6_0NUuRH#JH6#d;hR.[eS
%_4^GG.nI,*3:R026DZA+cRf@/%kO9,_e'H0'Llho3aOCWF>0(>\\QMI(U/p@C!if!2=oSqK'_*6-doj@+IJ'SLK7C'fKm\%MNZ3b
%L.XU?eI=jEbpAujLmT['^,$W&'mbX/9nGUKRa8Yd%%fWH7qO/=iD`];>$PHJk6lNnF)#\gk@3S_lNPrpn$\Gqn$jbJN]J;V5Lj46
%,:"k5q@&CUKJXXGPX1oW(i3\3%kh=hG_PCP>D/,?n87FF@!$s.eu5meR]%tIF,Mhfl?`_r@EpHbl!2I1G.f$q2;SXaE"=Y3,FISd
%_>t7/:im\K@=WsS'#BgU"&00Q:c$<_Rq@'!%'FP*J6TtFU1`#[pbqk0@)chjUF!s]=ahb:4e%sM;stCp)!KK1R*Xg2DjSYP?e_+k
%#F2]9-E:"!-]CN%i^Rh''Q7BXU/`"d>9GpC""+Xba+c>;KL,k(@(;][F"/js>oS_]pke#5*+6_XApU^/(YIF:!k)Mi9odn39`0(I
%*rFLDa_t#0,."6<HjM8`&-hV[78NUWj*%Hq0I-hS\/-",aXX%1@!J=N#;A(c]PW_&M,WjF7KRfq=rsk:`8CBr1c`INhIl<pkg\ZJ
%To6J=Y*W\6^cMiT_<;l'Wsq++?uJ;RYSei_Aa&DO!R%W=IK:`oPZ)qo">(HrH(.uiR9A*cmaXSLh8p-P<u1;;ONa*Bi\T:m?t[dn
%fZ(EXBiDR0o'LH@p8bb<gtmrN30;EnJ<>!`]X=BJmg.65l4:^H)p6DCL2/kQEl/3BCE'S+ga(\,@'?&H2]+`6+nT;Iph$Ar\1B5W
%Yc7434N9Ch32UaOo@rqim$Dpc&6eKC@4Bm7LXV,h/UUEcSr<])OuGAn,(\bb]S%(<I/DEV5=:Qa&d$qF,5cR,#gSt[%%j</DcP,c
%j&M_,$cUf[$p-PCTjsI2Mdnda1V[3KaEDj<<TDSb!tM,pgJ7qSUIdsaO&-N1d!'"%=-"T"C_]oe"r69C+;.@E\__&NS!nte&/[6J
%CbR^UaQZK7Gnp22Ut1F0`<eHq4bLd'k9e5[/uF'/?B+mbJ!j=V%R3;".5ZYNL-?2?$pT,`p_a_2l)UVo5q'P!iM/0Gi4rRA+6<WP
%n;qTtR[Opo>j,?JofcdY*9<okj\8RBC-G=d`<eGH5(gm8cPDT+>g3+h]cd20hF>aU#4s,[.7[ZL\;XMXB;gTK>+IY3DF^bW!e\OO
%VScNOn0i5JD/N3]c/_a^j6YJbn1><i5Gg8)OY0YoE/s'md+Rpt[3<i?fh=#qI(NX>rMk<LTS4j(o+jb<&?XFjZaKUR%]H%QfD60=
%M)r$(1C,%29nT,dBRZFT.N7D&GA/0N.GP^3:_'FZ=Ctllda[i4p:#QhA926=relWi/uQHkd%+hS7tn+'D;#%J4UA^%F3HGi_g=DC
%@2&otPSXnRW#Gh&6".hK.;3IuIDB$*p5.rO2p[mT"-<jOZ!Jg/`XFm)R\;X<W?iMZ`>!6W'Ap"Qf>b1Nl86Wi5nKr[4MWm0T!1U\
%R#Ku1TJ85N6giCm9i1UN_'s)5$l3.mKQEaiU@nt<a>?6d"'sX9g^H7@SY7sW\N*FE@A^Mlg$`!`>BM8\7"GnX.fFp]Z<&I=QGX,c
%JR$hCoco"54oEiCQlN,:DT!2*DYKAFVC!6ed:<^Kh?V7a,VutODp$Uo@pE6.?utKeG`;61nX.V@b\u)@Z<uI*n4@&B@hK>0gb^#[
%gjrp4Q-TG_g5i`E3(J8*ohI4")O%FV1DnCkn.hOaCc98CpNB<:!4e?q4^QA:re#K1Ee[<%cepP)\]HS"Mn.`JQXmkH46\7%JVno\
%FgP0/IY-n>$:Pe0)DRIFB[@/:Luq8u*!`^b+:T^&Z`OERT^k!bC*6^(^k)1s$C=D\RA7;1FET`5D0U,C2M[44hCb.&^Ref`hn_b.
%eZT/a$u[V!W()u)`=+GRnea4-#@YT5cPK^2ge9["rBA#9C-j&nga&D4I!f.E2].B_L217&?4D^7<s-^pj:"+s?beSHV+I0'e_G)p
%9<qd`D&l-V![[M5VH7ZBR'_H#5dAO@.%OPMk]qVW<`hD1<YdAW/OZ5U:"Bh[2G<3?U8\Ma]RG,<Y#_[+mEMl7lPVfS3O^t[F#!4>
%om1EjG:.@G^on_(!f^Ik<gm2=TM_Bb.Wd(A,QfG56GmFIMAdo.bg???C6qk7N&qeSS@T^`0]^=8@Y&M'm;f0O`HZ08L7Gs&:`J9@
%g6fgtCi>YUY[,Rl?<:#-`;+'h,(+i[e(jdb3Nj@#"&,8l]"phhnR,[o@B:r\gHIoS].gE`/Y\=TNJUTs"(kR?VnP[AS+'^e)WQ%K
%35a%UBBU2og#+TQMg=3_QXdYC?clO)J(,=cRi;:m8^gO%AZQKZ""Ij,#H+OH(hL*?OPcg;V!eVD#Eq\*;eoMg)+8sKh%#NQJjH0I
%%VUF0QDf!a2hTD)B;gi/C2HZ(@^`bh2:sPH:=b$gn-IX![s(lheK`R>\[qt1Tn(3"(^fE<p([cQ?G0MX0YCIqXdPVG)M!EaWi>^n
%,B)6Hhia:,,K_.3/P_t<mg2$E3OO(Tk$m>Zlh/m_m[#+7S>1]?*'6+pQ)MMe#c?s&"uE9b)@UUo4fg?%l;Yh'"Y>uIS>ql%d4(qQ
%pMM\FhLek74^[k'mZ;:"Ee[<%cepP)\]HS"Mn.`JQXm_L>KNs'3+/ejD#Q[;(H"+f.ltpOccBHnVPSn)(KVH;\EF'.E//;0]hL(j
%pj?"MGkO:.VD6;0N]LO$j1NB4Sh86lWUgui`]5o%bi`Ht\*F4NY3o=E,764VK=!,F]gk4(&J6'9p2GOFNHZ.Z!*>b6#Esln28fQN
%G,kr[9hct1QUT]hg%bX(1q#1e%@]?6KFLC>]<fHo2K_39a#KtDO81o`r-#UlgBHF?Al,aHMBUl=hjCu-jI]?@GsEkkZAbSJ*PiR+
%-m7MM=fE8WO=:AKcB%*!re?f"ZeGLX<iWLcoa,2SMWI;Ebq60+iu't6341^mni5U_eLGAOF=3J"lqkTl&P3UG7-Zu8&QFI+5Qg'*
%PW=HF"*2fm6A?tRBdP5XOWri,fj&)lCB$3b4$^<VM9osk,+)J4Ak-nukj3MJg&S&5`\]=1Hb3O:h26)#V(sO-fk`H,):TlF%#`+A
%*FOsXY<h8X(JAjuKf,YKo7KRT?pmQGP+S1r=QF]UT"PZ%)0M\&`#$Ip9[KG#nn<&u9tem21!loA@mUuQ^KiM7G("Rt=GDF&[NT?G
%\S3p#'o;uK*-$Kb15M0j_P1;0(!&2K3mor9k"T5g.&[q92i.mQW?VZDg&$<U1p"&to]u<&@]?pbBc0W?YdsKG49di(GtdF2m^ML.
%frjep>7ntl1_gcoaVH^N#F^b420NP]OZl$45Ws/o:P@'9%$QsT9g)N(.&EI'2R`tk*`5(Ak6$Ib_5iumj`hM0SlD$l-d^Q>"<:pA
%RQKYP1%!`gC2B7192EM8+'=8YnL-lFit6e>7n^\Ei#F<ZL'j]so!*]VGHBtS!@Q@u!;92?,1Qr1B^XY`2[udi7Is@cE+5KP_5t`^
%G4rY#Fdu*_@lbD^^KiM6G)<[@)XTKiBoK'uP-+.(+9'L?_Dqi<!PC!4?^24c%$SmD'?ZT1q0YnEPc=<?*d0As1`qgUkM?Y;ALu)Z
%D0ZjV3><(O->1u\q[=MJSXUT4\sWB^H:bQ']T^jLpIQSW,84\AqGsNu(FYLIBuVgIVA\L>()UN%9j'W3,@Y'GgXMr?GQWAcq]7G=
%bnM>$4#pV9Ji4&m4^4Fb;s,r]N,rb)R*WaqDq>B&?/9AS;4oV#$?lp`K6Wg#mkJDZER"qkpi<0()ffa`/GfkI%.CZaTbH(2R(Z3'
%_X/^,?g-29J8pV?AoMSk,:'fh2`J6scE:gL)!0Q40q4)Hhl`;U]>.X3`JF/9)G?IUH_Qq2Oi^O`Duh=5V:8?AN(?DHEJ>Y1aEYcD
%S5;;]]Zj/_Qj70<Vp5a)NtKL]m@(9r&V$p^%$'Hsd+%Rg*CH?c4/R$QleD)ACfg>RE&1+RWc1>QB$K<G"hsTJbpX:JAd@]s:pgB!
%Alq='+cA=L^s$2C*3Ek3E_/dJcDg+1_Ukbi7H`o0XD)EhBlSl%S^64KcDeo?SVLq:Y1@'o[Q@&410e*@"!aG-2c20sDGDu)S<_+?
%68GY\\&nh?QH5^uF+U,g$i-Hp4a:Ft?^ePaQuQ0'CHeQSeWNE(J[<H92K_39a"Z['a)!@TI_/pIh;W<F75N4kko`p@3f>cZXBH9M
%0Ooa(=XX-&FIlPN&k//gCBc#k-f1@sbVm;Jo6a<['>^"oOho;CU<OT]5\J[VfL@k[BTouqp[*8e[VNJgfROo4;i?7Bo=\i^!&-(V
%QPkb:W7>X1A-,+[K:&sfihoSN0K(=R[^;AYHeQoU_/>]lg:?X<=-;FbnjOWpcEO;>)*EX62`YJk1%F"9'mF-?kG]>*X7Q10R9**,
%<91o.2L7Bs*?!"]/BG6AMV=1]iKsqb,O6fd>8>p\O*U!IEuV*b@d-o[<$g-VT1^Y1L&!$AfR&,t7rs9Q5Su2T>CjOFRgNZ/[0=(3
%0_l*,^2#n_">M./%eGH!(!\n)`MTS:C#;)7P%ND:+\Eos%=l0.Z5]TG5uLs%5tI.2-!Yt>p-i0kbTkaL*]<nS#8?74nb4=Q&I?g3
%(*=:4r/j]XJ1J+jf#]+b'R&Xfj6OsF!&Z#'JZj:g3a,KHF%+]SG;q)u]7G@Z*&t69<Sre?9k[]Kk&VHj*!O`3%S3.bSY;j+eXSAq
%=\V@(i2R5/Tn]GR6Y^"rQIu7?'rUGN/HLL?4>T."+jnd/_/$*nW@8Fn_egs"B:^/_>\69R%VGX\;9'u0ig:;a6guudLX_'pP.&1t
%)2a!!_q3%n*]Z?q[39>*N)9-pZZU5ghT!Nc<mr]^HZXDO#C(l:Xu,Kam7l'd-=e;S/F0n7beso1j6n39>ugh+r#Lr\!SJg[TI+0r
%PHKc-lOmYY("3b(TIhD)Eb0,-fM7(IH;K#8-DJIPG61hLIC"'OO<uH#U\==MnJTGFoj-WOB1b@[C"2,JQtEZFhe,A*J=WMW!h+n<
%N/8FB)KDHS"/mM+E.hBieM)YUDn>"cnC8gT_TPL"8#s)TdMB5N@h")Y*k%aTR("J@H;lLV6RE4&"R19#L*DTP3Wp9g%8I:]Xb*(u
%Omb`!3.^b?RDHt\juKjN8UY\o,W!ZoPegX,PudF=6RZVJ[iA6GAd;i2,"q5.0Kr!qF))EJQ%g8$\!X<A%(U@O!"&Ek9PB@7*)"Ke
%%g[360UX!Q2MJ=*7!;cRHtBTeI204u[1e-C9q(@5g]MWi!LS!0*kGnMC^'K.*,nW)-?N5.0n+B97mfZk#ZNI,&@gG:Y2*7Ge;!=o
%n\?d#-Nu<$f+B/'aS[sXh8F\9+PoCmr:<J!1hB7EA^sdon-[5]&$57]bVKF;m&'cP&SK@ea#tD'92/rs0';Z*B2K9eLe_Z/J7iC"
%daa&mW[T`sk$d[;psLP1HS%LncZhW5p3R/j,)Ju_!ZTUN%QLST"GWX2GnY#f>T0c#VV`$I8MqT2BZ1lTOUpTX6?;"_'*Erig&RWu
%2+oaDacY&P2S#kFQ3^XX(`S7#<j=$sd0O97/4!c3[Ih^M$YJTl0XmQuGTmkPH\4IH'48VCXtm$q`oSe:WNF?W(H$U,1<ZJ4@R1qE
%Cs3=`6\^NaFVu25/QlC3A;'Q?$T`&=9'6*[IKW8)R$7MN3ta13M@DNY\om[2`naIJ#sra)f9d$nf+W/[L<Ig4#51aDJ-_F9_(<ZB
%<X]6Eq6"Ek:qq!$(d^Sq*H<Bb`A%p7QBPpL7OB%N)<69_8Q1oUSWiG%<9upBP9CVk-q29%C0jhL#pq8[K,-0JA-?$SF9"j9UGJ)T
%$F>3Qm&<to"?&$pO!I$c*4NFJaQW*Rj&f!-E*WCl5U-5l,sk,e[`1SJ4214Y7ojVr;m:`8=JBQK3LO9-=]4'r%krmZVRpqb-,\sk
%go!:d]ZW/!0/AArHSoStFi%,erWKH)Xi\fAQ!Yb%YTM3np9YsaGsC/Mis_;o)a%L2$*MYr$CRW`3a`"?\5PNTh&Hkb0W'A3V]'?H
%<K1b'"umn4j).Am`5:T#l>)7+)'T0r'kHBK3l?RIfh.BhHaD@NaS&Y6L+8!9ZlI.PEQA:e!h!3$_>Rh(kT/Sj?tA2\.H0lujrs64
%,#JN(aCt\X.(g5Ah4]$Y,H!9m/.@)?c,*f(:L"pcOCna11F]!^0u,en2,t4S<9]KP5/jQNDdikc^]gC">lfN(";cpF;jCWu:E!fd
%$5Q20.X0lBd4Et4$k%-n!g`19Y:dc[*@u4PG.n;;HI&J,7fj@nd_^Kcn^I]R80dQ8c5h1nFe6u="RD2=]o&2Qg_H]C`"PbK1c8/4
%*310-R#K7^7DA:H%CZTJ,B/5)9=%s/`Y:1H)oBWZ=S@Q$Cg_8J`q)8/i<0@U;RL&j'jLpQ`"M+WYX8HXO=1j#8"8X:"AC5%*#FAl
%.1EC4RB:?g.bNC*3gc3e:6/jhb)(7Q`!fm2\];e#,#"jEX9!f<X<IV8n>^SE]gm#WoKL31Tu@JV]$mTm=Q>R!,pG%UESF@BaGO1)
%,V`.iZ@E+PFOJUQ)YqBNkM_/Gmp/DWi\=92U'rko_K9olAKkS@mNIjt;hr#?*%OQ(.hcf,I0Rg\eBFbi7@OG'dZlW5>/s&r#;:cB
%.j1*lLQM*CC$G__F/L_I=6<Q2EM1f-")A>3F=[bS"HEVi$*3$CQ1Y^9!>\kaS<6;G%7msa"Mo,`BT#E6h?XJNPt]$4k`eHKF[+rM
%%"8U(Be'=8&a]bQ0iOJAmHCW;5&)X(:Bs9R:bJrI#<(UuSFD4bN!>3/EVO`P6u9+tOm,O/.^5S4iFH4W&Z-U=,#llDPr$5/fAZ=\
%Pe?j-#fAO4+FKdUB%r\5\2#i1Q=rJ8TJ"Gk>]B3Dd3mqLb%ZWLS/N'2V?Q+RV.8JG.Mc\ggreb+f>)In7VWA@Xhpl](@WW(_kA\-
%BEp-_f[[kM;5Ks"#'rpEd]u#j0ODq*TS/R&X@s9QX,Q\Ua9Xp1*tmnD/!4d%pSgKH;skBf?>V.M1=:oYW6]'E>9K?7dPH*uJld5s
%WrEWmeP7q66"Rp]8@]75XNIg,F(+`21e)[o[X\_@.[7b<"E$XK9a6"VnXGh,)W@<:PZj.VZ>o.Q=\/gTV4L)Y.piQanqM,H`<>]_
%60/I?Lpgs4dXPXgd>fj-.)@OSZ/b<86S-l@7F$mnXhB(@ABW5W0Iqs/d:m#$B":qU]Z1a5;p*U7.W,Pqo8YCHWC@_5j?5!(AsbfP
%Fq4Q)^i"fHX4W2H)*okJTanPnqPlQm!UQr4%gYA-S>GTe'#5+`Jm+-YV.fU5ghGPm!(URRaH0Q"p#ECl?Ue((jU`7lBaFe@%fH[g
%N:]&=^2H_U"_rmjJ=%!?1(=bd(%bcsQ8RM8%[&5^Qm(lEbAlJt&5*M[YgP?#>;T]rK%/_$jFi3K6XE1j%Q?-p=&AB[0@)W#"Ye9M
%mlL*<%`BcWafW@7KU*(76YmrS8Sc-F/\blREb/&a$Gc;[-nMm,6Es$D)kf;(GV)!J!J]=`&KB-*-`DD8"98h"RPpP>1%TJ)pY+e$
%>,+,/bc+`6)!5gsQ1I]0o;&qB!>A6%KPC9]/6rU*J3>C8A@N+NWsXKK9]T6a<<\ST&QN(Qf/5=MY6r[:W%j^60Io9!aKmE>aa/J0
%(TUNnORnlMf1:U1:nd6]n-RXfoZb<0L9g3f'<[3.Ul-_Ic3eS]CJ&PXO[B"u*"SSS$Z7strU(+0TF#B`aMTC-.@Uk,\jI9r"04e(
%)D2F$bG"`cLKkis.[?WY/(T@g^1].(bQn]:_="<m^rg4Od?'bp1CAu/F6`B*0P05cl@"mrS').C?7S6B0JOD*P`3d^C23;W"RX`Q
%1BQ%+Z9%<]&/QH6W.]t33ZU\SN!)XOr.s@G@3R!.2mRZ5`91cpfVTCKE3t]u,srFlKnC;;gF5aRY1>qHQ+?[$l"L"CHF4k"aRu,f
%$\Bi:p3DpAd?.]['\6-/$-md=V*igW@,itaTgbJ]7\"HB$0Y3b-)UTa'f&=)CF"..1aGrWf%sAJV>Q:"J%n2RZWkOrkA%:W.d\3(
%VWolb#KM/M/je5!09$$m-jt67R;VRs;#34dWuuMgCeR=\9Llt\E5c$jjnI:%W1W;;6jDqJ:_$;p>WSb)`**Ke%Wi![3o+E3;%n#=
%P0n<3b^%nt'-LAj$iLkI.WD+po&U@g*rIN'%j!.@m1S\/,St;Dq%\PUL:r>q/9PVbou.=mpRoJ.jJJ3EUY<U?Xr2<%O?k^W20R`:
%rF(BpNE1*kbi()T4GMFc:(%PX1D7OjkZ^H&@D/%g<iK![&5X&PN7Q89d$0f9aS/qYC?a."]s\9K0U<dccq5b!$719>P^(N]=P+l1
%;i&sKOQlAu>a'&9!)[E\"Te[7Q>hibA[td[ERa-o16VF4f]3m^a9G26aja_=aEDM.#a<h=E**94Mk!)ID-Y0-"ed[f(<'mlpaA++
%a$PWq(q_YXK!f?F^0IcG>D?0CN%K7hMX`i>r>!@niZ+UY%oqeC@up?"ME(9JE`BK+7Asd.1WQp_(2^tVS[:YYA$#tT<R@QA_F>`3
%NU6gcH7^TQG\3qm9YjAg*2TZ;'1!@F%[kYI=f2bscF/W$+K>L2CoaLQi"fl@FcH>0W4!?.BjLC(bjH)8jlV1.VM*3u(??*-.kL#.
%RSk4f7a*DdRBHLJ0\Hs07MV.G5R!lsL7f^r_qK_7NFe?8a\[rDhJ,Mier421#o(T`jZW6$eW^s?>(aYMW#Z%RZOXf@Rp_>S@27C1
%f((VY8Qn#h1t!.N2=;XsT660%jYN/aN2W>ELKVNsW4<WY)\fLo(*f/g).bWMF=^$mk%q!\l7h!.$hthrn;"t1CV`=QBT9p<dP\l`
%`mRJ=%@+X^%m>n'ehHM=_)%W$"SgngGXH@M/aeV1RssV/*EKT.#_<a?U`\0UW#BfoKcHRn'th7aGbCLFC*rBf&u3%+U6ZYGm]L:J
%'5C_*Y^ArApl,K%NKlaO=EuMPPU=YUfbeKG&*N%.N5"3Y<2g>?8(OM)U*+M+V6Q9>N[gRLN>UJLL2E7HA-Q\/-WAt_Mg6l9p%48<
%'jc;a&5Q>q9qjn`P"4"13<`U)>Z/`p%'N&SW$BM9.D&d#3%*X+X+dc;GYiQ@5ajj+3etj`"#?5I02obDFSN)(X+h`+2[DCI"R[u9
%"$Y'KKN;q-ObKi1L/IOMJ371\,7jimVIXYIg+3Ms=s3mAYu?ES^lK"G]/_GmK=$8:7JI;E2QL[\38IuXQj5AhZX-JW2jiEuCX/H]
%S2"JSd:bZjL)QF[g.,h@YND4Bjabh4#HLSIl,"m/-*(^X/%XL:A\JC!5n5X@^Md/c*\X#'O.<qYILR^imF2E"<+j*p#Kp-eo't[f
%^nb4<A_LV8k5]Tb;s9<G3sr*UTZ[DqfCa/dR&kH\S^V@3CJn"_$Ac8>X-jDcJ@(7^/)5i+i)eIm#T-H$mAGp0WG4usnBL/X"KPs6
%S(`XQh70o2Np::;oXmF@2\tOEoR_\SW6j3.c\sriEY]C3EL9TJmmQ=&1ijYe?_\ZL@kJ+RVs*GU,8g-h`2a$iJhgrj:m&TFVU2:W
%kL./;YLprjTk;2q3e:>;c>laM'*WN!LP;-7YC9S>aU-?/(t9=[bTLY5UJ=r*_4Y8:1\@84ORNl2M?ku,0XC$jXW\s:,Z94dHI/==
%@2VMfj>(`qVp#m.Z8\_q'a[j]-YXuA)l^K=ldIU=ij*U%[K+1FZl/"$WWj%#40l2E8MSt9?n-K1$MI?S&FTh:]E)iciMpT,MCE\+
%4lGcY/6N@$ZH3d-*h'220.^_Q'MQ8'bG0jFZr'`DkTXeZRTD`qY"Ct1f\<(#%<Y.te240?"mMVQ]8dPs,0ee#:K;84`U*5L/gb`.
%!%#c^%B8o$8LiqTB$k&p[P+"f["IA1^(JXa\V]ZHZ,<K\&!*g[[<>M:qC'.@Vpk<fTW\+C+;-o>6S`CrGTAGBc%7AEThSo&o(NW.
%JD5g9?qG,T_j;TP<a\n1j1+$JDZr'S/fcM8o$'QC,TG93ADfgdQ=RCs`pLo*$Sn+u"dc$^+rir(M@(i[&")O9A*C$%^L^BLFq&R\
%1^+W^OfCMspaG_u$ER-n<0Cc?(d!:l>.Z:T-!@hO70RuHT"^V"5`7\]9NdT-$p915o.Z2>p`hYI"?&tuY9PG$!*1-_k"jN>+?r(\
%!\LXQ8V\KiKsD+G^j+(r.&5a'.RqtEa\J99DQ$4b^lX-5caHkR*qB+ujb!mcbl#^I!UfkHJ]MlKlI67ab8W-&[,hY!6p:3oJ6Q-$
%-He,uT]/iBK2ZdZ?qFi6YZ$MR7Pl?F!3ZDdk`CF,,]f!pU<Yh#[NW(HBdg7r[ulDRE\1H,7TC_p.5Ab7.Qc_b$tD-7J-2W!N:;b0
%0sWmPPcNFWiALpKL"Xp5/?.H`A#L(iFjo=)5eN:R/?@UIF\&m(WXBPagh:APZIPRW5&[JGNkc(2>_"8)0*i-@UugB>"]^g#&qG4j
%38o3i=alG[b)q@-V5n@&#O8Y(&NFrIW!q78+VWj$Ou%C2RmdF^N)$e%N]nd$]BS4OMGP9a=&!l=$Z"7jGbA38D4Cf:XY#)KWH<h8
%SSD5K0PHp8#RnXW$'/R6kJZ4bW)JB\q-rW.@'aZUcR.G+X,R*:Q1^YEF3=kWaAJQ9lsqJqY\KIBD4oP'`O$HHCMKjO313TuK-2JB
%X,QYJWZ*daW?1$WbE`MudHabe$_JBlUgYLOW]5Og)*,@ei>*ArWgan:^KhD$]9mEGSs9cko6hT7f<eBh.+,^/J)#u=6+BrqqmN90
%Mnq^u<<ORMU]$YC!7b[ImFY6a,^MA(Ym-e`Uo1fk,G\l(b8>B'\a+5^I7pG0K>l(N$n,6J?"2;S*W!1dlsN?m&[PmdmOc%ZcpDrR
%U`2>E)03VuR1:qZU_RjTE8>V$%"1$>)Kb:7]dmSkn1IBaqC_^%W*_nf`LAarC0b=d=<9.;MFPYTTMTILL'n3HHCYG/jR8_>.^qIj
%?&[:2hFL!(Alu/d-a:+r(C#^KRN";"^i$.>*lpbRW>RC.'Ye,;'P(bmi$%/U81c+2k/W\u,`7'7&oXGuR?o@M=Lo$!aA.@kjjJaA
%:ENtX=%\8ND4q5MLdhWNW'(0Q80T=[.hL4.k",\W-/k^._CsHdLQ-q'NufUIYC_j?<<WNoUnV0$E&mdpH[D5f9:"X"F"T`HO:q]T
%+>:Spr--e]O;\QBcohpcc@f)qRNbQs$:RiZ^O=/3Q<ERf:M([1c)]is$@2R;q"(_/2m]o.fk'f_"ifNkV0f.0%/%<+R40UW";5e1
%Bd!eVq</Rb8;V0u#E$T@-/GNd&f`<%ZtA.03$RGdAS@U*$aMa\2/#D"(P8t6oDjWZ]YQRjlJO)'Ss%'.o=CqM<7c0M0cD=G+=H[9
%CGLohI>/luRIpM*<Y`25L6)-g3ps[6?:`/)0nc%8,`ut^U$.85$55oqFm/#90.X-+OsuI0%i6ED*RVZ.Bs66#/>ZA!T$DTDT]kM\
%OgEIUc[6JOJQPWWKnB5&OEPfYBoqb%-X!mQN<s+0f.g$%d6SQ^Cnt!E.P>"e@W7DOQhr4/)qIXu:Mf,pUI^0F0o`G:5I&AU*ErPc
%_l9'C[(@j,E16(GoQ&qhg5jU")*!;<eD9Hk_U(81)!\XiM&A-<ETrSHbh(NMA4`8IUZmR"Mr0u&n:`KuA!lksK0p=Z`1RpJ&U^;2
%1`Un:1V.t6'UO#`jAr1SRFbgNUF$P`;![*fOO#\[M;3Wk(??6T'Xqqh#JN$dpdhBsI3tq'#$hMk2d!=W<BQQ-bY++s!(,"*_MRgc
%\p24J$X^PZdeSBuEiS[-Cu3d"52UbC**d6epLW^D,10]b_km=YMTQF_(EHf,>B]!k1)RaP&MJ>N,9.(]#pPfD^,o@D,$'nP[Uno_
%.YUJq3aA<BF>*56$1),5qD4>qCV:0c'OFL;`$).kJ.D\t0,5MLpKH-_aB,s@6+_,VMM]R$@uN%tV'eit7,U[t,t+YqcQZ_mIdQ;m
%6DKpb2K1`&lBgAe'3D7*ph9m:%_K#q'ni3fi\d#cZFXL8E'L.\(+^M9^XIS(me&i.XDg4lBk[-%lRlk:Bsj&?lgET3X/DC-=LC>5
%c4drkE)Vq)<mEZT5SCL/5:uP=a]C@/Q!Z7gpghc4%V+C)RSYZLaA)l=B;u(+?N$ki31Pq>lRfl:H$\VRaL`O%,mD).b+jX8E\0L=
%DA'A;_ZdTtNCjbLkZ,Ad=sLZ<7k`W.lb)*jWt%hPl?qU?Y!cp=2J"U7*A#HP2OTL=F,<0dFUA;WOnBrALh['>Bk2hfKZ4ORk_OG0
%m(<-c#Eh5%&-P--V@a2(0TGQaVFbIQHL+uZ<q+\JaTG$8)e*\U1TYSuVUBdQP*BomZZq!,6Fg_X)jta28ndb<&i>*s_N;K2gCaBs
%.Tkh(,#%<BEAi4d>RKBNP(6G0;2BP,VPn7d&6'@/5F?f&L/[5dp:M3j5k]"<_CT(Q+'qN.bbRI'pHp+C]Sbr?6/3S"BeUpuiRLOI
%Dp.BA<D9;ef:FZA+W4$d%s1%fauZDu=$V/1S-V/tmT<8lSJkBY%2KEP?MBZ$7FE\6GnOs1'hDP9)Ih)&Z4Sbr'Fj1V-qsb)\p.bP
%a,lQBXTeM,*gQ1,VlY%\b_l/IohMN!/a.CnT"a2t"R1M<e1$F,"B3%_ZPl?Yi#+$gI]bCuNJh.En&#Ni3AB\B]"<'\#c?fQQ62t:
%BC=\iZC#uY,W1"`qMmh'*@::)FTmhBO%3ED_qAp(md&sq;7n:d],jk`m;:IQlApZP?%]P-![i],P%$Rtk*Zb<FRb<a5nWG`^<"Uu
%Am[dAs2!1s-E:ME@B_=@f/3/uW!e72:a698bGs,S*&fNQ64eXE=BFpb7]Ns-c.^)F:6s6t9CF@M/MX=,($8@l?IQ;@_#"[^=N7d*
%0I/,YKFNr/0S5t)+"bT:LM;=8gTM.$MG84^j#SJn*Nbj*85-A-PV#(ZQ#*Jf^']I$8-3$8&gS_MQ4GtB&@CjRTW"?"O;D=p*\i&H
%!(&M/-Y6lk\IkRQI#>mC\E\%iPGiSK'*'*nFRSUs_=\hBlro&!(!$\kANAj"@\@dYeC'B)ME[aqrL@o?M8&%aqs)cta16Qn#Vut2
%?%rrf/[]mcO/N-L-Jt@)Mf7s?8]G7/nk-LZ<<U2#h1k!*LZHAD*4[V3P2d5*IUQ]B:l\Q;55#j[HK7Q78e36[22/H@guFH!S5&<?
%VC_+.B4N*H(ur:`*SX!f,[6;PF8!:S!LEI,AWaAL;V;^TMXF&Fo/n))@[a[%Dri)T3_8;b6Uf,29i)#[>`M3_Q%5P7gqWX8>F\Y1
%j:s;^QPA7:_%:&+?BO]/#$`s#m3T&T#gf`S?a^t#*FOW%!63amLRVc?N0nB7MNg0a@&d/<="-LaD@Ok3B!#g"QCM@d'&o6W\%qm]
%lYC^q8HhLL>)YbHU(k]IM[%k.82U$Kme?bsDY%HLl&?po@^=7UjMTYbNir7QQBdnW%I3;4<^Y78rpJuJ>rEFT5\Sdtlt#*M(M[-`
%Lei6.ND6%JDJ.YL_0_^W*7041d20%n2Ub&^<J>cX?bW\B"KXD39,7'pbbk:G>73Ij6-lGs.E0omjZ3u`O`G)nDGX4i]oK851a>>e
%6PjJKLNgtri$kN?F8*XRY/\HNXCcj.`-p6s9]4qH9KZYM2/RET/fJ4s^o4T2IDlVe+?Pe,Uqq9@@RNmQq@5P$A`mLeF7i3>ZMTg#
%SS%-^bF8u@-U(m?M%K%<=$H/.?$;"&?SQWR]rusR/U=sMarXMFb^[61(<_:K]H6M!2a4;FLM/!e:P%.5g.,_PPEt::YDZbg(`\[^
%Z(;A>XSZ:nbj4p/ej9;S:O\2$0&L?IGe2/goq!Tal5pdPStk'S=#C2P'Tb?Jq?@^:OU=FX:ReP%6+CrmHc<*SIQ[Oa'HW\s[T#J6
%RSF]KaXT:@_&DCueoe\B#_DV#MiVJTDti`4j)!+]F<6k'?#]*FaWE<NZt@^cH\$e!kuWVISo/nPr4:-D6DBeYlgWI\.GQTNp):R"
%:HUOB;"3W`\`-LB!NeLm6+<825DsZM)-Xo]_-3tqngCY@LcK>?K_F"h(V,'AgU.*f2+/0Op0WD+$SQbD,N4Pco<c;?G5N':#r`"E
%TQk:DSmi2eg(?h[*=BmI1s7g'[;9GBZ6^`&ms,i&>fse7\o>coF_eglNV.:iF8boC"(+o*j4A>dIm?YKM41FD/fRjiK"j/E@1k1c
%(fRbHZWK(\]DAi"1j>3tDB,7g]q6QoiBY^GemYN@Z`2>E[ec*nIZVS)Ds8D0V$GNT.,KDBMFaZ$MiGit#KZlKLpefX'/L(=CAp\q
%"gM(2-T,6,53;F&=HFHs^$R[=q6UNCBrfb2)Zu[Y)!iTcd:*Y>fqq6<eQe"Z+4V.<HfjI57*RU0cD-^#egdWWL)jLE"@`d)R_/Ib
%ZsIS5#K6S8%WT2?Xce@.9>;sT\_g[cP+_P`P\7>>/O.6!D0HlYVE!:WH/P3f>dq2aLE&K(DqAd\<bg;$6TH'm<a2T'4sQ@&)qC%j
%1HG-[Yh7i37f,B-ICuKRou(;mi6aofouf)G^$D;Wc#n,gY5+b>(Y"nM$heml.r'/i57'/iWiP8C?6C9Ip\Q?lO8Y](^/Hs/P[)pK
%SgJto;mhS$$l!9s+N7@oRZTLiTPqr9guI#d9Z_D.Va+mp#AGQ)SiIW.2TVlUe)e)M`C477j[d4`b=?UJp.K)n5^$fF,mXK(gU*E>
%3+sX";01p$&^rA]5H1mWI8N9OR9m-qU&bU_cF,9!%56(q:6mj;EeG]FVd_a7HTpUP*oF5FPM"7Ko5DaCRO5F0N'OTWQ&VDgLJ_)W
%$P^da&AJ?_euKB&NNM>5D)ejR^ji(iDogit]._4YLe\fil8]"^?l..IMC4%B>_T!KV,JgR6'ic,,#o4Jag[pRMU@t0Wq="1P@t*l
%VFX;,p=2d7=t^M>$3O=nJHmc`eA+,s>s05S9qKSD-&3oi.HM>&ogJ+dWn!sl$Bf9-DU&U&Ct%YYo;IgMCm#Om#Sab?3=Y"fNm'':
%??T-tE_q]$$#AN>VMJpLAGUr*5.P0N&#[Mt@Io9,TlN0.(_F.KT'?p#,c^+RYWoUE-N5mUlV+J?K@7%QEp?8oo&A-q*2K)?.:-JG
%]aPh?#(2k4i^.=Y[=-cH:[;5PPf$ZD$;QS+Td5)I)[Q$3AJ+Vg.O:sOI$ZGX2aE!B$4qOC]Wl5k\GT,=Gri"s;8qS/"bg+J\5hQO
%P)J:+B@P@+.6`f?YS@-HN4^oe(3i&-mj']]GAp#G0+7ooq'Sh;*t2n-]<-oq1cd%aDKNmf=J8QIO#tX3'7FN0GYRiN(<p;(_^RL*
%Q.?>e;cBjP1dg!4*=3B!b'S[7m'81(T\)Z3U\4`uPIi[-6VejG0tF]VlQ3W.`]c3EVp/SF$QfEnP%9eP&@^$JD$S)i17"?Ib(Y+"
%Ql1k!md@-%XhP;Jl&n6JT[C3h'2psUT?\>)l_;=85?<gm5WN?IR)B4+`aB=>61.U`KmKg':],W>J<Rt37s$!RBK`&PE)@:,>=FV[
%6/dXrP@\5bEq!2A5r<:AAUX@8pNf+,iAK]5d^6+_$9-4'Ep]gkIZ`/X3aD<+qC0?@EfE%]-G:?"V)!*g2!E7?NO-YC";lKH-W?D2
%d>Ba(?\5\6Sp/IW_oMHeV2rgo/)^e%9Ir_<=esU.fd11Ql5ADE(k38FfQnn2:>T;S=m`KXQK>Z.^c>j:8<s#T8WC^$#QdeA;F&e#
%`O5=t-Qm?a!:5jK7Z3_Yad=5T"<kLk2"dX7m]L&0Y`H/'KF8f.CL$L]S<t1[=!Vr*el8_aL"t<@`d(e;)>:#I@PhiX%#0S2Lj=P@
%ouYf0L<nJuo>sFmNthfsW*V)Y;R^g*"X_fFJ5K\J]u;\#_b>D^Ctj$SG6?'2VO'WGj9K0gP"s,A.<7W19OiDmhG+Ot;*%KW$;U:O
%:.1[pj:8HdV,:I2_VmUTBVLC8m7EDXNX$/T^0_$$cs^IA7dI>8OQpmi5]qKuCcoU?Ioc,F=&.*a?V[=c?5k?-.K8j/C>?N=bnT5(
%;#r]3@j8DVN[f3KM,tQ9'!P=#C#m0l18%QL6H`QS.WHqB_Lt3k0WF2De*l^e3"o7"LHXZm9NQoAgkBD[kS9tp=.&E51UqOgKmMQJ
%oC1V9_.q06GHqi#K.RA:Tip`ePtuohZL\4p_+Z6L4a=JS;ao1o:j\dpQVa1i6f2a70_W1@o>t3JPA=0J2`?n2n2I&s3?GkCY&E1+
%`Ck@u6^t%a$!$pK8jUsueo$QhbLl,KKX)C&feiUUfK&(rT2lO#*,]6o@n*Yr`'R6cKVf?i69W5tWn3T;2'He(5W1eHZ"UhR;7eju
%.,b6l&b-cf<_2l[838de!)Wn*WO^p*gf,r[WZjH,psdL0$EC,qLYT>C7t;r[V:HaSSZS=Mg1Pf`bo`sc)o?Alir=W]dVFn)(G18O
%P>EGWrBr-up\g8mp)_dqj=X,6@nS&%R<A9?6k]7+!#UoV:o8Bf`t?/*`<<,U*dNL(*_UslVTdT`0?Vh@i)YcQ%GCQ5iY2T:janH]
%0=XM]7DpYl,thYp'B`'m"rAH`36da?bh"!7GMaD:D?aO^-W(nS9`3!2'!_JY)8L#lI>QXDe2Z1j&TdO%L-jE(3KrEn&N%&/b<ob*
%(nki+"5[`f7Le%5iV-2Tj>g)%lSiOaOp%/^C7u,,XAAIKqiOFH`eJ9d-N'>Gg3(mN?#eaIcl\qgf?Dp<86+8G.INR`_ku_<bohZU
%7>s8&9$Q!8U0"J><6;pL8\!fbEpj]'jD\9&kN.A:V.i&FK&23omW;RnNKSCGn%I]nbnP]od*qV[dn#akUTYV]m29CFN:YViF-2L;
%0/**H9$=4pQD]i)\t)1<S,%k"I+&Om)"+52-1J<I`mN2*9d9DGMQ.<D%h?hH1@]-P=OkY:[1@;I,iqZ=I99lqQ8;Z<-=C$`Fqtf<
%3J+0`O_u1P[:H@&NjuT-3XI_=G]9p89QI3s"U7KEU2(+o@Wi*eon\p@J:N(Y#G'Xs>;9Agf/BV)/0XThX<K/U'A%pe?UMt[Z4E?u
%J>Cqo<TXEIhk:=2.j[!=fRmn)!,+*.jRnRqH)m$"YFA#s-q*2oNhe@oZ'=6'(WnO(J'?h$m;>PK,j?9O./YOXaNST'^^@TP2P>=D
%]<+d4jB'oM6C'Pt.R/3Dn3lTEa**sgARsF;#n!^`]-Ut)2@RQ&TB-bf*;_6T1\QF_+`q\BYbK5_<eS"j96!k]R-Pn0BWnA?*KZV>
%QA%Bl<%i!Rc-`s/mgqZ"e9K`A`7rRF=c-DuWbag$nrPG?GP_Geq*Th434t^(q8Fap1Z+)2Rj[?Wfn4?6-\rqGI5L3SE!MBCDl"^p
%%%i[pgqr(l7l,uV(;)1"mb-UR,:.>c\FHPcbFLeu+cj[N?Ycr]Q8%<hi8CGUX#Rr%S5!p=3LT??RZGEF23+5'="EGq>B+WDokhC7
%\O1LCb_E+-(h%@Md8uOj;WF[m*(%Y[(nA1X>b2^@1PhM5Z48e"i)sF#"mKp?OpJK=:]atpE"Sokf'OYRXq&fhZ5+U(OaJA2E/9^?
%@H%)&aQ`ogQ0_K[Btm*0j8#LdQ#"9qo4s"V.4n-.LCjD.lPiH5"3]MEcf.Z]1A=^WP,a`J/dmCJ2g<[q;[Sni4JT&crJe'UZ<$d"
%aoLGCn&fR;!/.a4JP13TprpXN`F7:l5'?N5O2uL-%pk7ZI[&?N091!D1o.V_j[pQci:Di0%g;PZj_rLj+NU?l[%LoNq3`\J7,TTI
%M45KY-O1*eRWC=0Cii:8$?KmnP&0iWi8P^pUQ-N4fVn`Tn^]-LJ=XT&klW5#'8.Xg-I1nd's16Q9)?pa7#X\]Ad0mGQZWP`Ek9$O
%J8?6r1i1da&rN-:#?=FfLH#h\3%*;EJ<^5EGS?MlTsgLT)H(!c75c\CVLu,gl=+O3Z;SFnJVo7CBG;qY3H(L#lRHnbp,`3`0:CRL
%8nURh_VUI<,6,JT#R2:!0N",AV=OKX]8g4K80eZ\`VHj*I[;q\X)Jf&9'1'sP0n4U+i>Ff).T\!FgVE5ScoB+K11,qLN\6`QqB'9
%m/B!pWP=,cZNPu7s!Y&Hl(duerZQRsic0%Zd*O,[5(Z.^Nuo/>AQa#>Xd2$seQ7K-R#?+/=J>9G#<uYs3;R.ld<uYKLAI=Fodt/G
%Z@X/6d#=G9i"S&(.>hc>X:QNs!+?jB4uN\3N&dbi>I;&u1T]4GpAIbSV.OVD^h6jSPJCmo*T1lDUUMcHYK_t*7T-c4rZL]qEjj%a
%+grMfA^Iq_.DDTMgHj%4n^2UE<?Z).fQ=MTd*kj_,,E.(eb'30_=^4H%qTu`EM*l-%!C0O6b[BWMP:>`%"B`4dLoHYbU'u$i"1<#
%U3&mW5Os\OF^lpD9ZfIeF5aqM7uGq(&%\C9=7S[Ue2#HY8C9oT@^L\=rJjgN$L%nBZ$O@^P>Z=bn5nUDai0"%gFT4Wl]/dJNoX.h
%fd(9+Ir24_-Rf0uhOHp3MsO8r__Z<`EoPq-H-2:D_kO0[j4+&"cl_K%S-4l'V]<T@40<$2h@@b&Z01$U?@K<Jp5-rPif5';H3uDt
%ZaDCB%eXa-gdO>dP%/p0EMj*+0R&IiK-\,A#&YZjF:pL*%u6c=c9Tsq%V=N,Ndn5'd!2bcckF'@Go_9*Y[LNo&#apsPuf877D)%(
%%2FM#V@WfKlYS&Q)U[-Y9@0kG@Ca!GKE!B8LduPK]KpZEQRO<n:gFN@!f_F/eTGJj%m<1#6C;m83I#uCgOi!kp_0U/Z>4*n+/$30
%V=V_6W\_-d979:['ur9Os$5*8,ZVVTnHi2se[DG%0<"^rZ!9NLNN.&SUIG,+<H1))"1rl6eHLH6-%pEKGTI'aj&(En&qG99W?\m#
%I7l5TqC251cO'ZVg8aY8Gt62J3oalA=Y&/r"6cgfD!W5kVG8DHGGL(f0QhhlQtl6.e@CA6B^U7?*D.W*`M\.(eFaHk`,LY'.BM&Y
%G%9f`$.7r,#uekSV@i8%VTrS?dB]42h6'V=hnI+[3Uu4"3;M6uchM/jgopXqe,ddO1#3X>]r?>%YOTW^T*K:.?,C$I7D3*o-k=J_
%VmnI(R9*M2%BAaA2"H<uo1/O.NMu`"iT",.pP.2n+G[eW(J(*t-<PX_l:pR/`h9$7WRF[Bal8):YCO1uj_(qg7WP_,J%K8\X5X93
%Fep(*!n<Kdkf.=S5[@am\R#;Z#$Wt&i#,@8;lM`D!:%4%96]3:3k$#`dL2X!",j1r)c'P#l?O_J^/YiBG@6g5"])U][D^PgoE'3m
%n)hX=obr"Di<`:m]K#fc^sh$M$Hb)JHB?u3k>umhj2SJT#o]DRNL5t5r^>6""*SOg?_Q^t2Dj7b':Q(!@RaZGE4X>6bY/2qE-bHh
%(gl^Ndn*[G%g,=%%;1sGZMNDcSF/;DScfiL9g?SDmQgs?%(<7U9K6<pCqYE`i,m5;+]u%1>n=_/AgZRHRa-0P:'R/9L=M7DE^%kB
%VS&4/#1$sDj&Y;h6IRq^g)WiED$W"rq\`+p+ZtG6[Qj`TJtnB&@(K[I.>BK`]&kNWS/Y/RN4WrO"&/H2a(_0mFN/BJDD[p5NdQXN
%doA,?AE<thf0+61k`)Gu266;<M5oZK$)1r=hIsKt0j#Dq'uA.=d">\iBY)\`>06?Z)bk89boMJ;7+4#,QN%%]f>;@Pd0lDG7u.]K
%7apJ4`!9F?gU2te\-L>f\dU7Yp)((*nR-50C,_M4@h*7n"&)enNp,GNKB\i-e#fE`0O6h-U<D.%QEFY73=dZH2\<[$DCh?pAWqB?
%e*Y*H="p1VI/)Nr)=(/;=e![c]Orp(St3>s;?pj[TtQctPg5OtM;t5$FG\Sm&C*os?(PKUD:\)%BZY+?!Rdf9?jEi0.94=*%WS?e
%34_:eCUcOFkZUmHoQ\7:1?9?@VIsXID4;%Ih(RMr2a$HU2_R(/-4gT[o,S"SrW8h#->s:K4@"!;!I;_6JEWM3`2gI8F=kT-q&^_?
%K?Y\C2i,a]h2e9&G^p`9hmLKG3aK7jMi2]'i!t%MB*@$DaqdMhU!.c]bM!X@"J%'2](,oqo;8D<)@<'0;8P<V"$lVKko4jOd.R5U
%(-DS=2*UbHr;b2Ue\Oq(#12HV:)i=)TF47Ec0tb,lQ/_)GQuOV"aEsl!9eh#l[/f-CF(`Ijr$G9&f8.H:\_JtVVJpEI]ag5T&0W7
%k@/UA?L`*=E$k3An8j$!G3g=G\\A1V4p1$&8*rB%!-EuI/S+nkTPK\f$9iYN[6:,NGn],sPMYf>qAV:0m0e<elkXfu\D_MN<104j
%q"tP#X_,'A'g>]_M@b'IiH)>gFk.r8>]]iNT>+)*Ht2C;)1qV:"[Bido-FeM5&WN:$(ilhnEE!<)]!';'VK>GI&SseVQ_F!^*H?+
%1Yrlu^=l8PkREG'@$PE8o`U2R->;3@\mY&^#89-a$&^T?o99bfSBc+95gG&%d;N23d[.35@MoIATI3ihW@Qkg!P)TXY1.&OcN/q[
%<nu+!#o71GaMqfmMu/j<CaUj<1N)+I'/%"`Z+To!MBefNe3I:A(LJQ:@d"+]E:Kde\3;rnE?/>;\e;OJ3n9\=@h2t;_[kc42__t%
%EjPXH!99"Y7Zs?onO3tZGk;-Y(U0"IR(,*l5:l$l%#ci<fZd#!@!kP?`Ro24j*J]fG<>od]([(T%:FSBZc7)40^cCh)FY0E**\dl
%B]]>SY>\_0;gV'N34;h][,;6-kHtI&l3>6WJih+<-=D3uiG6=0'/%So)>*%/`Mp<3b8egG`KsEsi<]D%`@8SQ^<V^rF6sb&.uB0?
%(=_&k`HCg@epbNr3]\+G$&^St%1PG;i`,Rk$-EK(:-mm<6!t4*S?\ARpBN7Pg;P:iL&r-g`pm^qW&Q)\WeUNJJr4XA&RC/)'rUWm
%%&/-Dif)D+_FG,9SDb^=C/fR@61--]:iS+ZW7hn7c>`>g',B]]US?p@`>Rtr)hElrFs6#d]_at5RECh3mm+jsJs;4>6H,:EiM1m*
%T]2>)mEr[BW46/NM@;XEEP8Xrf*PE(W@.DbE*'!Jjs&l\&f(H5,17L+632sZB]kI2E=T,XF?_JL7B@3T:/$%lAeT2SJVd;d]*%&B
%_Sd<U6Zjh4E=PbGEan$mfUg2%Iph:6oS<f.-I)pYSn)j:@8ufXO:6Jf`0]!-i\COkF0o/:4<X/?2gaUf6K/EG@9<hmlQN%t=[M,,
%c)?bLK#Df.J<1EWfAZ&:E*&.2C5_\J2^H,up'#O[OSD_pn#8uOSAOD+AH.>$3Lk>kh99k)iX7?CB^;"H3&f@2>^M4DF\hFpH:-[c
%a*:%k3TGu9H:#Q\Vs4o_)\JuKqi&K>&b.0T[$B$X+QE%Z)(PiL!YOU^bmGXR,0h&nf&0$9q-=FNCa.k3.`k3'$jdMQEpNE,,-Jfq
%B6P>YLq(GU5BS41rnVa"H6_F6c.<ic\Ie;An$]GZ,#/mO.R>?k7/XBLlW];d&>/5_k^sN[B5@efrWs.6[Q[l?hLPCV%pV'pEE2/5
%HcuqTlgU@sZ2odQ_fuDF+O1;fILCs-Z((kh%mYMG2o]>.M!L"[`1HI;aW-\VH/ml_V-\;]iEToR@"U]%n>V/7%V5g!f;0oL+oDfi
%52p9CLe)3hEC<8`gK_Yc:Gh2jX:b$kZ"*EZ]aqpL033+,Q9/1FDeO8dI;'<&LF/&@6?FK&K#/+YLg#=^_Pat[Pmh()Klat7Dp1;:
%n0tA4H\'&3">9Um&di8&(?B*V*!M8<'mDSN5,Z!!GV#NWM3N\rf-_hk9!6(*DZJ`0"bK8e,S86-6db-9#Y0Gglk^e7?\Y$'%>8fe
%DAeTb,b38dnn05<b?$@r2\J<0d%_:&&e`Ktc1lSh_C%tH`M8!:cTs!rIDN`I.LgPoT7QKg7Y)XEJadG&aK=t:_RZ5q#<r=L;sqKX
%_b<>jUp"iE."UlE_N>-OcTq8i9W*@Y83$A(Ds%>AVZ\'tint/hU22u#n6ONj8n7l&%/q0.^)Q.If1#TX)#V&_CYqAA]aeiT_nZ*7
%%tF2Ch`La!NT'd(Ig1Aj1oNQ;^Fo%lr\7Q7M*269P/GeUlQ:4ciu`A[.tZam?<C5HLW_q^%ti/Zo8F7-6Xd$`L2_spGMu!o0g_nW
%NDoEspsZ)WjTnJc,P9H-e3mtW4hC'D/[='.US_Q\<RdN`>m8eT#N=7(UHOZ/?1R5'L>#2mQ]]JL<(7K*6%Nh;q8De#6Csl-\]?sr
%YfG;KPk!_;ED:.rPrCq!7!ca8^:n;NcB=(apBZ$rO$"FSH%B1A]Nf'iCDh&>4D=)`A9+8@.-gU`JnU38*_4AT5(20]QQc,F`I+5S
%+4FE:N41e2;KDi%@q%jNHcDP#=D/M)3BUY\_pN4;J%X8_rFs[k"$*GqT-NX\;r11d3Z-7^iV>76J65rldgIKZg\dYP)Lh-&"+'QE
%]XtP`-XablqB@>m;s]-TD1i,A[/&sI1S<^.5Q%i`rtY+L^\^7qr;6NfGCTDbJ,0\*pW#LIk^O'/L3>,g#K$6fer@72q:biJ:OgQV
%JOJ2!6<+aVY7EU-g4VZ\T@Q9jCUB`c\AoblPJ?o,a'R%4Rio'J'&r;*7o'FQU916!H$oDZjl\;qkuV-DZ;*`sRkFR;ncD"'qVKE]
%n&^A^5'b#H462>8rM(r*Hq?`%:#ako>%<^/\H4(/#;*#p%rced]P$Odp#\\3J"/Djs6ShXs6RAkf&&!%qX16/hrB8ND^tdgKeU5o
%5K+^UWumdK'2!=igUE0n&%0Yg:Z)/u%`uDq55t>K&`<;o5*TuSm`?B&P;7q=eBY4O"fM[135XF.k&i+WD-?.7HEBb"p\<$Rf1K."
%>!-Qu/<0@)?M)^-?PEc39tXpZb7E:mHec9k@^E<@m<,U,fBX]`&$"g@SWC;:L/+&D_m_jP]:HX,Q8S^4IA;6%K_W8Y^ZX-1)tg;m
%@F=r3`D@qf:2]:jCshh%?[p_#I?j]*In>QqDX&/VIDsU4K?4T%VK&Tl9&1\pAJe2>YHd:M(]F!d(MuBJdI4X!^VuqLoH+jN5@+b@
%Wh+CC2\nR4eaE6g+d_<jI%U%:Mgd;bpqB2sW:)rLN`&Z]hARlcX)!]DCXK2a[m)E>*q83cIo2+nQg\^JDPT@\16^TM0$.>7M8)Ac
%;Ph.NU0fSMl,PI2J'+MCEsdD\7IT9YUA<ig:e<bjO8#4]XYTCt+'P<l/G_QpHPYGoo9I%*dHs)@jk6A0>7ZYC+0UDkmR$."X$s'r
%kK=C\B=K2:Ig(a:XaeNg47G(,B&>BsN`uS[$gP"3cD'3$o[Ak.FSq(d\+^l`hdXuN;B-IS5@+eAZu:41WlTPciI#Z&*[cBfU>PR<
%^2MEfq's]+^!#rMB`7I1W4T(58U4gn!cq^ufUcU'qkS^5Mr*AM?X*0`Y_@\iGDqI?Q>"i_G`H-Dd;LZ6l,PHgI`eDBo,`B[lt8mn
%>I=BS1"9L`\%E2>q6*"FT,`j28`-r>T1W4ohj1K_5NK2!s7#dVb5]`^cF<)1<Y'[j5<j>c7@B4TO*eg5JfC?<a$qiA*9,##>!bDa
%/jH@cfLtN#UZu2[TtV%jZf%"7HO,K&VJJL=-mD/'chDR^?>MiuM_7B?3`#J]"[fG:]FU5LTOhYS8929>.7F1A=a*tUlol4;Y0C^,
%b.2p_-0+>\l7(uk&Y+8R\b,"H,.r0kSBLf.G3QiD]8,>5*p`40?r<5FI(<9V0<*X^rg[/bZTTTceYob&qKskP6$%V*o>)+e%?m#`
%Y=6-VeTRO6Xd4nBj\i<lp3;&7[OHBcYiG>kh5(Ba?)g9g3G*^:o0Q`8p:*4>SNWDVMshg'*h@3kMl&5s;ZD'BV+,o@rKp&Nc]RX<
%V1QMSIMmJ2No"!5cM*jMYHk"[lQ]^3dHlobK]ZY)rD[/(oj]FL`;@Y.Ij\gmNJ:JP8mG][c(01A^MHp"p3GgP+]tsWIT.Tp?n#&;
%jO),ZO"A+Mhp`WQ_p2Ndb[j$;R`j8QT1\VM3;O/&Rch:l9>=oar"r^RSMC*,3eYS.k$Mb'C8?,^rq[G:VWW<olZ]h8o0!?K:"GO4
%oAT-5Y89.c,8?G^KJ4sk?i@>qYMjX(=Jj2p>ef7hIJghZFh:Kmc#AGQX>VD6_Z8@k'K(T;*ETK9XTP7Cab89>!oWW'iEpl\:VYnh
%r29-8a0C-8K&>ZOrtZ!&"j)4cs*F4u/d&'"+m-c8@fu\pVq.*A]D$F0GA[7@L\CU'rgq=.CuZV`rY2('Y;]KD^DWer'\`BFVsAX.
%3;\bjl+bcaUJ^b)"7I0e_K6lhDjq[!8@1b_#_hm%)YiVu5Q-J?QCfr%pUp=ZADlWq8j<'S2c`#*IQG5!nF\^>jIt>D+(p&S^u#MV
%^2Mpo)IIk#3&qCPJ%]$fgMZKRf"bL>)r,f(fua9G0^oiGRC<C'.Ta._h_?u'l`5PU,C&kH%/e@M5Q-J?et4\dqNh8#5?c5g%:"Cr
%=tKqt*(P9ii+P0arFpW$7m3F=4ThlPL$dG5`HI)BT+-0rD7.!*e%eronG6(M#WtPoru))jo7#O5pdBL?dN@s?VUeUNCrA&TLeI;S
%%/e@M5Q-J?Sj-fEIjp'FUG])j"(,u?>8b48P#EJ"nWc&^O8WnQlhh=ss!aJIr[?(hZ/;P/5NQ6jX;:BZEV-FCI+GKMH=nFOpN#E2
%XF\^k9`lI?erp`Nn!P*\f1*!ZBgheJ%K,n!T74aZgJ8^^?OH<$(sN]2_"H:uX6l'>k[,5&r5tLc,XN@Cj36s1peS`?os\L/lOS8#
%h`\Wb\"EZ8iBN4hrGU$>_V%+g:aFZc?!hB/@8TugjDiS%j&A6,C9$^,VSWd?M4sr,?'+Qp<?ka'L*uYT0`8rsp7aU*\DQ95:>%q;
%%RHa6#luE8OXd&<99kHRW-Sn)N`I%ZiS<4]o#%m''E\i'\M:2BHBdj"]9hl]M47,sVJi%'DNMr+)L4:QQTEr!nE(<$BbDo0mRK\^
%(4Dt/XL\aJ8VSAUM.Yr9Lt>05HE:'7FH,hH7(R;Yf6hZ4aWoKd*RUSnIcmip[]D*re9*<[SoR&R^![Lr8)?VV0NXnDQXOGgI_(?&
%(,^$l*`L7QcfU1p+OSX0Kdk\U&7K6Aqkd(C^\Z?UHsSaTUYk&Km=Hj_W;AVZ`J,ta`38>Rj1P6jpZg=IFN5tFecNLq-_7j/>4<"h
%X,O/fX<LN=as``@g*-"HH(12`24_?U]mc"WeFtnb"$>p`ODEFSDu*(#e#Hhk;dg#82VdkhRX0+LV9N9R4FC/<'`/LpijMQ#Ba]6=
%J4rGsHrf>"LtCF-N4%7p+S=.K.oZN]m\)f"6:ntH'Pb+ee`Uh]Wh`J(<8HnB$ZLr<0/[EA-bI`_p#1j0qGp&BkM]05\iBD2hIe/'
%9p`P1.IVlUn^FV#1&h1GiMM33SPntuOp6UY\Po%%K0Z(fomo`$+B!9GBn75G'P:JEB!H*"k@_8H:p!)L#i9j3$8H%=>Ej`+*hP[&
%^j9_En&6KWeI-2oHfPdL'!="Ma\bC/\gfqXhEXrQ`"M2U;7!F!D,KG)m:+g21+VCNEk%E%)F^eL6WBI,GKnp^hr@bBLeHL2R`!`:
%=rloEV)=sRH$qO7:!Hd)/:]1GMcaII%23%7FL`?]m<;,TdL3phfS:2VVT(!-Y.DHqAs'Q1S*u1KI\7G<3,Y_=EG4^O<?/I`gut1u
%@Cd1g:s`Zo;pkJuQQr&s`V)"R\XcT;ZIJh%hF)K""Xk5[(Q@+BAYu`7(0<ud1lC=sgY";RYnG%61MiClUm&erkGsa-UNW\8+<E><
%@C?MFcuj[AhD.\<V]fW7Zac`+C*UYV@T78C'oTs<IGB6Pbp'Z=[p+n'OE7DsfZm>d)QBjK(:O)L8jseT\g-,4Xqn<P\?n%])s'EX
%6qKN_EM=Fnh0;lMk7Y8ajp9mOZ+6k?BNt(U>-lV[&*[($&YncFB&b2%QrT[@_@jNdQsA-t*Bc'npOUb@D['m![BAY)$\qgLQ0D9n
%?cjR?N-ppC_-F!-XN8@_M([^cPOFgG2lRB/$ba?#)S.7fm(M8i$[%>8Ar&^]+Q`,>dVraDN78J8H5c%VW\mSdCipi^\`qTVjYQ,i
%KmN5O[rk8sq(gJ\e*%=WlJX4rXGJHlVpg+-2']MU=\;IAa`gOM+*hGYXcANNB'h^(Q-+%uEf9cn`-Y^Qr*2#X48?.C?D6_[)U%Gp
%d7:p\R%H17ClkpNlBk7U5HXCmE,Y9`W.@p#GW[En[Xc/,)%EnV=+8k#0\^mI.mJfl$aH^6S!,3adG&)G"`DSK:Ub"+#PM7]:%ask
%Y/\@2-b.Q]DBKU<XF";8h86[#95)-i.HOB:gb0ahet+D:5iV5.\l'H)Z"(_[-&HJ!RHs?;/\=;5^PQa@Rf!jk>t;R\DKI$Ho!p(7
%#mm]0$`O\aa3bjRXKKF=QJ6M<,0GB1If5YEdGoiNM'SADRH3XY*#Z=@Jgc'fX;6YA4Z!K&ELikX6BI]PmRI`A7\"IP,ZVmQ9WqqL
%(XlAhl^?8cG$9uO:9P/KERCPEK.Vd!Y)G87DEOBZEqH%u:F`J9rbg;SF4IDhCIF;il0YnuI&@pqUt^Imf<%Z@hLdQI_j):!(_s,C
%2q79@5aO-[&YU#'#7iKMI?tX"_pPQs[[$+*bFR(77X_lEeu++nprr"ViD!)n\ZQ/Z<4U<pP#OJW=k6cp&)Z&=5k;KhN7ndpN-p:s
%#5q`JE=id)dgnU=RpgfT>ksDQBOE#@"ea%Q]J)C\o?]VCXJ*Qh&?rN.4IR!J/j?AK`QHa_?reP;b<h';@-JoUAh9pg[*)h)Seba^
%pS6It#%2n>d@@&0%+K:.f0(VEA]6g+T#uaT:@SfTML."]TWdAs>Kt0b?3(f`;adP(*$r!4#mcI?-;&uoUSna16jjELc\IAlj;r^(
%M;ia/dU%]9?8Tn',?k7kp"i"C5caS!X)EShH?*7VeJVFL#!!`JEq^O717L=:G&RfKqL*LoTr7(s;57N<\K64JXKL2\YKQQWd-"sL
%&ZPHb:9'N.140V.jA]j.P`X-b<HDB8R-N$VigqD`[N'DDKi?2jFSDmg^uoo>2!)Dmq*,+B(0+rE"-4C*\N]3Dr6ore99$2l&K:Sf
%e,LOTnOd.klHp;3;cKar.Jq]*>cKh?F%Zt-*%pg26(G&XkRmN-\1J$oV9;^+n3O\,b5i`c]&PKEf<9s;dUoSn/Q3)!8=^tAj8klg
%<TIO4Os3b`QUkoO1,<0P4.=2k8R0fU;B<>0MCA!n[V?deX>O'^gr%inFo"bNiQD_(1lT`,ODeHQd2gp!-n\);[8`5JU<&Xc?TA<9
%q8;uhCA2hE:(tC+nu&fEN8=TqXJa$2Q5_t%0q_:bHk^d8<VVNU8U/-cpug?ti7P8gpQCS$CQ)QrgPE,c*I]\i4]1&`C,qVDbLb&,
%Xls7=9^M:2][AT`EHr*WY$SY9MLj*&X7$R0U_oT]*`I8O#n3J**O^d:$_B<F?d9;T3I'bt4)Lk>f(=g&B4(WRfe`<ETqp@tNH"R;
%-`Fj_A'CJr&8PrF,"'TUj-E_:50dTI'<5(cMeFiR6g3b`+igu*>s^PncNNe`C47\DYnd"#E9Pd]agVldc;SSQVR2K>&_lV<8/mJ6
%'LGa_2Z;('@kZf&UGRLG#jP`/Ml$eaGH\8iI-^7(6LRg1d)oLRN`u/Os5YZnR2I-]WP0(X+*6V4H5S2S&"Aju'+5'%D-K"_&#Ci(
%bD??sEF*8k`:fK==l5VrC8a1*VFW209=32slSP>;\WE$>IQ-b,O1b=a-cJus?!!V4`bVBl.=$]nj9E-(,=/N6'Ag-=TW^W/fsl/E
%q40.k&9?@0k3@2]R@Keg[-)`Z"[PKFYa8H:8GTYq+LX8'cHp:8h4q'=Li_'mIB)N.YHC(22,31mha_i+d>'fZJYXK(O!.EF13gM)
%H[/c8W-H_,0&+Sb;nFG,iT%FL9F2XkB=Vmrem/KU,aV.FRcKg16i>h^Bgul?b!lZLch-".KLSW"^[Y7cpD-)"/\bjHlVVjGOYN9B
%#GpR(cUbsKl[mS5WMRMY%<R7['Xq$$eM($5T.6$#S`/m\Z%cm08e::ba7QIbGj[#3:d6pNkcR>8Vi1LDg$$M]9bc(/.?G4cPlr,b
%=>c=f]9C"P@a^oZf1='DQLW7?pZ&%,T-^(W8S$UhmBg'14uF%UC0X>>-tMPUrm9P.2;Z5H\`^LFT1J^VYm?dM.a7D5@^hHiI[Dsq
%N)/N[Ug`Bq)A!$C+UJEG32To;X%0$:='r,I3;9!-ga(mn3&_mQZ&7O8eaV&WoSfOq(F"j*3M8_4hM^j6]DafpTEUBP.hcP)+uYk<
%F2fe,>"e9WlAo1*a?&W1#<P<8f_f'4.G"GSB<#oZ,-,@2VQO$@G33Xs`9^TBqjhaN@>akonBT?.Iud%\B$J=g:kk<Y)<?\<T!;EO
%\tS#lMb9+n"?Fc!l&\dH,-ar:40LKd1\E;'XRcEn9pru2n#TD7SVDsDSQb0Tj)n#54m!B,8DBu^'@)!`^[I8;m/E/>mdtT345C#p
%=h1n2[!BtoYqQe*ak)#hUuZ_k!%V&9-t'ogi8R8AoC%r4).R16?DLJM?gO9M)br@(;.=BGRCu+SP8?M\k^?qDB+"j!i3:7*[k0EG
%!&^PA&;_'LMG^P'/A[AT0SAh)P]Zas\^7iO6,;Z<1j&ZD8j6We2,$`igPTE>0J-"+m#<9qEH/__Ktk6)]LSJ740kUE@Rakd5C'b,
%D9J1/n5B"XU\7+#e>_A`p[B`>Fd&',,0+YW_XT1Kn8@p('!'tp)?[ImKhl,s-<G5+R>@0Xb%g;TI7?behHU1Q4jJ8_)7V;I'"+?O
%RF[VD_f'DVp/WR3aMApAibB@"@(>r["$NOp.>N%P_p:`;MI'f9X^nr:F_#8@<--C@RhcaIo]?K$2g3^bM^0rt7fJ4eoOuA?G$'T.
%ob1VNap(a9Si1/2^hX#i)+2Jj\uBH7:-'ZMn<H(60=n-3D7TDm&m&^5MJlH[@9&b@79%PX:3sS3Fl+W"8KoY'_<\j!m%s%Y1&^q;
%_Iu&fYAo<CF1?Yok@iOngqc9R)Q=r\H))$hOA^DP[8H@^<[Q%EW(.U1Ce5'OWB=u':b/t^XHo:6hkau3`q@F62#DI'[l\%.,JZ@i
%*Uh^oc?QtNcc")#C2:9<l3CW"r3FQ7W.d-Q"T@]R.F9upXt+;eW!4.fg4)a%p;k<H#?H]RKh>O*)q*msM^u:#'8j+`fiD_,[QUu9
%\d-pC&,k<aj/7b?b7>="rj,T0h.N].jO)7edY;42Ob-Gk6R`[$`F5JA@o,TXTI>,s\NRspBfm,#Flc3F@0+p`VBKmJOGOTTCO)1Z
%*%XO$NRTC?9b07'pAgj<NiX1/Om1TlB"IO<!e`('m"dcb\<%UTH%0)i8e8WfY(LEW0FW1pCe2S&IWFcf$r<!*aGk=ZE/0@mL4'63
%3t@RYD&X[o1(ACJ$=a@&;5ZN=8V@o(#(HFaV499k1GD_Ki,GN,V46g#I`SmCGE<;"FV7C@0M%*g^!b-A<*Qfg/-'1Ah'pm8]H)Eo
%[,7Vn+0c:-h3hL8]%pnG9%m-.>r3IA3sO6AUYP37&g#&fP?9<.<HhPVSK0e?'kCb;?-[#a--$1MoG[;@.l'U_V!>(f:&;B.Mps1<
%`@4'i/Y$o<d6su)Cb*s#*Zh2p/\/A$7RWtY3mbeR#6psU&R+.^*M,8H=?QJ8OqdSSGX\h<!$`_Hf@3%8+?i`aesbeYc;S6mZC`:_
%`cPSpk"FptV`I24[t0XCgUNOrJ^u!Q^^.aUMQ$q67^rM$0V2G3j%-c*7-dUCgR=Z-q8&1m]7c'N6Gi'>HikM>V$V51)L&Te>n2i\
%RLUuR=U=k#KNCA$pD4@#S8n$I"=<!&nY)RfB(NJk:5XsVAq`mn04Ge^W)$UcH0=i[PPd4*3<?=Q27L0gN!DkW2hE%-hl6@^In=K<
%!#$?LAJF@B9Z_O6ddK!jW"YWI\pWKLcT[WjW(O*943[YfK03!Qc>5@38hef\*>2_;S2jr\PB6UPl"+<3O`Dt,VYOIh#(=`KL>:@+
%LDA>`f$ZnPGFTmi)QRU$3o\E,3sJI%o^ZuH=0T,69H:[NEXi)?a!2(a`'a/<HuL+OLhHoTX@/50L`^"s,FD`3:6bptKaU\P(`&1:
%U-uS'9&RH4,WaQ$e5I=/.]tk_+Oj\*1B:]BD@5MG0=ZUmXN\+H`K@+W7\Y[gZHQ"0QV9H%jI_aM*kc-*r&DVLA<Xc,6G95*0S&(E
%][#"'@Q>K;Jb"kXj(@jRR@9\XaK=?knd,Fdi0X'HRO>EnK%lP!Wn!C*Mt*:*?p-!k.Op.cQg\oNAYIY<1*!e=?#sV1>>T7qQX2-)
%8l[e_;IHPVZec+LEB'7n\=F5.o-+`Q53^7Um\i;_Pc1%A9ZVJ+%qVbV`QmFp@$eUr,lgK):uN!]ogN%UDV7dP9m$O'Gt1fDlCpHZ
%M55sZ2%*X]8fY=:RWHmBb'_P_6R<h\hT:a<"BDVZGCqZ"VB<P-hU@4!3NYYSg<WGn96kpnY:IZ)H&+8t-`]G6*c6&LFh=`.64WhC
%T_rH;OnRGO)=I0HAS0ahH?e60F$amt_<kK7HH'<JO@EKO2un>o?6Vmk:!-QoZib*^pFkAuJW>d6EKEIM'aLs:jgEWk#Ch6I3tr\c
%g40hPAZTt"0'p/GAPG5WadY=94,oCsLgD/tTi^(aXWQ%-RRX:N[j+.>6-'InQs<'brKPWqq"DS6U1*VT?&>MIO3Ym`hVl>16kuEf
%[7-n??Ec($9clZX!TYhfqe=[WRc3=oBZH+JGSgOC+8Y"#XsH95+n?@V1[PKXgEs^q(oH<dGtQ.c6h0:']uH=6O.H\@O(RF6I!N=O
%rih&3\cG/1:k`Xq`*F8aMIF<WHAY+T@n$k/1c/*(iP;GSPV_Y3Ft.qL./\3(Z>?qq)L)+%m@E[CUh7HSobCib)*8;r8)53`ZP?=#
%?qG?f^iJG6::5R9;m3[M-\/LT>KmoZP<;S:MO:rQ_e#+Xe<$onV;b3:asuFkGiZH/)k91sToFc9*,6*!_TLV(-m)hiZ"<SYgrX<@
%()sm(S`)1r6o9$:l=JcL5Y"qbR\i)FVAATNllTb6Yo23H40!V0Qpe256+`O1LV!6!>A)KjSFSsf.Cp=UcI)7QbMmc>5u1EPf;SA3
%-Q^%;'F,YV[ih!Ii?BI[XfnEuHPf;=4F![6L3U'@9*NLA>R7.I)6*c]l?`,th9?MY@85tUYrYbF&.jhI>mUejpF`:O<rK&,H7OHr
%c/iJc)!?!C#d&lc`LY<hI.F6]L-A"cMr,tQm[['(Xo7<*Yi//?aiir-Kn^&)e6BkjfNdo+:AS)20O^gGPFccL,N<;-rX"Y=TFmOD
%aOPA)PGG=>_,9dQIbmGs'*]#R$;tt)oKkZe9pSA=pi%Pi*\nI@h&cXj!?#`'mO#@):_Dtph9fc,OrGl*I')AViOAtO8+X)_pc:Y/
%q:d2s6R!R$(&FTM\'^(\UO)sKpo5ggf00n,0:a1[[IV,iaF"HJjsMhpTAtfh.)-C9)S+T+Q+#&kri9NJ%=LXb7ECHh'@YK55BkdV
%5Bp>>P9*:"?5`(h%oco$pSs5:DGZe:3Vgf57Y7DAS\4!Zlme_23\aACckk>?.RpS5R+"p,e&3#e5JMpd?W3LG_B'i+-,6@baG#.X
%F?='(289?!Bp-f8=laOZA4HSCFfU?E`>#Y(AIG"gj/7Obr"/=l[]oWHO9ePn=55om)'qF\_fQDBg^s=7p%W-q91`lUXX0-$i'],H
%?NLJ?[n\PgJ8Hf9fY13p[YjJT3R)IU>bO[;VA9J5/eMVK-#.nlq!aC2=p;27k0HZ3Qe*1!g"Wd[$>V2-?5K"f(]a]CW)1VMG'Ci\
%_!,f7_=0/88e8k)%CI9C,aSr="$0_PoMF3T<3[\GJ>IF[%bgu9Bm6<HX?$o'O.(LRWMuOFW:rZ6[Lot<<qeN5?aBJ-<5=GpPpLTs
%W.CeTS>cb\^*o(Zb-f3hjR=)CGGBc86d_&`Be52r&B--1LrV+UEQ/9&`G>i'S_>&+6CHi79?c`!n0uj/:Mf`H3-mP#Uu5;7VWor6
%C7/a3__706Q4VK#9i(<kAkNE:NI\Rek=-"ucRKAEY(WYlN]8#S0d9qcKpZF>]LHE8U2iU=-UJ<_Z@E0u.+1HkcUaeh.al7GWMV0a
%$@qEaP\;<.3TB1RVQ-)kFeA=<-#;k:?IPaB;-_fjjYeqS%"^,#rJYJ!\t!I!?mTE+#$umnSd%^4H_B1p7GQB1[8XH7"LKC+$M3[2
%KdH)6hTmGBV7=$=XOPI3NMX[3GIrg:m;g>0K/B`m,037'cmE7cAO//eH4sXrP,_B1O;GlRnE_>`eB+HOV!ag#;Bfc,aaTdK>O[t_
%j>f:$q='U.>QiSk8FXPT.IE8=;GUUNB]FhKg5`@B]eaL^6d1%X8IkJ,k7qiFA,/_h.#k2tlcq%S$-"'?'"82mnju_pd@2][At?d8
%Xg(JjV!fpW<;T&U;qq$s&qLbVbs$@F\u@3HGXC"1%g>N<:$05UbA,1[F\Zr97o!YhC>OSB0WH?Gj_Z2VVri@Z[fAL%g^o`@aX\@_
%QPK4fnjJWtCo@A9D7;60luXcfg_8JS-MgQ-a'_c[Vjgg1HB9<u8V=E@f958SR**hg=5Du<*O=8/@\FF."YUL*/]MOkOfAiFrZpmg
%c6QXJM?aa7=Z\7c/I00&ST2Y]/5a\DR-+>VOFEhorbE%^^(rdYbd62NEuZpt0Up766`QHi@imcRB$m+a@PlFtPk2cW%Vda+k8?(>
%Pp?-7hi*X9dpe<19?]7@fl62S&NKoUf,.OKCK4,A7H5%"<R[FOZ:>)?Jd3Am8.lnQm4\tc'h#:;#Ju;-M'u+_-ZF9l`t'aW)Ra(;
%IePMK&7X5@dCgqZ\\c4T/(r/ALW/:[N^U?'aP?aV:bQB&fN+cT1\oX6Uhtoq(PrHu=LgImYNHqqe%8Nj=U?!^gNRoW6-m3GUB/=B
%et=.Ph@+bFRIeM"kCbu8cHi5c86EF(Ogdp1SkR1(!boSZeKYC&R(58'8LfG(Z->?;-_ZKA%4+Q_>,Ngc?X1N'j(5T+m`&XoO4_0D
%P;Z\c&GD/PR#);QX>iL7@l4g@?:sQK#Am=r,5=2CH*Nm<d#B,+aF,O4bbb,jF*N@\atLS'$k'6'ICXCH1Nc&[9Q.R@gL1JEdD))-
%(8^'4;lWku=2,.j>5YVWCtFc.GWd_hQ_1lX150:$o0_l8;$9?]."Xp+4nDc5HN#YMk>"7?'Gj9WCT,L]N.`+pl4@%@D\n196k/^>
%_r%dU-hX)(h"T>NP)KZj'QlS(8`!a$;'RXuBB)+l>/B7s9F(Q%ECQ`Dl2FQt_RHuu-*YAcN62[(0ul4P^%0@GFEcrG\9O%3.@FV4
%GHpF09XF)qe!c</,V2Jl+b>M]/uXC/cb2YGnG9!l_f>5!G_[PZ@gq5^l)/5Q:8o-5J)j6+k&/DOrJ%3=c5<>2@]\2QLfDTtp%l"!
%@9pLXo/=RD-]?ATmK?7ZQg/PG?=m<(4OEAL`'T-MXD]Ju!6qXl9[IT"5aM*lPZ*/\@,:'V_@I.M$D5jJ/QTfD[,b.`*s'_Zg<`R%
%bAX#;;(!$-W?j#Wq9%g<&6>g/od&ee:(XE,Mh9V/@TniIlu^Sf*YE+^''2$I0^#!K=WopOD7L:g6nX5T&F6<,3b_cr<dH6c\V&rT
%[a#B?CYX2TT@+$[BgoUI\CW,XRiPW6njOcU:)H(\@C;dS)@s^%Lc.0Kaq&kI4Z!+Aat8;u9Vj54Wi/D*k-)^C0)o3W"Wo0lMI*H=
%h:K=rj2f2jA[aC/(guC=8K`dnM*V$#bN7#iXPY(*A;e7J!s>[D2c@`ma\.-[nOpbV.+q<,:=oKM7*WKn7A?sN]h$20>j<K<lOK2M
%I@uc$oT(NhV+%h]8?c2cRKQcQZT?(#_BH[2\6k$_F$YUpCoVJ+52T,4c.\2de[a#f6CdX.I8TTp*E)fGZ,rn;54n)uho)Frd019<
%g)($",0PP'^s4+>H[*n#P<M+!G6nUHC5E?.R2*A:e,XfVEWD!H=-X,K=9f,?K6@Ua=43nL$b)tH)*R.f(1"I84#m$Jp(T)AnM,nc
%%V<E<G7<1RQ91K%b2;m5WN'J(NX(0nF1N9*n"0?P9i@4KC"dLRo%AZh6uLpf\Z5'b-oMW+c^u[%Y4DR3+5Sfo6!?%M=;4d)R!8]`
%pdD%9*//RBVthD`W,Ocd4fea-n'L%?):gsZ?#>e+*T1+^=[+?OFo$&kQ2pTW]^d&+)CBSX1A%U@?::g\MfVg0B!r1qG'=+u_&:Wr
%JPW8HX6o%9M%uf8<l&=lg^M<N'.^7LmUTJJeWCsC1Q$)l'/*+%bO'S!jjg:O\<CTi%nLg-G]l+kpP:aW.Wsa(9j\_pdJL=`VpnsY
%)M8bAqMLe+-D!%\'K7/j!R`G]GEbR;\.`Y2nU>X@1->:Cl>,)EXIa!B<U1&d&nm[pSS2!SEoW'.4KL8"S+p:Pc((GU=Hre`?,T6>
%jTs-JabL.R&YdW'2(AnWe&O5MI**L&/p-AR%SXcchW`E.,5&jHMip"AZE7rC1m_6,&D_EFk^'$qq!(<%3[l`j*nV&;8a%Zm5+r)o
%l\f]\YbI58AB`J)D_2`I)<Z`(<7g'9OiiZmNq4:-:H=@Sn\&I2YCN7.R3F^4dFdQ@S39c-VcGqC4qY:I+'Q^UR_hL^@a&=Fq)CMk
%C.?P2<"*SBc#M8<mA$k/Z*\cCRu^M_(sH7IP+H\'2jRBCPp8[a<2>9eP">sl58/EVIKk;/h(teW#3dnZdd!BVQ2HG>WTNZ3%Y]oX
%A?\B-[jkO13RK,oF-:lXCp&-An![6=f-p#R3TkMK@t76XHS6+D[_#-P2GJ'`5[7/l!`1C`:^kL<F0%'];pJbqEg;pC*Q479NXdpJ
%*fgOJOnjNJGKu^cV$,FO70N9B=Q!u<s'%G.!]F:\De:>sAGgL#BD08X6#gG21jD<rW:d[X\^gnC`ReJN^!&0XSe'jBBjXU'hjCq>
%64F!MRRIIt7>^kcEk!2AJa7U&nNCe3BT\N[d9,P2<>K4CqUEZSL/@8mGG(]GO)klte&/:W.Y[jV8%^Z`p)O/Sg^bC^U5g#b3.mhY
%(/%mU%HK[Cd<45#4Oat4kVXjN^lBi?5RXJ[+,3,kH3YQl_k)okPbX:b='_/-BSiu8SJWJ27ZKjRr=3bl6fAPl_)N`[0W-/uG/f^r
%hg,s'7[1g.aZKkL@>9Lp:_?jF=p?*AXt\h`M[[Khjs!'BM,#VT*Z'Up!fXhQSK4`FMnBf_&3Gk=cHq*^1`fG!VhS*9"1*)l2PVd,
%1inkV@O-2?:[lqn5\qf=A>6=uJd!N0guO6Ab2*]"(u6^ZARd8i(Jmu`N1:et#]]0p%PgJQ(lB1`\4<.5C2"j"e<+h]6uU3gfj@Jj
%O"!6*Ph)'+#;Q!bm'kd4fgGH<$pT&Q&0g@X.#-Erl5-G@a9+HN)&['nSBrl$&Au[4B08if;YEDhS0aSd:mNL')AO)#iT$&T$[+OA
%'J+bgSsh[FQ7\]53'[a17[\fT<jKiC*fn@l:H#_^Yr^0@R]e.8)/,J_332+'Rk/INE*"EG#\&$YUP620@6)9=[qMbQ7drSeT&klo
%R3r&ICpYu/QiA$]GDu<2U\nas?6csU35C;IibI<-<5W1#MX7m`b],W@W-()$=$)No"HP5"HBV*f@+n@5Lj4"'B^9Z3kYk5_Tdej%
%7rk4=9+DF>;Uh9X._FN!k_P`B58CHqORu6kh(q'W7;'ldUQ>rHPe.(g6_Zd\akA':/pDcDp=n1&]I,sR5oO($'jXBk'8f+u.A=Ct
%c(IY.(,+u*%UPX?KQRN9o#OtigR&kIeaBol4e:]Y,Ycl'8c=nfN<G_P6p-\W)A.cs5;JHld")JJ$5:;MX$lD^.j@\\;.K/7\]NLT
%^`(O>hktp\s6DfI,PkCp@mo#!frZnSea@K(")+tAY^m"FRDUs&a](18^:SX@8]$V`6iOGm_HI,-&X$'JUWAuH,He14fh!7[b==b-
%d]&,F8'Nb]b^>s)q#!n+cqee=r#s`q1_6e37-:t8kTu!"'%.r9=H&klfm8j`m%M9<8h;&)1P*D!`[+ho>%TkQ%f_Z"Gd"CCS1a>%
%Lh<!HTiIla;e7hK$tVY<-E9FBP=&V,bYS[[V,1_pFgOuGYj3j?-GMm,V(l\'G#rJ#q^m?9?X--L#di4)+/?3uXf@^ee[df/Z7PcU
%*DXs="D]D\24](%!uU3lfT7;u+"]+n*c)[59;Z7,7agH(cKVfMmE7SGnUAqXlA)h`F@8G<0gRoQJa!>pj@NoqUtg%GNHCM58#dof
%m;po8a:(r9mRgh^2cVc$q;;Y2:FW'kV7r@mASCf)*5T"#-0JsMRLA7/M?=cmL`Yla3:87Q]IV4/1IQd4d]Ul)YV>".0<s([[LPu&
%&]qL'l+Is`?Rie+V-uP"Mq%*aqhg:,a$K\jM*^cmMUI:([D"=d0^J$BS`6@]&)G<+oC\'s3u8'!\i!2MVQ@(tSfDj_59+i\YC*Tr
%IRXm/s2Pns"J:a8VX1crl#-_]\HZF?k@K=pW!b5He?ur_EDNhg5YE4'6%jO-6oXC-!MS.eiJ#dDY=JSC*>YrL`)MsHSgsn-`##8U
%GpMYKF;qnHL@B+f;)M?&<g+/82T&O?8]&^W>-sfc>k?6&*R<),bOfJ*V9.a5bmG.g3*$LGAkp$u43A3IO-JhAK8A3N]4$^$P>^U8
%d*-o1n*DJa@8#'e?]oU[dL4er=a)3r"@;H[7e3-AqHp6)e$koD`[]*JbVL6'.5@+I/DaO6/h/JRSWTK"eIhqrLZ9693j+]J6WTuX
%2'Nghgd55U`(5B..7UW$b[=#%eZF,jemS-qg!V,1`LM.B('!gJ1J!Bif8npI_jY.7EG9,-P^&^Bp;H'=LL[D^N]Loq2n+tKE*)a=
%6S!2^r#KO1>JAp&oF%`Fi\G<Tj7pVqrRjorZh-_QR(_*%m&M":BGA?6#P-M\YL!VFWLj#6A_h";pQ2+r,ebStVuCU5Q+H,fE=P,I
%$Za!hac^`<[ACP!i;?hmXktJjs!(&6%d`EZpqQZTq=fC=hgY=ss6gJJrqQ"%poFGXpOE'qs7kd7s4ndsnE5;uDuTGPJ,_b5nDX+k
%s7cQ_:VZq-5Q$T.5CN=]5QB[as61X)r.bg_ptu,1Ikef+pAod:=9&:"rX]&&hu*LW1?ob~>
%AI9_PrivateDataEnd
